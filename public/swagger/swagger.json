{
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "https://api2.dev.wrtn.club/ghd-be",
      "description": "Dev Server"
    },
    {
      "url": "https://api2.wrtn.ai/ghd-be",
      "description": "Real Server"
    }
  ],
  "info": {
    "version": "0.20.0",
    "title": "@wrtn/hub-backend",
    "description": "Hub Backend",
    "license": {
      "name": "COMMERCIAL"
    }
  },
  "paths": {
    "/_health": {
      "get": {
        "tags": [
          "Monitor"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "헬스 체크 API",
        "description": "헬스 체크 API."
      }
    },
    "/admin/access/elite": {
      "post": {
        "tags": [
          "Admin"
        ],
        "parameters": [],
        "requestBody": {
          "description": "Elite 승급 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubMemberElite.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "승급된 회원 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubMemberElite"
                }
              }
            }
          }
        },
        "summary": "특정 회원을 Elite 권한으로 승급",
        "description": "특정 회원을 Elite 권한으로 승급.\n\n특정 {@link IHubMember}를 {@link IHubMemberElite}로 승급 시킨다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/access/elite/{id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 특정 {@link IHubMember.id }"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "description": "특정 회원의 Elite 권한 삭제\n\n특정 {@link IHubMember}의 Elite 권한을 삭제 시킨다.\n실제로 삭제 하는게 아닌 권한 내림 Snapshot이 남는다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/access/villain": {
      "post": {
        "tags": [
          "Admin"
        ],
        "parameters": [],
        "requestBody": {
          "description": "Villain 강등 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubMemberVillain.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "강등된 회원 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubMemberVillain"
                }
              }
            }
          }
        },
        "description": "특정 회원을 Villain 회원으로 강등\n\n특정 {@link IHubMember}를 {@link IHubMemberVillain}로 강등 시킨다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/access/villain/{id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 특정 {@link IHubMember.id }"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "description": "특정 회원의 Villain 권한 삭제\n\n특정 {@link IHubMember}의 Villain 권한을 삭제 시킨다.\n실제로 삭제 하는게 아닌 권한 내림 Snapshot이 남는다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/aggregate": {
      "patch": {
        "tags": [
          "Admin"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IAdminCustomerAggregate.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIAdminCustomerAggregate.ISummary"
                }
              }
            }
          }
        },
        "summary": "모든 회원 리스트 불러오기",
        "description": "모든 회원 리스트 불러오기.\n\nEcosystem 회원에 등록된 모든 회원에 대한 리스트를 불러옵니다.\n\n{@link IHubAdministrator}가 {@link IHubMember}에 대한 모든 정보를 불러옵니다.\n해당 정보에는 Villain & Elite 유무를 포함한\n{@link IHubMember}에 대한 정보를 불러옵니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/authenticate": {
      "get": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "관리자 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubAdministrator.IInvert"
                }
              }
            }
          }
        },
        "summary": "관리자 정보 가져오기",
        "description": "관리자 정보 가져오기.\n\n{@link IHubAdministrator 관리자} 회원으로 가입한 {@link IHubCustomer 고객}이,\n자신의 {@link IHubAdministrator.Invert 관리자 기준 역 참조 정보}를 다시 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/authenticate/login": {
      "patch": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "회원 로그인 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubMember.ILogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "판매 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubAdministrator.IInvert"
                }
              }
            }
          }
        },
        "summary": "관리자 회원 로그인",
        "description": "관리자 회원 로그인.\n\n{@link IHubAdministrator 관리자} 회원으로 가입한 {@link IHubCustomer 고객}이,\n계정의 이메일과 비밀번호를 입력하여 로그인을 실시한다.\n\n본 API 는 기본적으로 고객 쪽 로그인 API 인\n{@link HubApi.functional.hub.customers.authenticate.login} 와 동일하되, 그것은\n{@link join 관리자 회원으로 가입}하지 아니한 단순 {@link IHubMember 회원}의 경우에도\n로그인이 가능하고, 이것은 그렇지 않다. 또한, 리턴되는 타입 또한 본 API 는 관리자로부터\n회원 및 고객 정보로 {@link IHubAdministrator.IInvert 역 참조}하는 구조이며, 고객 쪽\nAPI 는 {@link IHubCustomer.member 고객으로부터 회원}, 그리고\n{@link IHubMember.seller 회원으로부터 관리자} 순으로 정 방향으로 참조하는 구조이다.\n\n참고로 관리자로 로그인하기 전에, 필히\n{@link HubApi.functional.hub.customers.authenticate.create} 함수를 호출하여\n{@link IHubCustomer 고객} 레코드 및 토큰을 발행하기 바란다. 본 시스템은 고객\n토큰을 발행하지 않고서는, 그 무엇도 할 수 없게 되어있기 때문이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/coupons": {
      "post": {
        "tags": [
          "Coupon"
        ],
        "parameters": [],
        "requestBody": {
          "description": "할인 쿠폰 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubCoupon.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "할인 쿠폰 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCoupon"
                }
              }
            }
          }
        },
        "summary": "할인 쿠폰 등록하기",
        "description": "할인 쿠폰 등록하기.\n\n새 할인 쿠폰을 설계하여 등록한다.\n\n참고로 쿠폰의 편집은 불가하다. 삭제하고 새로 만들라고 안내하도록.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Coupon"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubCoupon.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 할인 쿠폰 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubCoupon"
                }
              }
            }
          }
        },
        "summary": "할인 쿠폰 일괄 조회하기",
        "description": "할인 쿠폰 일괄 조회하기.\n\n{@link IHubCoupon 할인 쿠폰} 리스트들을 {@link IPage 페이징} 처리하여\n반환한다.\n\n만약 현재 할인 쿠폰을 조회하는 대상이 {@link IHubCustomer 고객}이라면,\n시장에 공개된, 그리고 현재 고객이 그 {@link IHubCouponTicket 티켓}을\n발급해가는데 문제 없는 쿠폰들만이 보일 뿐이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/coupons/{id}": {
      "delete": {
        "tags": [
          "Coupon"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 할인 쿠폰의 {@link IHubCoupon.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "할인 쿠폰 삭제하기",
        "description": "할인 쿠폰 삭제하기.\n\n단, 이미 할인 개시된 쿠폰은 삭제할 수 없다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Coupon"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "title": "대상 할인 쿠폰의 {@link IHubCoupon.id}",
            "description": " 대상 할인 쿠폰의 {@link IHubCoupon.id}."
          }
        ],
        "responses": {
          "200": {
            "description": "할인 쿠폰 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCoupon"
                }
              }
            }
          }
        },
        "summary": "할인 쿠폰 개별 조회하기",
        "description": "할인 쿠폰 개별 조회하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/deposits/donations": {
      "patch": {
        "tags": [
          "Deposit"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubDepositDonation.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 예치금 공여 내역 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubDepositDonation"
                }
              }
            }
          }
        },
        "summary": "예치금 공여 내역 일괄 조회",
        "description": "예치금 공여 내역 일괄 조회.\n\n{@link IHubAdministrator 관리자}가 {@link IHubCustomer 고객}에게\n{@link IHubDepositDonation 공여한 예치금 내역}들을 불러온다.\n\n리턴되는 정보들은 {@link IPage 페이징} 처리가 되어있으며, 요청 정보\n{@link IHubDepositDonation.IRequest} 를 어떻게 설정하냐에 따라, 각 페이지 당 레코드\n수를 {@link IHubDepositDonation.IRequest.limit 제한}하거나, 특정 조건을 만족하는\n예치금 공여 내역들만을 {@link IHubDepositDonation.IRequest.search 검색}하거나,\n예치금 공여 내역들의 {@link IHubDepositDonation.IRequest.sort 정렬 조건}을 임의로\n설정하거나 할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Deposit"
        ],
        "parameters": [],
        "requestBody": {
          "description": "예치금 공여 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubDepositDonation.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "예치금 공여 내역",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubDepositDonation"
                }
              }
            }
          }
        },
        "summary": "예치금 공여하기",
        "description": "예치금 공여하기.\n\n{@link IHubAdministrator 관리자}가 특정 고객 ({@link IHubCitizen 시민}) 에게\n{@link IHubDepositDonation 예치금을 임의 공여}한다.\n\n다만, 관리자는 예치금 공여시, 반드시 그 {@link IHubDepositDonation.reason 사유}를\n적도록 하고 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/deposits/donations/{id}": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 공여 내역의 {@link IHubDepositDonation.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "공여 내역 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubDepositDonation"
                }
              }
            }
          }
        },
        "summary": "예치금 공여 내역 조회하기",
        "description": "예치금 공여 내역 조회하기.\n\n예치금 공여 내역 {@link IHubDepositDonation} 를 개별 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/deposits": {
      "patch": {
        "tags": [
          "Deposit"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubDeposit.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubDeposit"
                }
              }
            }
          }
        },
        "summary": "예치금 메타 정보 일괄 조회",
        "description": "예치금 메타 정보 일괄 조회.\n\n본 허브 시스템에 존재하는 모든 예치금 메타 정보들을 일괄 조회한다.\n\n리턴되는 정보들은 {@link IPage 페이징} 처리가 되어있으며, 요청 정보\n{@link IHubDeposit.IRequest} 를 어떻게 설정하냐에 따라, 각 페이지 당 레코드\n수를 {@link IHubDeposit.IRequest.limit 제한}하거나, 특정 조건을 만족하는\n예치금 메타 정보들만을 {@link IHubDeposit.IRequest.search 검색}하거나,\n예치금 메타 정보들의 {@link IHubDeposit.IRequest.sort 정렬 조건}을 임의로\n설정하거나 할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Deposit"
        ],
        "parameters": [],
        "requestBody": {
          "description": "예치금 메타 정보 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubDeposit.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "예치금 메타 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubDeposit"
                }
              }
            }
          }
        },
        "summary": "예치금 메타 정보 등록하기",
        "description": "예치금 메타 정보 등록하기.\n\n예치금 메타 정보 {@link IHubDeposit} 을 새로이 등록한다. 이는 새로운\n{@link IHubDepositHistory 예치금 입출금} 사유를 등록하는 것과 동일한 의미이다.\n\n물론, 본 레코드를 등록한다하여, 그 즉시로 해당 사유로 인하여 예치금이 자동\n입출금된다는 뜻은 아니다. 예치금의 입출금은 실제 백엔드 로직으로써 구현되어야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/deposits/{id}": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 예치금 메타 정보의 {@link IHubDeposit.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "예치금 메타 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubDeposit"
                }
              }
            }
          }
        },
        "summary": "예치금 메타 정보 개별 조회",
        "description": "예치금 메타 정보 개별 조회.\n\n예치금 메타 정보 {@link IHubDeposit} 을 개별 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Deposit"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 예치금 메타 정보의 {@link IHubDeposit.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "예치금 메타 정보 삭제하기",
        "description": "예치금 메타 정보 삭제하기.\n\n예치금 메타 정보 {@link IHubDeposit} 을 삭제한다. 이로써 더 이상 해당 사유로\n예치금이 {@link IHubDepositHistory 입금 혹은 출금}되지 아니한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/orders/{orderId}/goods/{goodId}/issues/{issueId}/comments": {
      "patch": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGoodIssue.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssueComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodIssueComment"
                }
              }
            }
          }
        },
        "summary": "Issue 댓글 목록",
        "description": "Issue 댓글 목록.\n\n{@link IHubOrderGoodIssueComment} 리스트를 조회한다.\n\n리턴되는 {@link IHubOrderGoodIssueComment}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubOrderGoodIssueComment.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubOrderGoodIssueComment.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 댓글만을 {@link IHubOrderGoodIssueComment.IRequest.search 검색}하거나,\n댓상들의 {@link IHubOrderGoodIssueComment.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/orders/{orderId}/goods/{goodId}/issues/{issueId}/comments/{id}": {
      "get": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGoodIssue.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGoodIssueComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "댓글 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssueComment"
                }
              }
            }
          }
        },
        "summary": "Issue 댓글 조회",
        "description": "Issue 댓글 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/orders/{orderId}/goods/{goodId}/issues": {
      "patch": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 상품의 {@link IHubOrderGood.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssue.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 이슈들의 요약정보 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodIssue.ISummary"
                }
              }
            }
          }
        },
        "summary": "Issue 요약정보 리스트 조회하기",
        "description": "Issue 요약정보 리스트 조회하기.\n\n{@link IHubOrderGoodIssue}의 요약정보 리스트 조회한다.\n\n리턴되는 {@link IHubOrderGoodIssue}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubOrderGoodIssue.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubOrderGoodIssue.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 이슈만을 {@link IHubOrderGoodIssue.IRequest.search 검색}하거나,\n이슈들의 {@link IHubOrderGoodIssue.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/orders/{orderId}/goods/{goodId}/issues/{id}": {
      "get": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "이슈의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssue"
                }
              }
            }
          }
        },
        "summary": "Issue 상세 보기",
        "description": "Issue 상세 보기.\n\n{@link IHubOrderGoodIssue}의 상세 정보를 조회한다.\n\n특정 이슈의 상세 정보를 조회할 때 사용한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/orders/{orderId}/goods/{goodId}/snapshots": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 상품의 {@link IHubOrderGood.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 스냅샷 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleSnapshot.IInvert"
                }
              }
            }
          }
        },
        "summary": "주문 상품으로부터 사용 가능한 API 스냅샷 리스트 조회하기",
        "description": "주문 상품으로부터 사용 가능한 API 스냅샷 리스트 조회하기.\n\n고객이 주문한 {@link IHubOrderGood 상품}으로부터, 사용 가능한 API\n{@link IHubSaleSnapshot.IInvert 스냅샷} 리스트들을 조회한다. 즉, 고객이\n주문한 상품에 대하여, 사용 가능한 모든\n{@link IHubSaleSnapshot.IInvert.version 버전}의 스냅샷을 불러온다는 뜻.\n\n참고로 이 때 기록된 {@link IHubSaleUnitStock.price 가격 정보}는 해당 스냅샷의\n가격이 아닌, 고객이 주문한 상품의 가격이다. 또한, 스냅샷에 기록된 통계 정보 또한,\n오직 해당 스냅샷 시점에 대한 것만이 기록된다. 가령 총 API 호출 건수를 뜻하는\n{@link IHubSaleGoodAggregate.call_count} 의 경우, 귀속 매물에 대한 총 호출\n건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가 기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/orders/{orderId}/goods/{goodId}/snapshots/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.IInvert.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleSnapshot.IInvert"
                }
              }
            }
          }
        },
        "summary": "주문 상품으로부터 사용 가능한 특정 스냅샷 조회하기",
        "description": "주문 상품으로부터 사용 가능한 특정 스냅샷 조회하기.\n\n고객이 주문한 {@link IHubOrderGood 상품}으로부터, 사용 가능한 특정 API\n{@link IHubSaleSnapshot.IInvert 스냅샷} 을 조회한다. 즉, 고객이\n주문한 상품에 대하여, 사용 가능한 현재 또는 과거\n{@link IHubSaleSnapshot.IInvert.version 버전}의 스냅샷을 불러온다는 뜻.\n\n참고로 이 때 기록된 {@link IHubSaleUnitStock.price 가격 정보}는 해당 스냅샷의\n가격이 아닌, 고객이 주문한 상품의 가격이다. 또한, 스냅샷에 기록된 통계 정보 또한,\n오직 해당 스냅샷 시점에 대한 것만이 기록된다. 가령 총 API 호출 건수를 뜻하는\n{@link IHubSaleGoodAggregate.call_count} 의 경우, 귀속 매물에 대한 총 호출\n건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가 기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/orders/{orderId}/goods/{goodId}/snapshots/{id}/swagger": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.IInvert.id}"
          }
        ],
        "requestBody": {
          "description": "대상 유닛에 대한 식별자 키",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleUnitSwaggerAccessor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "스웨거 문서",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISwagger"
                }
              }
            }
          }
        },
        "summary": "Swagger 문서 조회하기",
        "description": "Swagger 문서 조회하기.\n\n{@link IHubOrderGood 주문 상품}으로부터 사용 가능한 특정\n{@link IHubSaleSnapshot.IInvert 스냅샷}에 대하여,\n{@link IHubSaleSnapshotUnit.IInvert 유닛}을 지정, 그것의\n{@link ISwagger 스웨거 문서}를 불러온다.\n\n리턴되는 스웨거 문서 내 API 를 호출할 때마다, 해당 상품에 대한 API\n호출 횟수가 카운팅되고 그 실행 내역이 기록되며, 필요에 따라 예치금에\n대한 과금이 이루어진다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/orders/{orderId}/goods/{goodId}/snapshots/{id}/openai": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.IInvert.id}"
          }
        ],
        "requestBody": {
          "description": "대상 유닛에 대한 식별자 키",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleUnitOpenAiSchemaAccessor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OpenAI 스키마 문서",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IOpenAiDocument"
                }
              }
            }
          }
        },
        "summary": "OpenAI 문서 조회하기",
        "description": "OpenAI 문서 조회하기.\n\n{@link IHubOrderGood 주문 상품}으로부터 사용 가능한 특정\n{@link IHubSaleSnapshot.IInvert 스냅샷}에 대하여,\n{@link IHubSaleSnapshotUnit.IInvert 유닛}을 지정, 그것의\n{@link IOpenAiDocument OpenAI 스키마 문서}를 불러온다.\n\n리턴되는 OpenAI 문서 내 API 를 호출할 때마다, 해당 상품에 대한 API\n호출 횟수가 카운팅되고 그 실행 내역이 기록되며, 필요에 따라 예치금에\n대한 과금이 이루어진다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/orders/{orderId}/goods": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "주문 상품의 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGood.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 주문 상품 역 참조 정보의 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGood.IInvert"
                }
              }
            }
          }
        },
        "summary": "주문 상품의 역 참조 정보 일괄 조회하기",
        "description": "주문 상품의 역 참조 정보 일괄 조회하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/orders/{orderId}/goods/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문 아이템의 {@link IHubOrderGood.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "주문 상품 역 참조 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGood.IInvert"
                }
              }
            }
          }
        },
        "summary": "주문 상품의 역 참조 정보 개별 조회하기",
        "description": "주문 상품의 역 참조 정보 개별 조회하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/orders": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrder.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrder"
                }
              }
            }
          }
        },
        "summary": "주문 목록",
        "description": "주문 목록.\n\n{@link IHubOrder} 리스트를 조회한다.\n\n리턴되는 {@link IHubOrder}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubOrder.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubOrder.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 주문만을 {@link IHubOrder.IRequest.search 검색}하거나,\n주문들의 {@link IHubOrder.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/orders/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubOrder.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrder"
                }
              }
            }
          }
        },
        "summary": "주문 상세",
        "description": "주문 상세.\n\n특정 {@link IHubOrder}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/push-messages/csv": {
      "post": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [],
        "requestBody": {
          "description": "CSV 파일 등",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IHubPushMessage.ICsvUpload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "CSV 파일을 통한 메타데이터 일괄 생성/갱신",
        "description": "CSV 파일을 통한 메타데이터 일괄 생성/갱신.\n\n아래 컬럼들을 가진 CSV 파일을 통하여 푸시 메시지의 메타데이터 레코드들을\n일괄 생성하거나 갱신한다. 만일 입력한 CSV 파일의 컬럼 구성이 아래와 다른 경우,\n400 Bad Request 에러가 발생한다.\n\n그리고 CSV 의 각 레코드에 대하아, 이미 존재하는 푸시 메시지의 코드가 존재할 경우에는\n해당 푸시 메시지 메타데이터 레코드가 갱신되며, 그렇지 아니한 경우에는 새로운 레코드가\n생성된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/push-messages": {
      "post": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [],
        "requestBody": {
          "description": "푸시 메시지 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubPushMessage.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "푸시 메시지 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubPushMessage"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 메타데이터 생성",
        "description": "푸시 메시지 메타데이터 생성.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubPushMessage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "푸시 메시지 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubPushMessage"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 일괄 조회",
        "description": "푸시 메시지 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/push-messages/{id}": {
      "put": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 타깃 푸시 메시지의 {@link IHubPushMessage.id}"
          }
        ],
        "requestBody": {
          "description": "컨텐츠 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubPushMessageContent.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 컨텐츠 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubPushMessageContent"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 컨텐츠 수정",
        "description": "푸시 메시지 컨텐츠 수정.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 푸시 메시지의 {@link IHubPushMessage.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "푸시 메시지 삭제하기",
        "description": "푸시 메시지 삭제하기.\n\n실제 삭제하는 아니며, soft deletion 에 해당함.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 타깃 푸시 메시지의 {@link IHubPushMessage.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "푸시 메시지 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubPushMessage"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 개별 조회",
        "description": "푸시 메시지 개별 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/push-messages/{code}/get": {
      "get": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 타깃 푸시 메시지의 {@link IHubPushMessage.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "푸시 메시지 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubPushMessage"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 개별 조회 by code",
        "description": "푸시 메시지 개별 조회 by code.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/push-messages/histories": {
      "patch": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 요청 및 검색 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubPushMessageHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "푸시 메시지 발송 내역 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubPushMessageHistory"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 발송 내역 일괄 조회",
        "description": "푸시 메시지 발송 내역 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/push-messages/histories/{id}": {
      "get": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 푸시 메시지 발송 내역의 {@link IHubPushMessageHistory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "푸시 메시지 발송 내역 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubPushMessageHistory"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 발송 내역 개별 조회",
        "description": "푸시 메시지 발송 내역 개별 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/audits/{auditId}/comments": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id }"
          },
          {
            "name": "auditId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 심사의 {@link IHubSaleAudit.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleAuditComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 심사 댓글 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleAuditComment"
                }
              }
            }
          }
        },
        "summary": "심사 댓글 내역 일괄 조회하기",
        "description": "심사 댓글 내역 일괄 조회하기.\n\n특정 {@link IHubSaleAudit 심사 게시물}에 대하여 {@link IHubSeller 판매 당사자}\n및 {@link IHubAdministrator 관리자}가 {@link IHubSaleAuditComment 댓글}들을\n일괄 조회한다.\n\n리턴되는 정보들은 {@link IPage 페이징} 처리가 되어있으며, 요청 정보\n{@link IHubSaleAuditComment.IRequest} 를 어떻게 설정하냐에 따라, 각 페이지 당\n레코드 수를 {@link IHubSaleAuditComment.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 댓글들만을 {@link IHubSaleAuditComment.IRequest.search 검색}하거나,\n댓글들의 {@link IHubSaleAuditComment.IRequest.sort 정렬 조건}을 임의로\n설정하거나 할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 매물의 {@link IHubSale.id }"
          },
          {
            "name": "auditId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 심사의 {@link IHubSaleAudit.id }"
          }
        ],
        "requestBody": {
          "description": "댓글 작성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleAuditComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "작성된 댓글 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleAuditComment"
                }
              }
            }
          }
        },
        "summary": "심사 댓글 작성하기",
        "description": "심사 댓글 작성하기.\n\n특정 {@link IHubSaleAudit 심사 게시물}에 대하여 댓글 작성",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/audits/{auditId}/comments/{id}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id }"
          },
          {
            "name": "auditId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 심사의 {@link IHubSaleAudit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 댓글의 {@link IHubSaleAuditComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "댓글 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleAuditComment"
                }
              }
            }
          }
        },
        "summary": "심사 댓글 개별 조회하기",
        "description": "심사 댓글 개별 조회하기.\n\n특정 {@link IHubSaleAudit 심사 게시물}에 대하여 {@link IHubSeller 판매 당사자}\n또는 {@link IHubAdministrator 관리자}가 작성한\n{@link IHubSaleAuditComment 댓글}을 개별 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id }"
          },
          {
            "name": "auditId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 심사의 {@link IHubSaleAudit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 수정할 댓글의 {@link IHubSaleAuditComment.id}"
          }
        ],
        "requestBody": {
          "description": "댓글 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleAuditComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "새로이 생성된 스냅샷 컨텐츠 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticleComment.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "심사 게시물의 댓글 수정하기",
        "description": "심사 게시물의 댓글 수정하기.\n\n특정 {@link IHubSaleAudit 심사} 게시물에 작성한\n{@link IHubSaleAuditComment 댓글}을, {@link IHubSeller 판매자}\n또는 {@link IHubAdministrator 관리자}가 스스로 수정한다.\n\n단, 본 허브 시스템이 댓글에 대하여 일괄적으로 펼치는 정책이 그러하듯, 본 댓글을\n수정했다해서, 실제로 기존의 내용이 바뀌는 것은 아니다. 수정은 내용은 새로운\n{@link IHubSaleAuditComment.ISnapshot 스냅샷}으로써, 기존의 댓글에 누적되어\n기록된다. 그리고 이는 해당 {@link IHubAdministrator 관리자}와\n{@link IHubSeller 판매자} 등 모두에게 공개되어, 해당 {@link IHubSaleAudit 심사}\n게시물을 열람할 수 있는 이는 누구나, 그 수정 내역 또한 함께 열람할 수 있다.\n\n이는 분쟁이 발생하기 쉬운 전자상거래 특성상, 관리자 또는 판매자가 자신의 댓글을\n수정하여 그 정황을 조작하거나 하는 일 따위를 막기 위함이다. 즉 증거 보존을 위함인\n것.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/audits": {
      "post": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id }"
          }
        ],
        "requestBody": {
          "description": "심사 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleAudit.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "심사 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleAudit"
                }
              }
            }
          }
        },
        "summary": "심사 발제하기",
        "description": "심사 발제하기.\n\n{@link IHubAdministrator 관리자}가 {@link IHubSaleAudit 심사 게시물}을 작성,\n심사의 발제 및 개시를 귀속 {@link IHubSale 매물}의 {@link IHubSeller 판매 당사자}에게\n알린다.\n\n관리자는 심사 게시물을 작성하며, 그 안에 심사를 어떻게 진행할 지 적고,\n{@link IHubSaleAuditSnapshot.files 첨부 파일} 등을 추가하여 심사 발제 게시물의\n컨텐츠를 보충할 수 있다. 이외에 관리자와 판매자는 본 게시물에\n{@link IHubSaleAuditComment 댓글}을 작성함으로써, 상호 소통할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/audits/{id}": {
      "put": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 심사의 {@link IHubSaleAudit.id}"
          }
        ],
        "requestBody": {
          "description": "심사 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleAudit.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "심사 정보 스냅샷",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticle.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "심사 게시물 수정하기",
        "description": "심사 게시물 수정하기.\n\n{@link IHubAdministrator 관리자}가 작성한\n{@link IHubAdminSaleAudit 심사 게시물}을, 스스로 수정한다.\n\n참고로 심사 게시물을 작성한 관리자와, {@link approve 승인} 또는\n{@link reject 거절}한 관리자는 서로 다를 수 있으나, 수정은 오직 발제 관리자\n스스로만이 가능하다. 만일 어떤 관리자가 발제 관리자가 게시물에 적은 내용과 다른\n이야기를 하고 싶다면, 차라리 {@link IHubSaleAuditComment 댓글}을 작성할 것.\n\n또한, 본 허브 시스템이 게시물에 관하여 일괄적으로 펼치는 정책이 그러하듯,\n관리자가 {@link IHubSaleAudit 심사 게시물}을 수정하였다하여, 실제로 기존의\n내용이 바뀌는 것은 아니다. 수정한 내용은 새로운\n{@link IHubSaleAudit.ISnapshot 스냅샷}으로써, 기존의 게시물 레코드에 누적되어\n기록된다. 그리고 이는 {@link IHubSeller 판매 당사자}와\n{@link IHubAdministrator 관리자} 등 모두에게 공개되며, 해당 게시물을 열람할 수\n있는 이는 누구나, 그 수정 내역 또한 함께 열람할 수 있다.\n\n이는 분쟁이 발생하기 쉬운 전자상거래 특성상, 관리자 또는 판매자가 자신의 게시물을\n수정하여 그 정황을 조작하거나 하는 일 따위를 막기 위함이다. 즉 증거 보존을 위함인\n것.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 심사의 {@link IHubSaleAudit.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "심사 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleAudit"
                }
              }
            }
          }
        },
        "summary": "심사 정보 상세 조회하기",
        "description": "심사 정보 상세 조회하기.\n\n{@link IHubSale 매물}에 대한 {@link IHubSaleAudit 심사 게시물}을 상세 조회함.\n\n리턴되는 정보 {@link IHubSaleAudit} 에는, 어떤\n{@link IHubAdministrator 관리자}가 심사를 개시하고, 누가\n{@link IHubSaleAuditRejection 거절} 혹은\n{@link IHubSaleAuditApproval 승인}하였는 지 등에 대한 정보가,\n각각의 일시과 함께 자세히 기록되어있다.\n\n더하여 심사에 대하여 {@link IHubSeller 판매자}와 관리자가 각각\n{@link IHubSaleAuditComment 댓글}로써 소통할 수 있으니, 댓글 관련 API\n{@link audits.comments.index} 도 함께 호출해보기 바란다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/audits/{id}/approve": {
      "post": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 심사의 {@link IHubSaleAudit.id}"
          }
        ],
        "requestBody": {
          "description": "심사 승인 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleAuditApproval.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "심사 승인 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleAuditApproval"
                }
              }
            }
          }
        },
        "summary": "심사 승인하기",
        "description": "심사 승인하기.\n\n{@link IHubAdministrator 관리자}가 현재의 {@link IHubSaleAudit 심사} 건을 승인,\n해당 {@link IHubSale 매물}의 판매를 허락한다.\n\n참고로 심사를 승인한 관리자와, 심사 발제 게시물을 작성한 관리자는 서로 다를 수 있다.\n또한, 심사를 {@link reject 거절}하였다가 번복하여 승인하는 것이 가능한데\n({@link IHubSaleAuditRejection.reversible} 값이 `true` 일 때), 이 때 역시\n심사를 거절한 관리자와 승인한 관리자가 서로 다를 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/audits/{id}/reject": {
      "post": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 심사의 {@link IHubSaleAudit.id}"
          }
        ],
        "requestBody": {
          "description": "심사 거절 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleAuditRejection.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "심사 거절 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleAuditRejection"
                }
              }
            }
          }
        },
        "summary": "심사 거절하기",
        "description": "심사 거절하기.\n\n{@link IHubAdministrator 관리자}가 현재의 {@link IHubSaleAudit 심사}\n건을 거절, 해당 {@link IHubSale 매물}의 판매를 불허한다.\n\n단, 심사 거절은 경우에 따라 번복하여 {@link approve 승인}할 수 있다. 거절시\n관리자가 입력한 정보 중 {@link IHubSaleAuditRejection.reversible} 값이 `true`\n일 때가 바로 그러하다.\n\n이 경우 판매자는 해당 매물을 관리자의 지시에 따라 {@link emend 첨삭}하여 재 응모할\n수 있다. 또한 판매자가 이의를 본 심사 거절 건에 대하여 이의를 제기하고 싶은 경우,\n현 심사 게시물에 {@link IHubSaleAuditComment 댓글}을 작성, 관리자에게 거절을\n번복하고 {@link approve 승인}해 줄 것을 요청할 수도 있다.\n\n관리자는 판매자의 승인 요청을 받아들여, 실제로 해당 매물의 판매를 허가해 줄 수도 있다\n하지만 반대로, 이미 승인한 심사 건을 번복하여 거절로 바꾸는 것은 불가능하니, 이 점 꼭\n유념하기 바란다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/audits/{id}/emend": {
      "put": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 심사의 {@link IHubSaleAudit.id}"
          }
        ],
        "requestBody": {
          "description": "첨삭 내용",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleAuditEmendation.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "첨삭 완료 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleAuditEmendation"
                }
              }
            }
          }
        },
        "summary": "심사 중 첨삭하기",
        "description": "심사 중 첨삭하기.\n\n{@link IHubSeller 판매자}가 등록 (혹은 수정)한 {@link IHubSale 매물}이\n현재 {@link IHubSaleAudit 심사} 중이거든, 판매자와\n{@link IHubAdministrator 관리자}는 이를 첨삭하고 편집할 수 있다.\n\n물론, 이는 어디까지나 심시가 진행 중인 매물에 한정되며, 아직 심사조차 개시되지\n않은 매물은 수정할 수 없다. 그리고 {@link IHubSaleAuditApproval 승인} 완료된\n매물 또한 결코 수정할 수 없다.\n\n다만, 관리자가 심사 {@link IHubSaleAuditRejection 거절}한 건에 대해서는,\n판매자가 이를 첨삭함으로써 관리자에게 재심을 요구하는 것이 가능하다. 물론, 이는\n{@link IHubSaleAuditRejection.reversible 번복 가능한 거절 건}에 한정된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/questions/{inquiryId}/comments": {
      "patch": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "제품 질의문에 대한 댓글 목록 조회",
        "description": "제품 질의문에 대한 댓글 목록 조회.\n\n{@link IHubSaleInquiryComment} 리스트를 조회한다.\n\n리턴되는 {@link IHubSaleInquiryComment}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSaleInquiryComment.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSaleInquiryComment.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 제품질의문에 대한 댓글을 {@link IHubSaleInquiryComment.IRequest.search 검색}하거나,\n제품 질의문에 대한 댓글의 {@link IHubSaleInquiryComment.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/questions/{inquiryId}/comments/{id}": {
      "get": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleInquiryComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 제품 질의문에 대한 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "제품 질의문에 대한 특정 댓글 조회",
        "description": "제품 질의문에 대한 특정 댓글 조회.\n\n특정 {@link IHubSaleInquiryComment}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/questions": {
      "patch": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleQuestion.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleQuestion.ISummary"
                }
              }
            }
          }
        },
        "summary": "매물 스냅샷에 대한 질문 요약 정보 목록 조회",
        "description": "매물 스냅샷에 대한 질문 요약 정보 목록 조회.\n\n{@link IHubSaleQuestion} 리스트를 조회한다.\n\n리턴되는 {@link IHubSaleQuestion}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSaleQuestion.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSaleQuestion.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 매물 스냅샷에 대한 질문을 {@link IHubSaleQuestion.IRequest.search 검색}하거나,\n매물 스냅샷에 대한 질문의 {@link IHubSaleQuestion.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/questions/{id}": {
      "get": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleQuestion.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 매물 스냅샷에 대한 질문 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleQuestion"
                }
              }
            }
          }
        },
        "summary": "매물 스냅샷에 대한 질문 상세 정보 조회",
        "description": "매물 스냅샷에 대한 질문 상세 정보 조회.\n\n특정 {@link IHubSaleQuestion}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 삭제할 {@link IHubSaleQuestion.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "매물 스냅샷에 대한 질문 삭제",
        "description": "매물 스냅샷에 대한 질문 삭제.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/reviews/{inquiryId}/comments": {
      "patch": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "제품 질의문에 대한 댓글 목록 조회",
        "description": "제품 질의문에 대한 댓글 목록 조회.\n\n{@link IHubSaleInquiryComment} 리스트를 조회한다.\n\n리턴되는 {@link IHubSaleInquiryComment}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSaleInquiryComment.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSaleInquiryComment.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 제품질의문에 대한 댓글을 {@link IHubSaleInquiryComment.IRequest.search 검색}하거나,\n제품 질의문에 대한 댓글의 {@link IHubSaleInquiryComment.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/reviews/{inquiryId}/comments/{id}": {
      "get": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleInquiryComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 제품 질의문에 대한 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "제품 질의문에 대한 특정 댓글 조회",
        "description": "제품 질의문에 대한 특정 댓글 조회.\n\n특정 {@link IHubSaleInquiryComment}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/reviews": {
      "patch": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleReview.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 매물 스냡샷에 대한 리뷰 요약 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleReview.ISummary"
                }
              }
            }
          }
        },
        "summary": "매물 스냅샷에 대한 리뷰 요약 정보 목록 조회",
        "description": "매물 스냅샷에 대한 리뷰 요약 정보 목록 조회.\n\n{@link IHubSaleReview}의 요약 정보 리스트를 조회한다.\n\n리턴되는 {@link IHubSaleReview}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSaleReview.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSaleReview.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 매물 스냅샷에 대한 리뷰를 {@link IHubSaleReview.IRequest.search 검색}하거나,\n매물 스냅샷에 대한 리뷰의 {@link IHubSaleReview.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/reviews/{id}": {
      "get": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleReview.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 매물 스냅샷에 대한 리뷰 상세 정보.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleReview"
                }
              }
            }
          }
        },
        "summary": "매물 스냅샷에 대한 리뷰 상세 조회",
        "description": "매물 스냅샷에 대한 리뷰 상세 조회.\n\n특정 {@link IHubSaleReview}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleReview.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "매물에 대한 리뷰 삭제",
        "description": "매물에 대한 리뷰 삭제.\n\n특정 매물에 대한 리뷰 삭제.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSale.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 매물들의 요약 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSale.ISummary"
                }
              }
            }
          }
        },
        "summary": "매물의 요약정보 리스트 조회하기",
        "description": "매물의 요약정보 리스트 조회하기.\n\n{@link IHubSale.ISummary 매물의 요약 정보}들을 불러온다.\n\n리턴되는 {@link IHubSale.ISummary 요약 정보}들은 {@link IPage 페이징} 처리가\n되어있다. 그리고 요청 정보 {@link IHubSale.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSale.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 매물들만을 {@link IHubSale.IRequest.search 검색}하거나,\n매물들의 {@link IHubSale.IRequest.sort 정렬 조건}을 임의로 지정하거나 할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{id}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "매물 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSale"
                }
              }
            }
          }
        },
        "summary": "매물 상세 조회하기",
        "description": "매물 상세 조회하기.\n\n타깃 매물의 상세 정보 {@link IHubSale} 을 조회한다.\n\n단, 매물을 조회하는 주체가 누구냐에 따라, 세부 속성값이 달라질 수 있다. 가장 대표적인\n것이 {@link IHubSaleUnitSwagger.host} 로써, 조회하는 주체가 고객일 때는 본\n허브 시스템의 미들웨어 API 주소가, 반면에 판매자/관리자일 때는 판매 당사자가 등록한\n상용 서버 API 주소가 적힌다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{id}/swagger": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id}"
          }
        ],
        "requestBody": {
          "description": "대상 유닛 (및 스톡) 에 대한 식별자 키",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleUnitSwaggerAccessor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "스웨거 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISwagger"
                }
              }
            }
          }
        },
        "summary": "Swagger 정보 조회하기",
        "description": "Swagger 정보 조회하기.\n\n타깃 {@link IHubSale 매물}로부터 특정 {@link IHubSaleUnit 유닛} 및\n{@link IHubSaleUnitStock 스톡}을 지정, 그것의 {@link ISwagger 스웨거} 정보를\n불러온다.\n\n리턴되는 스웨거 문서는 {@link IHubSeller 판매자} 및\n{@link IHubAdministrator 관리자} 기준으로 판매자가 등록한 실제 서버 API 주소가\n기재되며, {@link IHubCustomer 고객} 기준으로는 DEV 서버에 대한 본 허브 시스템의\n미들웨어 API 주소가 기재된다. 영리 목적을 위해, REAL 서버 주소는 배제된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/snapshots": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id}"
          }
        ],
        "requestBody": {
          "description": "페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지 단위로 묶인 스냅샷 요약 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleSnapshot.ISummary"
                }
              }
            }
          }
        },
        "summary": "매물 내 승인된 스냅샷들의 요약정보 리스트 조회하기",
        "description": "매물 내 승인된 스냅샷들의 요약정보 리스트 조회하기.\n\n특정 {@link IHubSale 매물}을 대상으로, 과거 및 현재의 모든\n{@link IHubSaleAuditApproval 심사 승인}된 바 있는 스냅샷들의\n{@link IHubSaleSnapshot.ISummary 요약 정보}를 불러온다.\n\n그리고 이 때, 기록된 통계/집계 정보는, 오직 해당 스냅샷 시점에 대한 것만이\n기재된다. 가령 총 API 호출 건수를 뜻하는 {@link IHubSaleGoodAggregate.call_count}\n의 경우, 귀속 매물에 대한 총 호출 건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가\n기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/snapshots/{id}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleSnapshot"
                }
              }
            }
          }
        },
        "summary": "메믈 내 승인된 스냅샷 상세 조회하기",
        "description": "메믈 내 승인된 스냅샷 상세 조회하기.\n\n{@link IHubSale 매물} 내 {@link IHubSaleAuditApproval 심사 승인}된 바 있는\n특정 시기의 {@link IHubSaleSnapshot 스냅샷}을 조회한다.\n\n단, 해당 매물이 {@link IHubSaleAudit 심사} 진행 중이고\n{@link IHubSaleAuditEmendation 첨삭} 과정에 있다면, 그 때에는 비록 심사\n승인되지 않은 경우라도, {@link IHubSeller 판매자} 및\n{@link IHubAdministrator 관리자}는 이를 조회할 수 있다.\n\n그리고 이 때, 기록된 통계/집계 정보는, 오직 해당 스냅샷 시점에 대한 것만이\n기재된다. 가령 총 API 호출 건수를 뜻하는 {@link IHubSaleGoodAggregate.call_count}\n의 경우, 귀속 매물에 대한 총 호출 건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가\n기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/snapshots/{id}/flip": {
      "get": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷으로부터 역 구성한 매물 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSale"
                }
              }
            }
          }
        },
        "summary": "매물 내 승인된 스냅샷의 매물 역 구성정보 조회하기",
        "description": "매물 내 승인된 스냅샷의 매물 역 구성정보 조회하기.\n\n{@link IHubSale 매물} 내 {@link IHubSaleAuditApproval 심사 승인}된 바 있는\n특정 시기의 {@link IHubSaleSnapshot 스냅샷}에 대한 정보를 역 구성, 해당 시점의\n매물 정보 {@link IHubSale} 을 조회한다.\n\n단, 해당 매물이 {@link IHubSaleAudit 심사} 진행 중이고\n{@link IHubSaleAuditEmendation 첨삭} 과정에 있다면, 그 때에는 비록 심사\n승인되지 않은 경우라도, {@link IHubSeller 판매자} 및\n{@link IHubAdministrator 관리자}는 이를 조회할 수 있다.\n\n그리고 이 때, 기록된 통계/집계 정보는, 오직 해당 스냅샷 시점에 대한 것만이\n기재된다. 가령 총 API 호출 건수를 뜻하는 {@link IHubSaleGoodAggregate.call_count}\n의 경우, 귀속 매물에 대한 총 호출 건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가\n기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/snapshots/{id}/swagger": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.id}"
          }
        ],
        "requestBody": {
          "description": "대상 유닛 (및 스톡) 에 대한 식별자 키",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleUnitSwaggerAccessor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "스웨거 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISwagger"
                }
              }
            }
          }
        },
        "summary": "Swagger 정보 조회하기",
        "description": "Swagger 정보 조회하기.\n\n타깃 {@link IHubSaleSnapshot 매물 스냅샷}으로부터 특정 {@link IHubSaleUnit 유닛}\n및 {@link IHubSaleUnitStock 스톡}을 지정, 그것의 {@link ISwagger 스웨거} 정보를\n불러온다.\n\n리턴되는 스웨거 문서는 {@link IHubSeller 판매자} 및\n{@link IHubAdministrator 관리자} 기준으로 판매자가 등록한 실제 서버 API 주소가\n기재되며, {@link IHubCustomer 고객} 기준으로는 DEV 서버에 대한 본 허브 시스템의\n미들웨어 API 주소가 기재된다. 영리 목적을 위해, REAL 서버 주소는 배제된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/{saleId}/snapshots/audits": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleAudit.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 매물들의 요약 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleAudit.ISummary"
                }
              }
            }
          }
        },
        "summary": "매물의 스냅샷별 심사 정보 리스트 조회하기",
        "description": "매물의 스냅샷별 심사 정보 리스트 조회하기.\n\n타깃 매물의 스냅샷별 심사 정보들을 {@link IHubSaleAudit.ISummary} 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/collections": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleCollection.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleCollection"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleCollection.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleCollection.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/sales/collections/{id}": {
      "delete": {
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleCollection"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/systematic/channels/{channelCode}/categories": {
      "post": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 채널 코드"
          }
        ],
        "requestBody": {
          "description": "채널 카테고리 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubChannelCategory.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 채널 카테고리 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubChannelCategory"
                }
              }
            }
          }
        },
        "summary": "채널 카테고리 생성",
        "description": "채널 카테고리 생성.\n\n관리자가 채널 카테고리를 생성합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 채널 코드"
          }
        ],
        "responses": {
          "200": {
            "description": "채널 카테고리 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IHubChannelCategory.IHierarchical"
                  }
                }
              }
            }
          }
        },
        "summary": "채널 카테고리 정보 리스트",
        "description": "채널 카테고리 정보 리스트.\n\n{@link IHubChannelCategory} 리스트를 조회한다.\n채널 카테고리는 1: N 재귀구조를 가져 부모 카테고리가 존재할 경우 children 필드에 자식 카테고리 리스트를 포함한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/systematic/channels/{channelCode}/categories/{id}": {
      "put": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 채널 코드"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 수정할 {@link IHubChannelCategory.id}"
          }
        ],
        "requestBody": {
          "description": "카테고리 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartialIHubChannelCategory.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "채널 카테고리 정보 수정",
        "description": "채널 카테고리 정보 수정.\n\n특정 카테고리의 정보를 수정합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 채널 코드"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 해당 채널 카테고리 {@link IHubChannelCategory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "채널 카테고리 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubChannelCategory"
                }
              }
            }
          }
        },
        "summary": "채널 카테고리 상세 정보",
        "description": "채널 카테고리 상세 정보.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/systematic/channels/{channelCode}/categories/merge": {
      "delete": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 채널 코드"
          }
        ],
        "requestBody": {
          "description": "병합 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IRecordMerge"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "채널 카테고리 삭제",
        "description": "채널 카테고리 삭제.\n\n카테고리를 삭제하는 계념은 없다. 그대신 카테고리를 병합 (merge) 하는 개념이 존재한다.\n\n유지할 채널 카테고리 와과 병합할 채널 카테고리를 지정하면, 병합할 채널 카테고리 의 모든 정보가 유지할 채널 카테고리로 이동하고, 병합할 채널 카테고리은 삭제된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/systematic/channels/{channelCode}/categories/{id}/invert": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 채널 코드"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 카테고리 {@link IHubChannelCategory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "상위 카테고리 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubChannelCategory.IInvert"
                }
              }
            }
          }
        },
        "summary": "특정 카테고리의 상위 카테고리 정보",
        "description": "특정 카테고리의 상위 카테고리 정보.\n\n특정 카테고리의 부모 카테고리 정보를 가져옴.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/systematic/channels": {
      "post": {
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "채널 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubChannel.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 채널 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubChannel"
                }
              }
            }
          }
        },
        "summary": "채널 생성",
        "description": "채널 생성.\n\n관리자가 {@link IHubChannel}을 생성합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubChannel.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubChannel"
                }
              }
            }
          }
        },
        "summary": "허브 채널 리스트",
        "description": "허브 채널 리스트.\n\n{@link IHubChannel} 리스트를 조회한다.\n\n리턴되는 {@link IHubChannel}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubChannel.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubChannel.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 허브 채널을 {@link IHubChannel.IRequest.search 검색}하거나,\n허브 채널들의 {@link IHubChannel.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/systematic/channels/{id}": {
      "put": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 수정할 {@link IHubChannel.id}"
          }
        ],
        "requestBody": {
          "description": "채널 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubChannel.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 채널 정보"
          }
        },
        "summary": "채널 정보 수정",
        "description": "채널 정보 수정.\n\n특정 채널의 정보를 수정합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubChannel.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 특정 채널의 계층",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubChannel.IHierarchical"
                }
              }
            }
          }
        },
        "summary": "채널의 아이디로 특정 채널의 계층 보기",
        "description": "채널의 아이디로 특정 채널의 계층 보기.\n\n특정 채널의 계층을 조회합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/systematic/channels/merge": {
      "delete": {
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "병합 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IRecordMerge"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "채널 삭제",
        "description": "채널 삭제.\n\n채널을 삭제하는 계념은 없다. 그대신 채널을 병합 (merge) 하는 개념이 존재한다.\n\n유지할 채널과 병합할 채널을 지정하면, 병합할 채널의 모든 정보가 유지할 채널로 이동하고, 병합할 채널은 삭제된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/systematic/channels/hierarchical": {
      "patch": {
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubChannel.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubChannel.IHierarchical"
                }
              }
            }
          }
        },
        "summary": "채널 계층 정보 리스트",
        "description": "채널 계층 정보 리스트.\n\n{@link IHubChannel.IHierarchical} 카테고리 계층 리스트를 조회한다.\n\n리턴되는 {@link IHubChannel}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubChannel.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubChannel.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 채널 계층을 {@link IHubChannel.IRequest.search 검색}하거나,\n채널 계층의 {@link IHubChannel.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/systematic/channels/{code}/get": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 조회할 {@link IHubChannel.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 특정 채널의 계층",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubChannel.IHierarchical"
                }
              }
            }
          }
        },
        "summary": "채널 코드로 특정 채널의 계층 보기",
        "description": "채널 코드로 특정 채널의 계층 보기.\n\n특정 채널의 계층을 조회합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/systematic/sections": {
      "post": {
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "섹션 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSection.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 섹션 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSection"
                }
              }
            }
          }
        },
        "summary": "섹션 생성",
        "description": "섹션 생성.\n\n관리자가 섹션을 생성합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSection.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSection"
                }
              }
            }
          }
        },
        "summary": "섹션 정보 리스트",
        "description": "섹션 정보 리스트.\n\n{@link IHubSection}의 리스트를 조회한다.\n\n리턴되는 {@link IHubSection}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSection.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSection.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 섹션을 {@link IHubSection.IRequest.search 검색}하거나,\n섹션들의 {@link IHubSection.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/systematic/sections/{id}": {
      "put": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 수정할 {@link IHubSection.id}"
          }
        ],
        "requestBody": {
          "description": "섹션 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSection.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 섹션 정보"
          }
        },
        "summary": "섹션 정보 수정",
        "description": "섹션 정보 수정.\n\n특정 섹션의 정보를 수정합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSection.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 섹션 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSection"
                }
              }
            }
          }
        },
        "summary": "섹션 아이디로 특정 섹션 정보 상세",
        "description": "섹션 아이디로 특정 섹션 정보 상세.\n\n특정 {@link IHubSection}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/systematic/sections/merge": {
      "delete": {
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "병합 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IRecordMerge"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "섹션 삭제",
        "description": "섹션 삭제.\n\n섹션을 삭제하는 계념은 없다.\n그대신 섹션을 병합 (merge) 하는 개념이 존재한다.\n\n유지할 섹션과 병합할 섹션을 지정하면, 병합할 섹션의 모든 정보가 유지할 섹션으로 이동하고, 병합할 섹션은 삭제된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/systematic/sections/{code}/get": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 조회할 {@link IHubSection.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 섹션 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSection"
                }
              }
            }
          }
        },
        "summary": "섹션 코드로 특정 섹션 정보 상세",
        "description": "섹션 코드로 특정 섹션 정보 상세.\n\n특정 {@link IHubSection}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/statistics/orders/goods/calls": {
      "patch": {
        "tags": [
          "Statistics"
        ],
        "parameters": [],
        "requestBody": {
          "description": "조회할 상품의 검색 및 페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodCallAggregate.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "상품의 API 호출 내역에 대한 통계 정보.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodCallAggregate"
                }
              }
            }
          }
        },
        "summary": "특정 기간 API 호출 관련 통계를 조회 합니다",
        "description": "특정 기간 API 호출 관련 통계를 조회 합니다.\n\n상품의 API 사용량, 에러율, API Latency 등을 조회합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/statistics/orders/goods/calls/entire": {
      "patch": {
        "tags": [
          "Statistics"
        ],
        "parameters": [],
        "requestBody": {
          "description": "대상 상품 내지 매물에 대한 특정화 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodCallAggregate.IEntireRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "상품의 API 호출 내역에 대한 전체 기간의 통계 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodCallAggregate"
                }
              }
            }
          }
        },
        "summary": "전체 기간의 API 호출 관련 통계를 조회",
        "description": "전체 기간의 API 호출 관련 통계를 조회.\n\n상품의 전체 기간에 대한 API 사용량, 에러율, API Latency 등을 조회합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/statistics/orders/goods/calls/ranking": {
      "patch": {
        "tags": [
          "Statistics"
        ],
        "parameters": [],
        "requestBody": {
          "description": "조회할 상품의 검색 및 페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodRanking.IEntireRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "상품의 API 호출 내역에 대한 통계 정보.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodRanking"
                }
              }
            }
          }
        },
        "summary": "구독한 API의 특정 기간 랭킹을 조회 합니다",
        "description": "구독한 API의 특정 기간 랭킹을 조회 합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/admins/statistics/sales/calls/rankings": {
      "patch": {
        "tags": [
          "Statistics"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 랭킹 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleCallRanking"
                }
              }
            }
          }
        },
        "summary": "매물의 API 호출 횟수 기준 랭킹을 조회한다",
        "description": "매물의 API 호출 횟수 기준 랭킹을 조회한다.\n\n매물이 주문되어 그 API 가 호출된 횟수를 기준, 상위권 랭킹의 매물들을 조회한다.\n총 조회 가능한 랭킹은 100 위까지이며, 만일 서로 다른 매물 간 동점자 발생시,\n그 처리는 다음과 같다.\n\n1. API 호출 건수가 가장 많은 매물\n2. API 호출 중 성공 횟수가 많은 매물\n3. 보다 더 빨리 생성된 매물",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/authenticate/refresh": {
      "patch": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "갱신 토큰 값",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubCustomer.IRefresh"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "고객 정보 + 인증 토큰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCustomer.IAuthorized"
                }
              }
            }
          }
        },
        "summary": "토큰 갱신하기",
        "description": "토큰 갱신하기.\n\n고객 인증 토큰을 새로이 발급하여 갱신하고, 고객 정보를 다시 불러온다.\n\n참고로 본 API 함수를 SDK 로 호출하였다면, 이 때 사용된 {@link IConnection.headers}\n객체에 {@link IHubCustomer.IAuthorized.setHeaders.Authorization 고객 인증 토큰}이\n자동으로 할당된다."
      }
    },
    "/hub/customers/authenticate": {
      "get": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "고객 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCustomer"
                }
              }
            }
          }
        },
        "summary": "고객 정보 불러오기",
        "description": "고객 정보 불러오기.\n\n현재의 고객 정보를 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "고객의 유입 경로를 파악하기 위한 기초 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubCustomer.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새 고객 정보 및 인증 토큰",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCustomer.IAuthorized"
                }
              }
            }
          }
        },
        "summary": "고객 레코드 발행",
        "description": "고객 레코드 발행.\n\n----------------\n\n본 허브 시스템은 본 시장에 참여하는 모든 이를 \"고객\" 으로 본다. 그리고 고객 레코드는\n{@link IHubCitizen 사람} 개개인을 기준으로 식별하는 것이 아니라, 접속 단위를\n기준으로 하고 있다. 따라서 설령 동일 인물이더라도, 매 접속시마다 새\n`IHubCustomer` 레코드를 발행하고 있다.\n\n따라서 본 서비스에 접속하는 모든 Client Application 들은 가장 먼저 이 함수를\n호출함으로써, 해당 {@link IHubCustomer 고객}의 유입 경로를 서버에 보고하고,\n인증 토큰을 발행해야 한다. 만일 이 함수 호출을 생략하거든, 본 API 이외의 모든\n함수들을 사용할 수 없다.\n\n심지어 {@link activate 본인 인증}을 하려거나 혹은 이미 {@link join 회원가입}을\n한 바 있어, {@link IHubMember 회원 계정}으로 {@link login 로그인}하려는 경우 또한,\n예외는 없다. 본인 인증 혹은 로그인 전, 필히 본 함수 `create` 를 먼저 호출할 것.\n이는 {@link IHubSeller 판매자}나 {@link IHubAdministrator 관리자}가 로그인할 때\n또한 마찬가지이다.\n\n----------------\n\n그리고, 이 때 발급된 인증 토큰은 만료 시간이 존재하여, 영구히 사용할 수 없다. 참고로\n인증 토큰의 유효시간은 3 시간이며, 만일 3 시간 이후에도 고객 인증을 계속 유지하고\n싶다면, {@link refresh} 함수를 호출해야 한다.\n\n이외에 본 API 함수를 만일 SDK 로 호출하였다면, 이 때 사용된\n{@link IConnection.headers} 객체에\n{@link IHubCustomer.IAuthorized.setHeaders.Authorization 고객 인증 토큰}이\n자동으로 할당된다."
      }
    },
    "/hub/customers/authenticate/join": {
      "post": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "회원 가입 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubMember.IJoin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "회원 가입 후의 고객 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCustomer"
                }
              }
            }
          }
        },
        "summary": "회원 가입하기",
        "description": "회원 가입하기.\n\n현 {@link IHubCustomer 고객}을 {@link IHubMember 회원}으로 가입시킨다. 그리고\n만일 회원가입을 하며 {@link activate 본인 인증 정보} 또한 함께 기록한다면,\n이후로 당 회원이 {@link login 로그인}을 할 때마다, 본인 인증을 생략할 수 있다.\n\n또한, 과거 해당 {@link IHubCustomer 시민}이 {@link IHubExternalUser 외부 유저}나\n{@link activate 본인 인증}을 통하여 {@link IHubOrder 구매}한 내역 혹은 작성한\n{@link IBbsArticle 게시물} 등이 있다면, 이 또한 해당 {@link IHubMember 회원}이\n{@link login 로그인}을 통하여 이들을 열람하거나 편집하거나 수 있다. 즉, 회원 가입\n이전의 활동 내역 또한 연속성을 가지고 접근할 수 있다는 뜻.\n\n참고로 {@link create} 함수에 적힌 설명과 같이, 본 함수를 호출하기 전에 반드시,\n{@link create} 함수를 호출하여 {@link IHubCustomer 고객} 레코드 및 토큰을 먼저\n발행해야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/authenticate/login": {
      "patch": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "로그인 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubMember.ILogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "로그인 후의 고객 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCustomer"
                }
              }
            }
          }
        },
        "summary": "회원 로그인",
        "description": "회원 로그인.\n\n{@link IHubMember 회원}으로 가입한 {@link IHubCustomer 고객}이, 계정의 이메일과\n비밀번호를 입력하여, 로그인을 실시한다.\n\n만약 해당 회원이 과거 {@link activate 본인 인증}을 실시한 바 있다면,\n{@link IHubCustomer.citizen} 값이 그에 맞게 채워질 것이다. 그리고 해당 회원이\n{@link IHubMember.administrator 관리자} 혹은 {@link IHubMember.seller 판매자}로도\n가입한 바 있다면, 관련 정보 또한 그에 알맞게 기재된다.\n\n참고로 {@link create} 함수에 적힌 설명과 같이, 본 함수를 호출하기 전에 반드시,\n{@link create} 함수를 호출하여 {@link IHubCustomer 고객} 레코드 및 토큰을 먼저\n발행해야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/authenticate/activate": {
      "put": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "시민 인증 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubCitizen.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "시민 인증 후의 고객 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCustomer"
                }
              }
            }
          }
        },
        "summary": "시민 (본인) 인증하기",
        "description": "시민 (본인) 인증하기.\n\n{@link IHubCustomer 고객}이 {@link IHubCitizen.mobile 핸드폰} 번호 및\n{@link IHubCitizen.name 실명 (또는 그에 준하는 닉네임)} 을 입력함으로써, 본인의\n신원을 증명하는 API.\n\n만일 해당 고객이 이미 {@link join 회원 가입}하였거나\n{@link external 외부 유저 정보를 기입}한 경우, 로그인 내지 동일 외부 유저 정보를\n재 입력하는 것으로써, {@link IHubCitizen 시민} 정보를 즉시 취득하고 인증 과정을\n생략할 수 있다.\n\n참고로 {@link create} 함수에 적힌 설명과 같이, 본 함수를 호출하기 전에 반드시,\n{@link create} 함수를 호출하여 {@link IHubCustomer 고객} 레코드 및 토큰을 먼저\n발행해야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/authenticate/external": {
      "post": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "Enroll information of the external user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubExternalUser.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "External user enrolled customer information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCustomer"
                }
              }
            }
          }
        },
        "summary": "Enroll external user info",
        "description": "Enroll external user info.\n\n{@link IHubCustomer Customer} enrolls his/her\n{@link IHubExternalUser external user} information from other service.\n\nIt has similar effect with the {@link join membership joining} function,\nso that if you've performed the {@link IHubCitizen citizenship}\n{@link activate activation} too, then you can skip the {@link activate}\nfunction calling everytime you call this `external` function with same\ninfo from now on. Also, if the person had\n{@link IHubOrder purchased} with {@link activate} and {@link join}\nfunction calling, you can also access to the order history too. In other\nwords, activity details prior to external server registration can also be\naccessed with continuity.\n\nFor reference, as described in the {@link create} function, before calling\nthis `external` function, you must first create a customer record and token\nby calling the {@link create} function.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/authenticate/password/change": {
      "put": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "비밀번호 변경 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubMember.IPasswordChange"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "비밀번호 변경하기",
        "description": "비밀번호 변경하기.\n\n회원 계정의 비밀번호를 변경한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/authenticate/keys": {
      "patch": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "검색 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubAuthenticateKey.ISearch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "검색 결과",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubAuthenticateKey"
                }
              }
            }
          }
        },
        "summary": "개인 API 접근 Key 목록",
        "description": "개인 API 접근 Key 목록.\n\n회원 가입된 고긱이 발급받은 개인 API 접근 Key 목록을 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "발급 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubAuthenticateKey.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "발급된 개인 API 접근 Key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubAuthenticateKey"
                }
              }
            }
          }
        },
        "summary": "개인 API 접근 Key 발급",
        "description": "개인 API 접근 Key 발급.\n\n회원 가입된 고객이 개인 API 접근 Key 를 발급받는다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/authenticate/keys/{id}": {
      "delete": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 개인 API 접근 key의 {@link IHubAuthenticateKey.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "개인 API 접근 Key 비활성화",
        "description": "개인 API 접근 Key 비활성화.\n\n회원 가입된 고객이 발급받은 개인 API 접근 Key 를 비활성화한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 개인 API 접근 key의 {@link IHubAuthenticateKey.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 개인 API 접근 Key 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubAuthenticateKey"
                }
              }
            }
          }
        },
        "summary": "개인 API 접근 Key 조회",
        "description": "개인 API 접근 Key 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/authenticate/sso/verify": {
      "post": {
        "tags": [
          "SSO"
        ],
        "parameters": [],
        "requestBody": {
          "description": "SSO 에서 발급받은 Access Token.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSSO.IAuthToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "SSO 계정 정보와 회원가입 여부.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSSO"
                }
              }
            }
          }
        },
        "summary": "해당 WRTN 계정이 Ecosystem에 회원가입 되어 있는지 확인",
        "description": "해당 WRTN 계정이 Ecosystem에 회원가입 되어 있는지 확인.\n\nshouldJoin이 false면 회원가입이 안된것이고 true 이면 회원가입이 된 계정이다.\n\n해당 판단 조건은 {@link IHubExternalUser.member_id}가 null 이면\nEcosystem에 회원가입이 안된 계정이다."
      }
    },
    "/hub/customers/authenticate/sso": {
      "put": {
        "tags": [
          "SSO"
        ],
        "parameters": [],
        "requestBody": {
          "description": "변경 하고자 하는 정보.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSSO.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "WRTN 계정과 Ecosystem 계정의 메타데이터 정보 변경",
        "description": "WRTN 계정과 Ecosystem 계정의 메타데이터 정보 변경.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "SSO 에서 발급받은 Access Token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSSO.IAuthToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSSO.ISSOUser"
                }
              }
            }
          }
        },
        "summary": "WRTN 계정 상세정보 불러오기",
        "description": "WRTN 계정 상세정보 불러오기."
      }
    },
    "/hub/customers/authenticate/sso/sync": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "description": "SSO 에서 발급받은 Access Token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSSO.IAuthToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCustomer"
                }
              }
            }
          }
        },
        "summary": "WRTN 계정과 Ecosystem 계정간의 메타데이터 정보 싱크",
        "description": "WRTN 계정과 Ecosystem 계정간의 메타데이터 정보 싱크.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/commons/attachments": {
      "get": {
        "tags": [
          "commons"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "URL 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPresignedUrl"
                }
              }
            }
          }
        },
        "description": "Presigned URL 발행하기"
      }
    },
    "/hub/customers/commons/blockwords/find/all": {
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBlockWord.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBlockWord"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/commons/check/privacy": {
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICheckPrivacy.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ICheckPrivacy.IInvalid"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/coupons": {
      "patch": {
        "tags": [
          "Coupon"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubCoupon.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 할인 쿠폰 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubCoupon"
                }
              }
            }
          }
        },
        "summary": "할인 쿠폰 일괄 조회하기",
        "description": "할인 쿠폰 일괄 조회하기.\n\n{@link IHubCoupon 할인 쿠폰} 리스트들을 {@link IPage 페이징} 처리하여\n반환한다.\n\n만약 현재 할인 쿠폰을 조회하는 대상이 {@link IHubCustomer 고객}이라면,\n시장에 공개된, 그리고 현재 고객이 그 {@link IHubCouponTicket 티켓}을\n발급해가는데 문제 없는 쿠폰들만이 보일 뿐이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/coupons/{id}": {
      "get": {
        "tags": [
          "Coupon"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "title": "대상 할인 쿠폰의 {@link IHubCoupon.id}",
            "description": " 대상 할인 쿠폰의 {@link IHubCoupon.id}."
          }
        ],
        "responses": {
          "200": {
            "description": "할인 쿠폰 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCoupon"
                }
              }
            }
          }
        },
        "summary": "할인 쿠폰 개별 조회하기",
        "description": "할인 쿠폰 개별 조회하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/coupons/tickets": {
      "patch": {
        "tags": [
          "Coupon"
        ],
        "parameters": [],
        "requestBody": {
          "description": "검색 및 페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubCouponTicket.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 티켓 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubCouponTicket"
                }
              }
            }
          }
        },
        "summary": "할인 쿠폰 티켓 일괄 조회하기",
        "description": "할인 쿠폰 티켓 일괄 조회하기.\n\n고객이 보유한 할인 쿠폰 티켓을 일괄 조회한다.\n\n단, 이미 주문 결제에 사용되었거나, 기한 만료된 티켓은 대상에서 제외된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Coupon"
        ],
        "parameters": [],
        "requestBody": {
          "description": "할인 쿠폰 티켓의 발행 신청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubCouponTicket.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "발급된 할인 쿠폰 티켓 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCouponTicket"
                }
              }
            }
          }
        },
        "summary": "티켓 발행하기",
        "description": "티켓 발행하기.\n\n고객이 특정 할인 쿠폰에 대한 티켓을 발행한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/coupons/tickets/{id}": {
      "get": {
        "tags": [
          "Coupon"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 티켓의 {@link IHubCouponTicket.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "티켓 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCouponTicket"
                }
              }
            }
          }
        },
        "summary": "할인 쿠폰 티켓 정보 개별 조회하기",
        "description": "할인 쿠폰 티켓 정보 개별 조회하기.\n\n고객이 보유한 할인 쿠폰 티켓 정보를 조회한다.\n\n단, 이미 주문 결제에 사용되었거나, 기한 만료된 티켓은 조회할 수 없다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/deposits/charges": {
      "patch": {
        "tags": [
          "Deposit"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubDepositCharge.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 예치금 입금 내역 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubDepositCharge"
                }
              }
            }
          }
        },
        "summary": "예치금 입금 내역 일괄 조회",
        "description": "예치금 입금 내역 일괄 조회.\n\n현 고객에 대한 {@link IHubDepositCharge 예치금 입금 내역}들을 불러온다.\n\n리턴되는 정보들은 {@link IPage 페이징} 처리가 되어있으며, 요청 정보\n{@link IHubDepositCharge.IRequest} 를 어떻게 설정하냐에 따라, 각 페이지 당 레코드\n수를 {@link IHubDepositCharge.IRequest.limit 제한}하거나, 특정 조건을 만족하는\n예치금 입출금 내역들만을 {@link IHubDepositCharge.IRequest.search 검색}하거나,\n예치금 입출금 내역들의 {@link IHubDepositCharge.IRequest.sort 정렬 조건}을 임의로\n설정하거나 할 수 있다.\n\n참고로 {@link IHubDepositHistory 예치금 입출금 내역} 일체를 조회하려거든,\n{@link HubApi.functional.hub.customers.deposits.histories.index} 함수를 대신\n호출하도록 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Deposit"
        ],
        "parameters": [],
        "requestBody": {
          "description": "입금 신청 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubDepositCharge.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "입금 내역 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubDepositCharge"
                }
              }
            }
          }
        },
        "summary": "예치금 입금 신청하기",
        "description": "예치금 입금 신청하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/deposits/charges/{id}": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 입금 내역의 {@link IHubDepositCharge.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "입금 내역 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubDepositCharge"
                }
              }
            }
          }
        },
        "summary": "예치금 입금 내역 조회하기",
        "description": "예치금 입금 내역 조회하기.\n\n예치금 입금 내역 {@link IHubDepositCharge} 를 개별 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Deposit"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 입금 신청 내역의 {@link IHubDepositCharge.id}"
          }
        ],
        "requestBody": {
          "description": "입금 신청 내역 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubDepositCharge.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "예치금 입금 신청 정보 수정하기",
        "description": "예치금 입금 신청 정보 수정하기.\n\n예치금 입금 신청시 작성했던 {@link IHubDepositCharge.value 액수}를 수정한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/deposits/charges/{id}/publish": {
      "post": {
        "tags": [
          "Deposit"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 입금 신청 내역의 {@link IHubDepositCharge.id}"
          }
        ],
        "requestBody": {
          "description": "PG사로부터 취득한 결제 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubDepositChargePublish.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "결제 완료된 예치금 입금 내역 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubDepositChargePublish"
                }
              }
            }
          }
        },
        "summary": "예치금 입금 신청에 대한 결제 진행하기 (또는 완료하기)",
        "description": "예치금 입금 신청에 대한 결제 진행하기 (또는 완료하기).\n\n{@link IHubCustomer 고객}이 신청한 {@link IHubDepositCharge 예치금 입금}에 대한\n{@link IHubDepositChargePublish 결제를 진행}한다.\n\n단, 경우에 따라서는 본 API 를 호출하여도, 결제가 완료되지 않을 수 있다.\n무통장 입금이나 가상계좌의 경우, 결제가 완료되기 전까지는 결제와\n{@link IHubDepositChargePublish.paid_at 지불 시점}에 차이가 있는 경우,\n바로 그 지불이 완료되기 전까지는 예치금 증액이 확정되지 않는다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/deposits/charges/{id}/refund": {
      "delete": {
        "tags": [
          "Deposit"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 입금 신청 내역의 {@link IHubDepositCharge.id}"
          }
        ],
        "requestBody": {
          "description": "환불 신청 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubDepositChargePublish.IRefundStore"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "환불하기",
        "description": "환불하기.\n\n예치금 입금 결제에 대한 환불을 진행한다.\n\n만약 가상계좌나 무통장 입금을 한 경우, 필히 환불 계좌를\n{@link IHubDepositChargePublish.IRefundStore.account} 에 적어줘야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/deposits/histories": {
      "patch": {
        "tags": [
          "Deposit"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubDepositHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 예치금 입출금 내역 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubDepositHistory"
                }
              }
            }
          }
        },
        "summary": "예치금 입출금 내역 일괄 조회",
        "description": "예치금 입출금 내역 일괄 조회.\n\n현 고객에 대한 {@link IHubDepositHistory 예치금 입출금 내역}들을 불러온다.\n\n리턴되는 정보들은 {@link IPage 페이징} 처리가 되어있으며, 요청 정보\n{@link IHubDepositHistory.IRequest} 를 어떻게 설정하냐에 따라, 각 페이지 당 레코드\n수를 {@link IHubDepositHistory.IRequest.limit 제한}하거나, 특정 조건을 만족하는\n예치금 입출금 내역들만을 {@link IHubDepositHistory.IRequest.search 검색}하거나,\n예치금 입출금 내역들의 {@link IHubDepositHistory.IRequest.sort 정렬 조건}을 임의로\n설정하거나 할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/deposits/histories/balance": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "예치금 잔고 총액",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "summary": "예치금 잔고를 조회한다",
        "description": "예치금 잔고를 조회한다.\n\n현 고객이 가진 얘치금 잔고 총액을 조회함.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/carts/{cartId}/commodities": {
      "patch": {
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 장바구니의 {@link IHubCart.id }, `null` 로 생략 가능"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubCartCommodity.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubCartCommodity"
                }
              }
            }
          }
        },
        "summary": "장바구니에 담은 상품 리스트 조회 하기",
        "description": "장바구니에 담은 상품 리스트 조회 하기.\n\n{@link IHubCartCommodity} 리스트를 조회한다.\n\n리턴되는 {@link IHubCartCommodity}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubCartCommodity.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubCartCommodity.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 상품만을 {@link IHubCartCommodity.IRequest.search 검색}하거나,\n상삼품들의 {@link IHubCartCommodity.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 장바구니의 {@link IHubCart.id }, `null` 로 생략 가능"
          }
        ],
        "requestBody": {
          "description": "추가할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubCartCommodity.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "추가된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCartCommodity"
                }
              }
            }
          }
        },
        "summary": "장바구니에 상품 추가",
        "description": "장바구니에 상품 추가.\n\n{@link IHubCartCommodity}를 추가한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/carts/{cartId}/commodities/{id}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 장바구니의 {@link IHubCart.id }, `null` 로 생략 가능"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubCartCommodity.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCartCommodity"
                }
              }
            }
          }
        },
        "summary": "장바구니에 담은 특정 상품 상세",
        "description": "장바구니에 담은 특정 상품 상세.\n\n특정 {@link IHubCartCommodity}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 장바구니의 {@link IHubCart.id }, `null` 로 생략 가능"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 삭제할 {@link IHubCartCommodity.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "장바구니에 담긴 특정 상품 삭제",
        "description": "장바구니에 담긴 특정 상품 삭제.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/carts/{cartId}/commodities/discountable": {
      "patch": {
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "할인 가능 수단 조합에 대한 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubCartDiscountable.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "할인 수단 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCartDiscountable"
                }
              }
            }
          }
        },
        "summary": "할인 가능 수단 계산하기",
        "description": "할인 가능 수단 계산하기.\n\n장바구니에 담긴 원재료 및 추가 매물들을 대상으로,\n할인 가능 수단이 어떻게 되는지 계산한다. 리턴되는 정보에는 각각\n사용 가능한 예치금과 구성 가능한 쿠폰의 조합들이 들어있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/carts/{cartId}/commodities/{id}/replica": {
      "get": {
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 장바구니의 {@link IHubCart.id }, `null` 로 생략 가능"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubCartCommodity.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "복제된 장바구니 입력 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCartCommodity.ICreate"
                }
              }
            }
          }
        },
        "summary": "장바구니에 담은 특정 상품 입력값 복제 하기",
        "description": "장바구니에 담은 특정 상품 입력값 복제 하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{goodId}/issues/{issueId}/comments": {
      "post": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 제품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id }"
          }
        ],
        "requestBody": {
          "description": "생성할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssueComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 이슈의 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssueComment"
                }
              }
            }
          }
        },
        "summary": "Issue 댓글 생성",
        "description": "Issue 댓글 생성.\n\n{@link IHubOrderGoodIssueComment}를 생성한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGoodIssue.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssueComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodIssueComment"
                }
              }
            }
          }
        },
        "summary": "Issue 댓글 목록",
        "description": "Issue 댓글 목록.\n\n{@link IHubOrderGoodIssueComment} 리스트를 조회한다.\n\n리턴되는 {@link IHubOrderGoodIssueComment}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubOrderGoodIssueComment.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubOrderGoodIssueComment.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 댓글만을 {@link IHubOrderGoodIssueComment.IRequest.search 검색}하거나,\n댓상들의 {@link IHubOrderGoodIssueComment.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{goodId}/issues/{issueId}/comments/{id}": {
      "put": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 제품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 댓글의 {@link IHubOrderGoodIssueComment.id}"
          }
        ],
        "requestBody": {
          "description": "수정할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssueComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 이슈의 댓글 스냅샷",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssueComment.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "Issue 댓글 수정",
        "description": "Issue 댓글 수정.\n\n{@link IHubOrderGoodIssueComment}를 수정한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 제품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 댓글의 {@link IHubOrderGoodIssueComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "Issue 댓글 삭제",
        "description": "Issue 댓글 삭제.\n\n{@link IHubOrderGoodIssueComment}를 삭제한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGoodIssue.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGoodIssueComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "댓글 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssueComment"
                }
              }
            }
          }
        },
        "summary": "Issue 댓글 조회",
        "description": "Issue 댓글 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{goodId}/issues/{issueId}/fees/{id}": {
      "post": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 제품 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈 {@link IHubOrderGoodIssue.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 수임료 {@link IHubOrderGoodIssueFee.id}"
          }
        ],
        "requestBody": {
          "description": "수임료 지불 동의 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssueFeeAccept.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "수임료 지불 동의 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssueFeeAccept"
                }
              }
            }
          }
        },
        "summary": "수임료 지불 동의",
        "description": "수임료 지불 동의.\n\n수임료 지불 동의를 하고, 그 요금을 지불한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 제품 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈 {@link IHubOrderGoodIssue.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 수임료 {@link IHubOrderGoodIssueFee.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "수임료 지불을 취소한다",
        "description": "수임료 지불을 취소한다.\n\n단 수임료 지불에 대한 취소는 오직, 그것이\n{@link IHubOrderGoodIssueFeeAccept.published_at 확정되기 }전에만 가능하다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 제품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 수임료의 {@link IHubOrderGoodIssueFee.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "수임료 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssueFee"
                }
              }
            }
          }
        },
        "summary": "수임료 개별 조회하기",
        "description": "수임료 개별 조회하기.\n\n수임료 레코드를 개별 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{goodId}/issues/{issueId}/fees": {
      "patch": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 제품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssueFee.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 수임료들의 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodIssueFee"
                }
              }
            }
          }
        },
        "summary": "수임료 리스트 조회하기",
        "description": "수임료 리스트 조회하기.\n\n{@link IHubOrderGoodIssueFee}의 리스트를 조회한다.\n\n리턴되는 {@link IHubOrderGoodIssueFee}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubOrderGoodIssueFee.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubOrderGoodIssueFee.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 수임료만을 {@link IHubOrderGoodIssueFee.IRequest.search 검색}하거나,\n수임료들의 {@link IHubOrderGoodIssueFee.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{goodId}/issues": {
      "post": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 상품의 {@link IHubOrderGood.id }"
          }
        ],
        "requestBody": {
          "description": "이슈 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssue.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "작성된 이슈 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssue"
                }
              }
            }
          }
        },
        "summary": "Issue 작성",
        "description": "Issue 작성.\n\n구매 상품에 대하여 이슈를 작성한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 상품의 {@link IHubOrderGood.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssue.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 이슈들의 요약정보 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodIssue.ISummary"
                }
              }
            }
          }
        },
        "summary": "Issue 요약정보 리스트 조회하기",
        "description": "Issue 요약정보 리스트 조회하기.\n\n{@link IHubOrderGoodIssue}의 요약정보 리스트 조회한다.\n\n리턴되는 {@link IHubOrderGoodIssue}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubOrderGoodIssue.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubOrderGoodIssue.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 이슈만을 {@link IHubOrderGoodIssue.IRequest.search 검색}하거나,\n이슈들의 {@link IHubOrderGoodIssue.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{goodId}/issues/{id}": {
      "put": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id}"
          }
        ],
        "requestBody": {
          "description": "수정할 이슈의 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssue.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 이슈의 정보 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticle.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "Issue 수정",
        "description": "Issue 수정.\n\n이슈의 정보를 수정한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "Issue 삭제",
        "description": "Issue 삭제.\n\n작성한 이슈를 삭제 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "이슈의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssue"
                }
              }
            }
          }
        },
        "summary": "Issue 상세 보기",
        "description": "Issue 상세 보기.\n\n{@link IHubOrderGoodIssue}의 상세 정보를 조회한다.\n\n특정 이슈의 상세 정보를 조회할 때 사용한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{goodId}/snapshots/{id}/execute": {
      "post": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 주문 상품의 {@link IHubOrderGood.id}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 주문 상품의 스냅샷 {@link IHubSaleSnapshot.id }"
          }
        ],
        "requestBody": {
          "description": "실행할 때 필요한 입력",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGood.IExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "실행 결과",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IExecutionResultany"
                }
              }
            }
          }
        },
        "summary": "내가 구매한 상품 실행기",
        "description": "내가 구매한 상품 실행기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{goodId}/snapshots/{id}/proceed": {
      "post": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 주문 상품의 {@link IHubOrderGood.id}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 주문 상품의 스냅샷 {@link IHubSaleSnapshot.id }"
          }
        ],
        "requestBody": {
          "description": "실행할 때 필요한 입력",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGood.IExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "실행 결과",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodHistory"
                }
              }
            }
          }
        },
        "summary": "내가 구매한 상품 진행하기",
        "description": "내가 구매한 상품 진행하기.\n\n구매한 상품을 실행하되, 그것의 리턴값을 기다리지 않고, 다만 실행 결과\n내역에 해당하는 {@link IHubOrderGood}을 반환한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{goodId}/snapshots": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 상품의 {@link IHubOrderGood.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 스냅샷 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleSnapshot.IInvert"
                }
              }
            }
          }
        },
        "summary": "주문 상품으로부터 사용 가능한 API 스냅샷 리스트 조회하기",
        "description": "주문 상품으로부터 사용 가능한 API 스냅샷 리스트 조회하기.\n\n고객이 주문한 {@link IHubOrderGood 상품}으로부터, 사용 가능한 API\n{@link IHubSaleSnapshot.IInvert 스냅샷} 리스트들을 조회한다. 즉, 고객이\n주문한 상품에 대하여, 사용 가능한 모든\n{@link IHubSaleSnapshot.IInvert.version 버전}의 스냅샷을 불러온다는 뜻.\n\n참고로 이 때 기록된 {@link IHubSaleUnitStock.price 가격 정보}는 해당 스냅샷의\n가격이 아닌, 고객이 주문한 상품의 가격이다. 또한, 스냅샷에 기록된 통계 정보 또한,\n오직 해당 스냅샷 시점에 대한 것만이 기록된다. 가령 총 API 호출 건수를 뜻하는\n{@link IHubSaleGoodAggregate.call_count} 의 경우, 귀속 매물에 대한 총 호출\n건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가 기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{goodId}/snapshots/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.IInvert.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleSnapshot.IInvert"
                }
              }
            }
          }
        },
        "summary": "주문 상품으로부터 사용 가능한 특정 스냅샷 조회하기",
        "description": "주문 상품으로부터 사용 가능한 특정 스냅샷 조회하기.\n\n고객이 주문한 {@link IHubOrderGood 상품}으로부터, 사용 가능한 특정 API\n{@link IHubSaleSnapshot.IInvert 스냅샷} 을 조회한다. 즉, 고객이\n주문한 상품에 대하여, 사용 가능한 현재 또는 과거\n{@link IHubSaleSnapshot.IInvert.version 버전}의 스냅샷을 불러온다는 뜻.\n\n참고로 이 때 기록된 {@link IHubSaleUnitStock.price 가격 정보}는 해당 스냅샷의\n가격이 아닌, 고객이 주문한 상품의 가격이다. 또한, 스냅샷에 기록된 통계 정보 또한,\n오직 해당 스냅샷 시점에 대한 것만이 기록된다. 가령 총 API 호출 건수를 뜻하는\n{@link IHubSaleGoodAggregate.call_count} 의 경우, 귀속 매물에 대한 총 호출\n건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가 기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{goodId}/snapshots/{id}/swagger": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.IInvert.id}"
          }
        ],
        "requestBody": {
          "description": "대상 유닛에 대한 식별자 키",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleUnitSwaggerAccessor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "스웨거 문서",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISwagger"
                }
              }
            }
          }
        },
        "summary": "Swagger 문서 조회하기",
        "description": "Swagger 문서 조회하기.\n\n{@link IHubOrderGood 주문 상품}으로부터 사용 가능한 특정\n{@link IHubSaleSnapshot.IInvert 스냅샷}에 대하여,\n{@link IHubSaleSnapshotUnit.IInvert 유닛}을 지정, 그것의\n{@link ISwagger 스웨거 문서}를 불러온다.\n\n리턴되는 스웨거 문서 내 API 를 호출할 때마다, 해당 상품에 대한 API\n호출 횟수가 카운팅되고 그 실행 내역이 기록되며, 필요에 따라 예치금에\n대한 과금이 이루어진다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{goodId}/snapshots/{id}/openai": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.IInvert.id}"
          }
        ],
        "requestBody": {
          "description": "대상 유닛에 대한 식별자 키",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleUnitOpenAiSchemaAccessor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OpenAI 스키마 문서",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IOpenAiDocument"
                }
              }
            }
          }
        },
        "summary": "OpenAI 문서 조회하기",
        "description": "OpenAI 문서 조회하기.\n\n{@link IHubOrderGood 주문 상품}으로부터 사용 가능한 특정\n{@link IHubSaleSnapshot.IInvert 스냅샷}에 대하여,\n{@link IHubSaleSnapshotUnit.IInvert 유닛}을 지정, 그것의\n{@link IOpenAiDocument OpenAI 스키마 문서}를 불러온다.\n\n리턴되는 OpenAI 문서 내 API 를 호출할 때마다, 해당 상품에 대한 API\n호출 횟수가 카운팅되고 그 실행 내역이 기록되며, 필요에 따라 예치금에\n대한 과금이 이루어진다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{id}/open": {
      "put": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문 상품의 {@link IHubOrderGood.id}"
          }
        ],
        "requestBody": {
          "description": "계약 개시 일자 편집 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGood.IOpen"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "주문 계약의 개시 시점 설정",
        "description": "주문 계약의 개시 시점 설정.\n\n대상 {@link IHubOrderGood 상품}의 계약 개시 시점을 설정한다.\n\n주문의 확정 시점과 다르게, 효력의 발생 시점을 그보다 뒤로 미룰 수 있다.\n그리고 계약 효력의 발생 시점은, 그것이 도래하기 전까지, 계속 편집할 수 있다.\n또한 월 고정비 과금은, 본 개시 일자를 기준으로 계상된다.\n\n참고로 고객이 판매자의 API 를 구입한 후, 이를 검토하고 개발하는 과정이\n필요하기에, 본디 계약의 효력 발휘 일시는 주문 확정보다 더 뒤로 밀릴 수밖에\n없는 법.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{id}/close": {
      "put": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문 상품의 {@link IHubOrderGood.id}"
          }
        ],
        "requestBody": {
          "description": "계약 종료 일자 편집 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGood.IClose"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "주문 계약의 종료 시점 설정",
        "description": "주문 계약의 종료 시점 설정.\n\n대상 {@link IHubOrderGood 상품}의 계약 종료 시점을 설정한다.\n\n단, 계약의 종료 시점을 즉시로 할 수 없다. 계약 개시 시점을 기준으로,\n최소 1 개월의 기간이 지나야만 취소할 수 있다. 그리고 이미 계약애 개시된\n상태라면, 마찬가지로 1 개월 단위로만 계약 종료가 가능하다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "주문 상품의 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGood.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 주문 상품 역 참조 정보의 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGood.IInvert"
                }
              }
            }
          }
        },
        "summary": "주문 상품의 역 참조 정보 일괄 조회하기",
        "description": "주문 상품의 역 참조 정보 일괄 조회하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문 아이템의 {@link IHubOrderGood.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "주문 상품 역 참조 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGood.IInvert"
                }
              }
            }
          }
        },
        "summary": "주문 상품의 역 참조 정보 개별 조회하기",
        "description": "주문 상품의 역 참조 정보 개별 조회하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders": {
      "post": {
        "tags": [
          "Order"
        ],
        "parameters": [],
        "requestBody": {
          "description": "생성할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrder.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 주문 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrder"
                }
              }
            }
          }
        },
        "summary": "사용자 주문 생성",
        "description": "사용자 주문 생성.\n\n사용자가 주문을 생성한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrder.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrder"
                }
              }
            }
          }
        },
        "summary": "주문 목록",
        "description": "주문 목록.\n\n{@link IHubOrder} 리스트를 조회한다.\n\n리턴되는 {@link IHubOrder}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubOrder.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubOrder.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 주문만을 {@link IHubOrder.IRequest.search 검색}하거나,\n주문들의 {@link IHubOrder.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{id}": {
      "delete": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "사용자 주문 삭제",
        "description": "사용자 주문 삭제.\n\n아직 publish 및 open 되지 않은 주문을 삭제한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubOrder.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrder"
                }
              }
            }
          }
        },
        "summary": "주문 상세",
        "description": "주문 상세.\n\n특정 {@link IHubOrder}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{id}/discountable": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id}"
          }
        ],
        "requestBody": {
          "description": "대상 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderDiscountable.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "할인 조합 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderDiscountable"
                }
              }
            }
          }
        },
        "summary": "할인 가능 조합 계산하기",
        "description": "할인 가능 조합 계산하기.\n\n현재 주문 중인 상품들을 대상으로, 할인 가능 수단이 어떻게 되는지 계산한다.\n리턴되는 정보에는 각각 사용 가능한 예치금과 구성 가능한 쿠폰의 조합들이\n들어있다.\n\n다만 이 할인 가능 조합은 오직, 해당 주문이 아직 publish 되지 않은 경우에만\n{@link discount 적용}할 수 있으니, 이 점 명심하기 바란다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{id}/discount": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id}"
          }
        ],
        "requestBody": {
          "description": "적용할 할인 쿠폰, 마일리지, 예치금 등의 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderPrice.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "할인이 반영된 가격 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderPrice"
                }
              }
            }
          }
        },
        "summary": "주문에 할인 적용하기",
        "description": "주문에 할인 적용하기.\n\n현 {@link IHubOrder 주문}에 {@link IHubCoupon 할인 쿠폰}을 적용,\n{@link IHubOrderPublish.paid_at 지불}해야 할 고정비 및 변동비\n등의 예치금 총액을 낮춘다.\n\n원칙상 위 조합들을 이용, 현금 결제 금액을 0 원으로 만드는 것도 가능하다.\n\n단, 할인 쿠폰을 적용하기 전에 반드시, {@link discountable} 함수를 미리\n호출하도록 한다. 할인 쿠폰에는 복잡한 제약 조건들이 존재하는데,\n{@link discountable} 함수가 이를 분석, 현 주문에 어떠한\n{@link IHubCouponCombination 할인 쿠폰 조합}을 적용할 수 있는지를 자세하게\n알려줄 것이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/initial": {
      "post": {
        "tags": [],
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "사용자 기본 상품 주문 생성 후 확정",
        "description": "사용자 기본 상품 주문 생성 후 확정.\n\n사용자의 기본 상품 주문을 생성하고 확정한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{id}/publish/able": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "주문 확정 가능성 여부 확인",
        "description": "주문 확정 가능성 여부 확인.\n\n주문이 확정 가능한지 여부를 확인한다.\n\n만일 확정 불가능시, 그 이유가 410 이나 422 등의 status code 와 함께\n메시지로써 반환된다. 반대로 확정 가능시, 200 status code 가 리턴된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{id}/publish": {
      "post": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          }
        ],
        "requestBody": {
          "description": "계약 확정에 대한 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderPublish.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "계약 확정 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderPublish"
                }
              }
            }
          }
        },
        "summary": "주문을 확정한다",
        "description": "주문을 확정한다.\n\n현재 {@link IHubOrder 신청 단계에 머물러있는 주문}을 확정, 즉 계약으로써 성립시킨다.\n\n단, 계약이 확정되었다하여, 그것이 곧바로 개시되는 것은 아니다. 계약을 확정하며\n(또는 주문 상품마다 각각이) 계약의 {@link IHubOrderGood.opened_at 개시 시점}을\n설정할 수 있다. 이는 고객이 판매자의 API 를 구입한 후, 이를 분석하고 개발하는\n과정이 필요하기에, 계약의 개시 시점을 뒤로 미룰 수 있도록 설계한 것.\n\n단 계약의 개시 시점이 나중이더라도, 계약의 효력이 발휘된 시점에서, 첫 달 분의\n고정비는 예치 상태로 전환된다. 물론, 계약의 개시 시점 전까지는 주문 계약을\n취소하여, 이를 환불할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{id}/publish/open": {
      "put": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          }
        ],
        "requestBody": {
          "description": "계약 개시 일자 편집 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderPublish.IOpen"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "주문 계약 개시 시점의 일괄 적용",
        "description": "주문 계약 개시 시점의 일괄 적용.\n\n주문 계약의 개시 시점을 모든 {@link IHubOrderGood 상품}들에 대하여\n일괄 설정한다.\n\n주문의 확정 시점과 다르게, 효력의 발생 시점을 그보다 뒤로 미룰 수 있다.\n그리고 계약 효력의 발생 시점은, 그것이 도래하기 전까지, 계속 편집할 수 있다.\n또한 월 고정비 과금은, 본 개시 일자를 기준으로 계상된다.\n\n참고로 고객이 판매자의 API 를 구입한 후, 이를 검토하고 개발하는 과정이\n필요하기에, 본디 계약의 효력 발휘 일시는 주문 확정보다 더 뒤로 밀릴 수밖에\n없는 법.\n\n> 각 주문 상품 별로 개시 일시를 다르게 설정하는 것도 가능하다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{id}/publish/close": {
      "put": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          }
        ],
        "requestBody": {
          "description": "계약 종료 일자 편집 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderPublish.IClose"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "주문 계약의 종료 일시 일괄 적용",
        "description": "주문 계약의 종료 일시 일괄 적용.\n\n주문 계약의 종료 시점을 모든 {@link IHubOrderGood 상품}들에 대하여\n일괄 설정한다.\n\n단, 계약의 종료 시점을 지금 즉시로 할 수 없다. 계약 개시 시점을 기준으로,\n최소 1 개월의 기간이 지나야만 취소할 수 있다. 그리고 이미 계약애 개시된\n상태라면, 마찬가지로 1 개월 단위로만 계약 종료가 가능하다.\n\n> 각 주문 상품 별로 종료 일시를 다르게 설정하는 것도 가능하다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{goodId}/histories": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 주문 상품의 {@link IHubOrderGood.id }"
          }
        ],
        "requestBody": {
          "description": "주문 상품의 요청 정보.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 주문 상품 실행 내역의 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodHistory.ISummary"
                }
              }
            }
          }
        },
        "summary": "주문 상품의 실행 내역 일괄 조회하기",
        "description": "주문 상품의 실행 내역 일괄 조회하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/orders/{orderId}/goods/{goodId}/histories/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 주문 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 주문 상품 실행 내역의 {@link IHubOrderGoodHistory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodHistory"
                }
              }
            }
          }
        },
        "summary": "주문 상품의 실행 내역 개별 조회하기",
        "description": "주문 상품의 실행 내역 개별 조회하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/push-messages": {
      "patch": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubPushMessage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "푸시 메시지 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubPushMessage"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 일괄 조회",
        "description": "푸시 메시지 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/push-messages/{id}": {
      "get": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 타깃 푸시 메시지의 {@link IHubPushMessage.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "푸시 메시지 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubPushMessage"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 개별 조회",
        "description": "푸시 메시지 개별 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/push-messages/{code}/get": {
      "get": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 타깃 푸시 메시지의 {@link IHubPushMessage.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "푸시 메시지 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubPushMessage"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 개별 조회 by code",
        "description": "푸시 메시지 개별 조회 by code.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/push-messages/histories": {
      "patch": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 요청 및 검색 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubPushMessageHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "푸시 메시지 발송 내역 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubPushMessageHistory"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 발송 내역 일괄 조회",
        "description": "푸시 메시지 발송 내역 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/push-messages/histories/{id}": {
      "get": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 푸시 메시지 발송 내역의 {@link IHubPushMessageHistory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "푸시 메시지 발송 내역 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubPushMessageHistory"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 발송 내역 개별 조회",
        "description": "푸시 메시지 발송 내역 개별 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{saleId}/questions/{inquiryId}/comments": {
      "post": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "생성할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 질의문 댓글의 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "질의문 댓글 작성",
        "description": "질의문 댓글 작성.\n\n질의문에 댓글을 작성한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "제품 질의문에 대한 댓글 목록 조회",
        "description": "제품 질의문에 대한 댓글 목록 조회.\n\n{@link IHubSaleInquiryComment} 리스트를 조회한다.\n\n리턴되는 {@link IHubSaleInquiryComment}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSaleInquiryComment.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSaleInquiryComment.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 제품질의문에 대한 댓글을 {@link IHubSaleInquiryComment.IRequest.search 검색}하거나,\n제품 질의문에 대한 댓글의 {@link IHubSaleInquiryComment.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{saleId}/questions/{inquiryId}/comments/{id}": {
      "put": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 댓글의 {@link IHubSaleInquiryComment.id}"
          }
        ],
        "requestBody": {
          "description": "수정할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 질의문 댓글의 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryComment.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "질의문 댓글 수정",
        "description": "질의문 댓글 수정.\n\n질의문에 작성된 댓글을 수정한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 댓글의 {@link IHubSaleInquiryComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "질의문 댓글 삭제",
        "description": "질의문 댓글 삭제.\n\n작성된 질의문 댓글을 삭제한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleInquiryComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 제품 질의문에 대한 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "제품 질의문에 대한 특정 댓글 조회",
        "description": "제품 질의문에 대한 특정 댓글 조회.\n\n특정 {@link IHubSaleInquiryComment}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{saleId}/questions": {
      "post": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 해당 {@link IHubSale.id }"
          }
        ],
        "requestBody": {
          "description": "질문글 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleQuestion.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 질문글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleQuestion"
                }
              }
            }
          }
        },
        "summary": "고객 질문글 작성",
        "description": "고객 질문글 작성.\n\n고객 질문글 생성.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleQuestion.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleQuestion.ISummary"
                }
              }
            }
          }
        },
        "summary": "매물 스냅샷에 대한 질문 요약 정보 목록 조회",
        "description": "매물 스냅샷에 대한 질문 요약 정보 목록 조회.\n\n{@link IHubSaleQuestion} 리스트를 조회한다.\n\n리턴되는 {@link IHubSaleQuestion}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSaleQuestion.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSaleQuestion.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 매물 스냅샷에 대한 질문을 {@link IHubSaleQuestion.IRequest.search 검색}하거나,\n매물 스냅샷에 대한 질문의 {@link IHubSaleQuestion.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{saleId}/questions/{id}": {
      "put": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 해당 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 해당 {@link IHubSaleQuestion.id}"
          }
        ],
        "requestBody": {
          "description": "질문글 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBbsArticle.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 질문글 정보의 스냅샷",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticle.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "고객 질문글 수정",
        "description": "고객 질문글 수정.\n\n고객 질문글 수정",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleQuestion.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 매물 스냅샷에 대한 질문 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleQuestion"
                }
              }
            }
          }
        },
        "summary": "매물 스냅샷에 대한 질문 상세 정보 조회",
        "description": "매물 스냅샷에 대한 질문 상세 정보 조회.\n\n특정 {@link IHubSaleQuestion}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 삭제할 {@link IHubSaleQuestion.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "매물 스냅샷에 대한 질문 삭제",
        "description": "매물 스냅샷에 대한 질문 삭제.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{saleId}/reviews/{inquiryId}/comments": {
      "post": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "생성할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 질의문 댓글의 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "질의문 댓글 작성",
        "description": "질의문 댓글 작성.\n\n질의문에 댓글을 작성한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "제품 질의문에 대한 댓글 목록 조회",
        "description": "제품 질의문에 대한 댓글 목록 조회.\n\n{@link IHubSaleInquiryComment} 리스트를 조회한다.\n\n리턴되는 {@link IHubSaleInquiryComment}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSaleInquiryComment.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSaleInquiryComment.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 제품질의문에 대한 댓글을 {@link IHubSaleInquiryComment.IRequest.search 검색}하거나,\n제품 질의문에 대한 댓글의 {@link IHubSaleInquiryComment.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{saleId}/reviews/{inquiryId}/comments/{id}": {
      "put": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 댓글의 {@link IHubSaleInquiryComment.id}"
          }
        ],
        "requestBody": {
          "description": "수정할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 질의문 댓글의 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryComment.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "질의문 댓글 수정",
        "description": "질의문 댓글 수정.\n\n질의문에 작성된 댓글을 수정한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 댓글의 {@link IHubSaleInquiryComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "질의문 댓글 삭제",
        "description": "질의문 댓글 삭제.\n\n작성된 질의문 댓글을 삭제한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleInquiryComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 제품 질의문에 대한 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "제품 질의문에 대한 특정 댓글 조회",
        "description": "제품 질의문에 대한 특정 댓글 조회.\n\n특정 {@link IHubSaleInquiryComment}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{saleId}/reviews": {
      "post": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 해당 {@link IHubSale.id }"
          }
        ],
        "requestBody": {
          "description": "리뷰 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleReview.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 리뷰 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleReview"
                }
              }
            }
          }
        },
        "summary": "고객 매물 스냅샷 리뷰 작성",
        "description": "고객 매물 스냅샷 리뷰 작성.\n\n고객이 매물의 스냅샷에 리뷰를 작성합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleReview.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 매물 스냡샷에 대한 리뷰 요약 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleReview.ISummary"
                }
              }
            }
          }
        },
        "summary": "매물 스냅샷에 대한 리뷰 요약 정보 목록 조회",
        "description": "매물 스냅샷에 대한 리뷰 요약 정보 목록 조회.\n\n{@link IHubSaleReview}의 요약 정보 리스트를 조회한다.\n\n리턴되는 {@link IHubSaleReview}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSaleReview.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSaleReview.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 매물 스냅샷에 대한 리뷰를 {@link IHubSaleReview.IRequest.search 검색}하거나,\n매물 스냅샷에 대한 리뷰의 {@link IHubSaleReview.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{saleId}/reviews/{id}": {
      "put": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 해당 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 리뷰의 {@link IHubSaleReview.id}"
          }
        ],
        "requestBody": {
          "description": "리뷰 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleReview.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 리뷰 정보의 스냅샷",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleReview.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "고객 매물 스냅샷 리뷰 수정",
        "description": "고객 매물 스냅샷 리뷰 수정.\n\n고객이 매물의 스냅샷에 작성한 리뷰를 수정합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleReview.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 매물 스냅샷에 대한 리뷰 상세 정보.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleReview"
                }
              }
            }
          }
        },
        "summary": "매물 스냅샷에 대한 리뷰 상세 조회",
        "description": "매물 스냅샷에 대한 리뷰 상세 조회.\n\n특정 {@link IHubSaleReview}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleReview.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "매물에 대한 리뷰 삭제",
        "description": "매물에 대한 리뷰 삭제.\n\n특정 매물에 대한 리뷰 삭제.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSale.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 매물들의 요약 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSale.ISummary"
                }
              }
            }
          }
        },
        "summary": "매물의 요약정보 리스트 조회하기",
        "description": "매물의 요약정보 리스트 조회하기.\n\n{@link IHubSale.ISummary 매물의 요약 정보}들을 불러온다.\n\n리턴되는 {@link IHubSale.ISummary 요약 정보}들은 {@link IPage 페이징} 처리가\n되어있다. 그리고 요청 정보 {@link IHubSale.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSale.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 매물들만을 {@link IHubSale.IRequest.search 검색}하거나,\n매물들의 {@link IHubSale.IRequest.sort 정렬 조건}을 임의로 지정하거나 할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{id}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "매물 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSale"
                }
              }
            }
          }
        },
        "summary": "매물 상세 조회하기",
        "description": "매물 상세 조회하기.\n\n타깃 매물의 상세 정보 {@link IHubSale} 을 조회한다.\n\n단, 매물을 조회하는 주체가 누구냐에 따라, 세부 속성값이 달라질 수 있다. 가장 대표적인\n것이 {@link IHubSaleUnitSwagger.host} 로써, 조회하는 주체가 고객일 때는 본\n허브 시스템의 미들웨어 API 주소가, 반면에 판매자/관리자일 때는 판매 당사자가 등록한\n상용 서버 API 주소가 적힌다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{id}/swagger": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id}"
          }
        ],
        "requestBody": {
          "description": "대상 유닛 (및 스톡) 에 대한 식별자 키",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleUnitSwaggerAccessor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "스웨거 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISwagger"
                }
              }
            }
          }
        },
        "summary": "Swagger 정보 조회하기",
        "description": "Swagger 정보 조회하기.\n\n타깃 {@link IHubSale 매물}로부터 특정 {@link IHubSaleUnit 유닛} 및\n{@link IHubSaleUnitStock 스톡}을 지정, 그것의 {@link ISwagger 스웨거} 정보를\n불러온다.\n\n리턴되는 스웨거 문서는 {@link IHubSeller 판매자} 및\n{@link IHubAdministrator 관리자} 기준으로 판매자가 등록한 실제 서버 API 주소가\n기재되며, {@link IHubCustomer 고객} 기준으로는 DEV 서버에 대한 본 허브 시스템의\n미들웨어 API 주소가 기재된다. 영리 목적을 위해, REAL 서버 주소는 배제된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{saleId}/snapshots": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id}"
          }
        ],
        "requestBody": {
          "description": "페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지 단위로 묶인 스냅샷 요약 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleSnapshot.ISummary"
                }
              }
            }
          }
        },
        "summary": "매물 내 승인된 스냅샷들의 요약정보 리스트 조회하기",
        "description": "매물 내 승인된 스냅샷들의 요약정보 리스트 조회하기.\n\n특정 {@link IHubSale 매물}을 대상으로, 과거 및 현재의 모든\n{@link IHubSaleAuditApproval 심사 승인}된 바 있는 스냅샷들의\n{@link IHubSaleSnapshot.ISummary 요약 정보}를 불러온다.\n\n그리고 이 때, 기록된 통계/집계 정보는, 오직 해당 스냅샷 시점에 대한 것만이\n기재된다. 가령 총 API 호출 건수를 뜻하는 {@link IHubSaleGoodAggregate.call_count}\n의 경우, 귀속 매물에 대한 총 호출 건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가\n기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{saleId}/snapshots/{id}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleSnapshot"
                }
              }
            }
          }
        },
        "summary": "메믈 내 승인된 스냅샷 상세 조회하기",
        "description": "메믈 내 승인된 스냅샷 상세 조회하기.\n\n{@link IHubSale 매물} 내 {@link IHubSaleAuditApproval 심사 승인}된 바 있는\n특정 시기의 {@link IHubSaleSnapshot 스냅샷}을 조회한다.\n\n단, 해당 매물이 {@link IHubSaleAudit 심사} 진행 중이고\n{@link IHubSaleAuditEmendation 첨삭} 과정에 있다면, 그 때에는 비록 심사\n승인되지 않은 경우라도, {@link IHubSeller 판매자} 및\n{@link IHubAdministrator 관리자}는 이를 조회할 수 있다.\n\n그리고 이 때, 기록된 통계/집계 정보는, 오직 해당 스냅샷 시점에 대한 것만이\n기재된다. 가령 총 API 호출 건수를 뜻하는 {@link IHubSaleGoodAggregate.call_count}\n의 경우, 귀속 매물에 대한 총 호출 건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가\n기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{saleId}/snapshots/{id}/flip": {
      "get": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷으로부터 역 구성한 매물 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSale"
                }
              }
            }
          }
        },
        "summary": "매물 내 승인된 스냅샷의 매물 역 구성정보 조회하기",
        "description": "매물 내 승인된 스냅샷의 매물 역 구성정보 조회하기.\n\n{@link IHubSale 매물} 내 {@link IHubSaleAuditApproval 심사 승인}된 바 있는\n특정 시기의 {@link IHubSaleSnapshot 스냅샷}에 대한 정보를 역 구성, 해당 시점의\n매물 정보 {@link IHubSale} 을 조회한다.\n\n단, 해당 매물이 {@link IHubSaleAudit 심사} 진행 중이고\n{@link IHubSaleAuditEmendation 첨삭} 과정에 있다면, 그 때에는 비록 심사\n승인되지 않은 경우라도, {@link IHubSeller 판매자} 및\n{@link IHubAdministrator 관리자}는 이를 조회할 수 있다.\n\n그리고 이 때, 기록된 통계/집계 정보는, 오직 해당 스냅샷 시점에 대한 것만이\n기재된다. 가령 총 API 호출 건수를 뜻하는 {@link IHubSaleGoodAggregate.call_count}\n의 경우, 귀속 매물에 대한 총 호출 건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가\n기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{saleId}/snapshots/{id}/swagger": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.id}"
          }
        ],
        "requestBody": {
          "description": "대상 유닛 (및 스톡) 에 대한 식별자 키",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleUnitSwaggerAccessor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "스웨거 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISwagger"
                }
              }
            }
          }
        },
        "summary": "Swagger 정보 조회하기",
        "description": "Swagger 정보 조회하기.\n\n타깃 {@link IHubSaleSnapshot 매물 스냅샷}으로부터 특정 {@link IHubSaleUnit 유닛}\n및 {@link IHubSaleUnitStock 스톡}을 지정, 그것의 {@link ISwagger 스웨거} 정보를\n불러온다.\n\n리턴되는 스웨거 문서는 {@link IHubSeller 판매자} 및\n{@link IHubAdministrator 관리자} 기준으로 판매자가 등록한 실제 서버 API 주소가\n기재되며, {@link IHubCustomer 고객} 기준으로는 DEV 서버에 대한 본 허브 시스템의\n미들웨어 API 주소가 기재된다. 영리 목적을 위해, REAL 서버 주소는 배제된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{saleId}/bookmark": {
      "post": {
        "tags": [],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubBookmarkSale"
                }
              }
            }
          }
        },
        "summary": "사용자가 매물에 북마크를 추가한다",
        "description": "사용자가 매물에 북마크를 추가한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "사용자가 매물 북마크를 제거한다",
        "description": "사용자가 매물 북마크를 제거한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/collections": {
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleCollection.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleCollection.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/collections/{id}": {
      "get": {
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleCollection"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/recommendations": {
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleRecommend.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleRecommend.ISummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/sales/{saleId}/questions/{inquiryId}/likes": {
      "post": {
        "tags": [],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "제품 질의문에 대한 좋아요 생성",
        "description": "제품 질의문에 대한 좋아요 생성.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Inquiry",
          "Like"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "제품 질의문에 대한 좋아요 삭제",
        "description": "제품 질의문에 대한 좋아요 삭제.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/statistics/orders/goods/calls": {
      "patch": {
        "tags": [
          "Statistics"
        ],
        "parameters": [],
        "requestBody": {
          "description": "조회할 상품의 검색 및 페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodCallAggregate.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "상품의 API 호출 내역에 대한 통계 정보.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodCallAggregate"
                }
              }
            }
          }
        },
        "summary": "특정 기간 API 호출 관련 통계를 조회 합니다",
        "description": "특정 기간 API 호출 관련 통계를 조회 합니다.\n\n상품의 API 사용량, 에러율, API Latency 등을 조회합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/statistics/orders/goods/calls/entire": {
      "patch": {
        "tags": [
          "Statistics"
        ],
        "parameters": [],
        "requestBody": {
          "description": "대상 상품 내지 매물에 대한 특정화 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodCallAggregate.IEntireRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "상품의 API 호출 내역에 대한 전체 기간의 통계 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodCallAggregate"
                }
              }
            }
          }
        },
        "summary": "전체 기간의 API 호출 관련 통계를 조회",
        "description": "전체 기간의 API 호출 관련 통계를 조회.\n\n상품의 전체 기간에 대한 API 사용량, 에러율, API Latency 등을 조회합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/statistics/orders/goods/calls/ranking": {
      "patch": {
        "tags": [
          "Statistics"
        ],
        "parameters": [],
        "requestBody": {
          "description": "조회할 상품의 검색 및 페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodRanking.IEntireRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "상품의 API 호출 내역에 대한 통계 정보.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodRanking"
                }
              }
            }
          }
        },
        "summary": "구독한 API의 특정 기간 랭킹을 조회 합니다",
        "description": "구독한 API의 특정 기간 랭킹을 조회 합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/statistics/sales/calls/rankings": {
      "patch": {
        "tags": [
          "Statistics"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 랭킹 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleCallRanking"
                }
              }
            }
          }
        },
        "summary": "매물의 API 호출 횟수 기준 랭킹을 조회한다",
        "description": "매물의 API 호출 횟수 기준 랭킹을 조회한다.\n\n매물이 주문되어 그 API 가 호출된 횟수를 기준, 상위권 랭킹의 매물들을 조회한다.\n총 조회 가능한 랭킹은 100 위까지이며, 만일 서로 다른 매물 간 동점자 발생시,\n그 처리는 다음과 같다.\n\n1. API 호출 건수가 가장 많은 매물\n2. API 호출 중 성공 횟수가 많은 매물\n3. 보다 더 빨리 생성된 매물",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/systematic/channels/{channelCode}/categories": {
      "patch": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 채널 코드"
          }
        ],
        "responses": {
          "200": {
            "description": "채널 카테고리 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IHubChannelCategory.IHierarchical"
                  }
                }
              }
            }
          }
        },
        "summary": "채널 카테고리 정보 리스트",
        "description": "채널 카테고리 정보 리스트.\n\n{@link IHubChannelCategory} 리스트를 조회한다.\n채널 카테고리는 1: N 재귀구조를 가져 부모 카테고리가 존재할 경우 children 필드에 자식 카테고리 리스트를 포함한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/systematic/channels/{channelCode}/categories/{id}": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 채널 코드"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 해당 채널 카테고리 {@link IHubChannelCategory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "채널 카테고리 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubChannelCategory"
                }
              }
            }
          }
        },
        "summary": "채널 카테고리 상세 정보",
        "description": "채널 카테고리 상세 정보.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/systematic/channels/{channelCode}/categories/{id}/invert": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 채널 코드"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 카테고리 {@link IHubChannelCategory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "상위 카테고리 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubChannelCategory.IInvert"
                }
              }
            }
          }
        },
        "summary": "특정 카테고리의 상위 카테고리 정보",
        "description": "특정 카테고리의 상위 카테고리 정보.\n\n특정 카테고리의 부모 카테고리 정보를 가져옴.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/systematic/channels": {
      "patch": {
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubChannel.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubChannel"
                }
              }
            }
          }
        },
        "summary": "허브 채널 리스트",
        "description": "허브 채널 리스트.\n\n{@link IHubChannel} 리스트를 조회한다.\n\n리턴되는 {@link IHubChannel}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubChannel.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubChannel.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 허브 채널을 {@link IHubChannel.IRequest.search 검색}하거나,\n허브 채널들의 {@link IHubChannel.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/systematic/channels/hierarchical": {
      "patch": {
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubChannel.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubChannel.IHierarchical"
                }
              }
            }
          }
        },
        "summary": "채널 계층 정보 리스트",
        "description": "채널 계층 정보 리스트.\n\n{@link IHubChannel.IHierarchical} 카테고리 계층 리스트를 조회한다.\n\n리턴되는 {@link IHubChannel}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubChannel.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubChannel.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 채널 계층을 {@link IHubChannel.IRequest.search 검색}하거나,\n채널 계층의 {@link IHubChannel.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/systematic/channels/{id}": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubChannel.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 특정 채널의 계층",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubChannel.IHierarchical"
                }
              }
            }
          }
        },
        "summary": "채널의 아이디로 특정 채널의 계층 보기",
        "description": "채널의 아이디로 특정 채널의 계층 보기.\n\n특정 채널의 계층을 조회합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/systematic/channels/{code}/get": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 조회할 {@link IHubChannel.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 특정 채널의 계층",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubChannel.IHierarchical"
                }
              }
            }
          }
        },
        "summary": "채널 코드로 특정 채널의 계층 보기",
        "description": "채널 코드로 특정 채널의 계층 보기.\n\n특정 채널의 계층을 조회합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/systematic/sections": {
      "patch": {
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSection.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSection"
                }
              }
            }
          }
        },
        "summary": "섹션 정보 리스트",
        "description": "섹션 정보 리스트.\n\n{@link IHubSection}의 리스트를 조회한다.\n\n리턴되는 {@link IHubSection}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSection.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSection.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 섹션을 {@link IHubSection.IRequest.search 검색}하거나,\n섹션들의 {@link IHubSection.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/systematic/sections/{id}": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSection.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 섹션 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSection"
                }
              }
            }
          }
        },
        "summary": "섹션 아이디로 특정 섹션 정보 상세",
        "description": "섹션 아이디로 특정 섹션 정보 상세.\n\n특정 {@link IHubSection}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/systematic/sections/{code}/get": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 조회할 {@link IHubSection.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 섹션 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSection"
                }
              }
            }
          }
        },
        "summary": "섹션 코드로 특정 섹션 정보 상세",
        "description": "섹션 코드로 특정 섹션 정보 상세.\n\n특정 {@link IHubSection}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/customers/shelves/orders/goods": {
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubShelfOrderGood.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubShelfOrderGood"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/authenticate/login": {
      "post": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "회원 로그인 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubMember.ILogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "판매 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSeller.IInvert"
                }
              }
            }
          }
        },
        "summary": "판매자 회원 로그인",
        "description": "판매자 회원 로그인.\n\n{@link IHubSeller 판매자} 회원으로 가입한 {@link IHubCustomer 고객}이, 계정의\n이메일과 비밀번호를 입력하여 로그인을 실시한다.\n\n본 API 는 기본적으로 고객 쪽 로그인 API 인\n{@link HubApi.functional.hub.customers.authenticate.login} 와 동일하되, 그것은\n{@link join 판매자 회원으로 가입}하지 아니한 단순 {@link IHubMember 회원}의 경우에도\n로그인이 가능하고, 이것은 그렇지 않다. 또한, 리턴되는 타입 또한 본 API 는 판매자로부터\n회원 및 고객 정보로 {@link IHubSeller.IInvert 역 참조}하는 구조이며, 고객 쪽 API 는\n{@link IHubCustomer.member 고객으로부터 회원}, 그리고\n{@link IHubMember.seller 회원으로부터 판매자} 순으로 정 방향으로 참조하는 구조이다.\n\n참고로 판매자로 로그인하기 전에, 필히\n{@link HubApi.functional.hub.customers.authenticate.create} 함수를 호출하여\n{@link IHubCustomer 고객} 레코드 및 토큰을 발행하기 바란다. 본 시스템은 고객\n토큰을 발행하지 않고서는, 그 무엇도 할 수 없게 되어있기 때문이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/authenticate/join": {
      "post": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "requestBody": {
          "description": "회원 가입 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSeller.IJoin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "판매자 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSeller.IInvert"
                }
              }
            }
          }
        },
        "summary": "판매자 회원 가입",
        "description": "판매자 회원 가입.\n\n{@link IHubMember 일반 회원}으로 가입한 {@link IHubCustomer 고객}이,\n{@link IHubSeller 판매자 회원}으로도 추가 가입한다.\n\n물론 본 API 함수를 호출하기 위해서는 고객 토큰도 발행해야 하고, 일반 회원으로도\n가입이 완료되어야 한다. 따라서 반드시 다음 두 API 가 사전에 순서대로 호출되었어야\n한다.\n\n1. {@link HubApi.functional.hub.customers.authenticate.create}\n2. {@link HubApi.functional.hub.customers.authenticate.join}",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/authenticate": {
      "get": {
        "tags": [
          "Authenticate"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "판매자 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSeller.IInvert"
                }
              }
            }
          }
        },
        "summary": "판매자 정보 가져오기",
        "description": "판매자 정보 가져오기.\n\n{@link IHubSeller 판매자} 회원으로 가입한 {@link IHubCustomer 고객}이,\n자신의 {@link IHubSeller.Invert 판매자 기준 역 참조 정보}를 다시 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/commons/attachments": {
      "get": {
        "tags": [
          "commons"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "URL 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPresignedUrl"
                }
              }
            }
          }
        },
        "description": "Presigned URL 발행하기"
      }
    },
    "/hub/sellers/coupons": {
      "post": {
        "tags": [
          "Coupon"
        ],
        "parameters": [],
        "requestBody": {
          "description": "할인 쿠폰 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubCoupon.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "할인 쿠폰 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCoupon"
                }
              }
            }
          }
        },
        "summary": "할인 쿠폰 등록하기",
        "description": "할인 쿠폰 등록하기.\n\n새 할인 쿠폰을 설계하여 등록한다.\n\n참고로 쿠폰의 편집은 불가하다. 삭제하고 새로 만들라고 안내하도록.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Coupon"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubCoupon.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 할인 쿠폰 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubCoupon"
                }
              }
            }
          }
        },
        "summary": "할인 쿠폰 일괄 조회하기",
        "description": "할인 쿠폰 일괄 조회하기.\n\n{@link IHubCoupon 할인 쿠폰} 리스트들을 {@link IPage 페이징} 처리하여\n반환한다.\n\n만약 현재 할인 쿠폰을 조회하는 대상이 {@link IHubCustomer 고객}이라면,\n시장에 공개된, 그리고 현재 고객이 그 {@link IHubCouponTicket 티켓}을\n발급해가는데 문제 없는 쿠폰들만이 보일 뿐이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/coupons/{id}": {
      "delete": {
        "tags": [
          "Coupon"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 할인 쿠폰의 {@link IHubCoupon.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "할인 쿠폰 삭제하기",
        "description": "할인 쿠폰 삭제하기.\n\n단, 이미 할인 개시된 쿠폰은 삭제할 수 없다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Coupon"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "title": "대상 할인 쿠폰의 {@link IHubCoupon.id}",
            "description": " 대상 할인 쿠폰의 {@link IHubCoupon.id}."
          }
        ],
        "responses": {
          "200": {
            "description": "할인 쿠폰 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubCoupon"
                }
              }
            }
          }
        },
        "summary": "할인 쿠폰 개별 조회하기",
        "description": "할인 쿠폰 개별 조회하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/push-messages": {
      "patch": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubPushMessage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "푸시 메시지 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubPushMessage"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 일괄 조회",
        "description": "푸시 메시지 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/push-messages/{id}": {
      "get": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 타깃 푸시 메시지의 {@link IHubPushMessage.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "푸시 메시지 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubPushMessage"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 개별 조회",
        "description": "푸시 메시지 개별 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/push-messages/{code}/get": {
      "get": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 타깃 푸시 메시지의 {@link IHubPushMessage.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "푸시 메시지 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubPushMessage"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 개별 조회 by code",
        "description": "푸시 메시지 개별 조회 by code.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/push-messages/histories": {
      "patch": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 요청 및 검색 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubPushMessageHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "푸시 메시지 발송 내역 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubPushMessageHistory"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 발송 내역 일괄 조회",
        "description": "푸시 메시지 발송 내역 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/push-messages/histories/{id}": {
      "get": {
        "tags": [
          "PushMessage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 푸시 메시지 발송 내역의 {@link IHubPushMessageHistory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "푸시 메시지 발송 내역 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubPushMessageHistory"
                }
              }
            }
          }
        },
        "summary": "푸시 메시지 발송 내역 개별 조회",
        "description": "푸시 메시지 발송 내역 개별 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/orders/{orderId}/goods/{goodId}/issues/{issueId}/comments": {
      "post": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 제품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id }"
          }
        ],
        "requestBody": {
          "description": "생성할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssueComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 이슈의 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssueComment"
                }
              }
            }
          }
        },
        "summary": "Issue 댓글 생성",
        "description": "Issue 댓글 생성.\n\n{@link IHubOrderGoodIssueComment}를 생성한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGoodIssue.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssueComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodIssueComment"
                }
              }
            }
          }
        },
        "summary": "Issue 댓글 목록",
        "description": "Issue 댓글 목록.\n\n{@link IHubOrderGoodIssueComment} 리스트를 조회한다.\n\n리턴되는 {@link IHubOrderGoodIssueComment}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubOrderGoodIssueComment.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubOrderGoodIssueComment.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 댓글만을 {@link IHubOrderGoodIssueComment.IRequest.search 검색}하거나,\n댓상들의 {@link IHubOrderGoodIssueComment.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/orders/{orderId}/goods/{goodId}/issues/{issueId}/comments/{id}": {
      "put": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 제품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 댓글의 {@link IHubOrderGoodIssueComment.id}"
          }
        ],
        "requestBody": {
          "description": "수정할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssueComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 이슈의 댓글 스냅샷",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssueComment.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "Issue 댓글 수정",
        "description": "Issue 댓글 수정.\n\n{@link IHubOrderGoodIssueComment}를 수정한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 제품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 댓글의 {@link IHubOrderGoodIssueComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "Issue 댓글 삭제",
        "description": "Issue 댓글 삭제.\n\n{@link IHubOrderGoodIssueComment}를 삭제한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGoodIssue.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 {@link IHubOrderGoodIssueComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "댓글 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssueComment"
                }
              }
            }
          }
        },
        "summary": "Issue 댓글 조회",
        "description": "Issue 댓글 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/orders/{orderId}/goods/{goodId}/issues/{issueId}/fees": {
      "post": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 제품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id }"
          }
        ],
        "requestBody": {
          "description": "생성할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssueFee.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 수임료 제시 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssueFee"
                }
              }
            }
          }
        },
        "summary": "수임료 제시",
        "description": "수임료 제시.\n\n판매자가 이슈에 대한 수임료를 제시한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 제품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssueFee.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 수임료들의 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodIssueFee"
                }
              }
            }
          }
        },
        "summary": "수임료 리스트 조회하기",
        "description": "수임료 리스트 조회하기.\n\n{@link IHubOrderGoodIssueFee}의 리스트를 조회한다.\n\n리턴되는 {@link IHubOrderGoodIssueFee}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubOrderGoodIssueFee.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubOrderGoodIssueFee.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 수임료만을 {@link IHubOrderGoodIssueFee.IRequest.search 검색}하거나,\n수임료들의 {@link IHubOrderGoodIssueFee.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/orders/{orderId}/goods/{goodId}/issues/{issueId}/fees/{id}": {
      "delete": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 제품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 수임료의 {@link IHubOrderGoodIssueFee.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "수임료 제시 삭제",
        "description": "수임료 제시 삭제.\n\n판매자가 제시한 수임료를 삭제한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 제품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "issueId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 수임료의 {@link IHubOrderGoodIssueFee.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "수임료 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssueFee"
                }
              }
            }
          }
        },
        "summary": "수임료 개별 조회하기",
        "description": "수임료 개별 조회하기.\n\n수임료 레코드를 개별 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/orders/{orderId}/goods/{goodId}/issues": {
      "post": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 상품의 {@link IHubOrderGood.id }"
          }
        ],
        "requestBody": {
          "description": "이슈 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssue.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "작성된 이슈 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssue"
                }
              }
            }
          }
        },
        "summary": "Issue 작성",
        "description": "Issue 작성.\n\n구매 상품에 대하여 이슈를 작성한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 상품의 {@link IHubOrderGood.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssue.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 이슈들의 요약정보 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodIssue.ISummary"
                }
              }
            }
          }
        },
        "summary": "Issue 요약정보 리스트 조회하기",
        "description": "Issue 요약정보 리스트 조회하기.\n\n{@link IHubOrderGoodIssue}의 요약정보 리스트 조회한다.\n\n리턴되는 {@link IHubOrderGoodIssue}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubOrderGoodIssue.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubOrderGoodIssue.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 이슈만을 {@link IHubOrderGoodIssue.IRequest.search 검색}하거나,\n이슈들의 {@link IHubOrderGoodIssue.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/orders/{orderId}/goods/{goodId}/issues/{id}": {
      "put": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id}"
          }
        ],
        "requestBody": {
          "description": "수정할 이슈의 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodIssue.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 이슈의 정보 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticle.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "Issue 수정",
        "description": "Issue 수정.\n\n이슈의 정보를 수정한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "Issue 삭제",
        "description": "Issue 삭제.\n\n작성한 이슈를 삭제 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Issue"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 이슈의 {@link IHubOrderGoodIssue.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "이슈의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodIssue"
                }
              }
            }
          }
        },
        "summary": "Issue 상세 보기",
        "description": "Issue 상세 보기.\n\n{@link IHubOrderGoodIssue}의 상세 정보를 조회한다.\n\n특정 이슈의 상세 정보를 조회할 때 사용한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/orders/{orderId}/goods/{goodId}/snapshots": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 상품의 {@link IHubOrderGood.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 스냅샷 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleSnapshot.IInvert"
                }
              }
            }
          }
        },
        "summary": "주문 상품으로부터 사용 가능한 API 스냅샷 리스트 조회하기",
        "description": "주문 상품으로부터 사용 가능한 API 스냅샷 리스트 조회하기.\n\n고객이 주문한 {@link IHubOrderGood 상품}으로부터, 사용 가능한 API\n{@link IHubSaleSnapshot.IInvert 스냅샷} 리스트들을 조회한다. 즉, 고객이\n주문한 상품에 대하여, 사용 가능한 모든\n{@link IHubSaleSnapshot.IInvert.version 버전}의 스냅샷을 불러온다는 뜻.\n\n참고로 이 때 기록된 {@link IHubSaleUnitStock.price 가격 정보}는 해당 스냅샷의\n가격이 아닌, 고객이 주문한 상품의 가격이다. 또한, 스냅샷에 기록된 통계 정보 또한,\n오직 해당 스냅샷 시점에 대한 것만이 기록된다. 가령 총 API 호출 건수를 뜻하는\n{@link IHubSaleGoodAggregate.call_count} 의 경우, 귀속 매물에 대한 총 호출\n건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가 기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/orders/{orderId}/goods/{goodId}/snapshots/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.IInvert.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleSnapshot.IInvert"
                }
              }
            }
          }
        },
        "summary": "주문 상품으로부터 사용 가능한 특정 스냅샷 조회하기",
        "description": "주문 상품으로부터 사용 가능한 특정 스냅샷 조회하기.\n\n고객이 주문한 {@link IHubOrderGood 상품}으로부터, 사용 가능한 특정 API\n{@link IHubSaleSnapshot.IInvert 스냅샷} 을 조회한다. 즉, 고객이\n주문한 상품에 대하여, 사용 가능한 현재 또는 과거\n{@link IHubSaleSnapshot.IInvert.version 버전}의 스냅샷을 불러온다는 뜻.\n\n참고로 이 때 기록된 {@link IHubSaleUnitStock.price 가격 정보}는 해당 스냅샷의\n가격이 아닌, 고객이 주문한 상품의 가격이다. 또한, 스냅샷에 기록된 통계 정보 또한,\n오직 해당 스냅샷 시점에 대한 것만이 기록된다. 가령 총 API 호출 건수를 뜻하는\n{@link IHubSaleGoodAggregate.call_count} 의 경우, 귀속 매물에 대한 총 호출\n건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가 기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/orders/{orderId}/goods/{goodId}/snapshots/{id}/swagger": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.IInvert.id}"
          }
        ],
        "requestBody": {
          "description": "대상 유닛에 대한 식별자 키",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleUnitSwaggerAccessor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "스웨거 문서",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISwagger"
                }
              }
            }
          }
        },
        "summary": "Swagger 문서 조회하기",
        "description": "Swagger 문서 조회하기.\n\n{@link IHubOrderGood 주문 상품}으로부터 사용 가능한 특정\n{@link IHubSaleSnapshot.IInvert 스냅샷}에 대하여,\n{@link IHubSaleSnapshotUnit.IInvert 유닛}을 지정, 그것의\n{@link ISwagger 스웨거 문서}를 불러온다.\n\n리턴되는 스웨거 문서 내 API 를 호출할 때마다, 해당 상품에 대한 API\n호출 횟수가 카운팅되고 그 실행 내역이 기록되며, 필요에 따라 예치금에\n대한 과금이 이루어진다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/orders/{orderId}/goods/{goodId}/snapshots/{id}/openai": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "goodId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 상품의 {@link IHubOrderGood.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.IInvert.id}"
          }
        ],
        "requestBody": {
          "description": "대상 유닛에 대한 식별자 키",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleUnitOpenAiSchemaAccessor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OpenAI 스키마 문서",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IOpenAiDocument"
                }
              }
            }
          }
        },
        "summary": "OpenAI 문서 조회하기",
        "description": "OpenAI 문서 조회하기.\n\n{@link IHubOrderGood 주문 상품}으로부터 사용 가능한 특정\n{@link IHubSaleSnapshot.IInvert 스냅샷}에 대하여,\n{@link IHubSaleSnapshotUnit.IInvert 유닛}을 지정, 그것의\n{@link IOpenAiDocument OpenAI 스키마 문서}를 불러온다.\n\n리턴되는 OpenAI 문서 내 API 를 호출할 때마다, 해당 상품에 대한 API\n호출 횟수가 카운팅되고 그 실행 내역이 기록되며, 필요에 따라 예치금에\n대한 과금이 이루어진다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/orders/{orderId}/goods": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "주문 상품의 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGood.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 주문 상품 역 참조 정보의 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGood.IInvert"
                }
              }
            }
          }
        },
        "summary": "주문 상품의 역 참조 정보 일괄 조회하기",
        "description": "주문 상품의 역 참조 정보 일괄 조회하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/orders/{orderId}/goods/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 주문의 {@link IHubOrder.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 주문 아이템의 {@link IHubOrderGood.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "주문 상품 역 참조 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGood.IInvert"
                }
              }
            }
          }
        },
        "summary": "주문 상품의 역 참조 정보 개별 조회하기",
        "description": "주문 상품의 역 참조 정보 개별 조회하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/orders": {
      "patch": {
        "tags": [
          "Order"
        ],
        "parameters": [],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrder.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrder"
                }
              }
            }
          }
        },
        "summary": "주문 목록",
        "description": "주문 목록.\n\n{@link IHubOrder} 리스트를 조회한다.\n\n리턴되는 {@link IHubOrder}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubOrder.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubOrder.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 주문만을 {@link IHubOrder.IRequest.search 검색}하거나,\n주문들의 {@link IHubOrder.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/orders/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubOrder.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrder"
                }
              }
            }
          }
        },
        "summary": "주문 상세",
        "description": "주문 상세.\n\n특정 {@link IHubOrder}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/audits/{auditId}/comments": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id }"
          },
          {
            "name": "auditId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 심사의 {@link IHubSaleAudit.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleAuditComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 심사 댓글 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleAuditComment"
                }
              }
            }
          }
        },
        "summary": "심사 댓글 내역 일괄 조회하기",
        "description": "심사 댓글 내역 일괄 조회하기.\n\n특정 {@link IHubSaleAudit 심사 게시물}에 대하여 {@link IHubSeller 판매 당사자}\n및 {@link IHubAdministrator 관리자}가 {@link IHubSaleAuditComment 댓글}들을\n일괄 조회한다.\n\n리턴되는 정보들은 {@link IPage 페이징} 처리가 되어있으며, 요청 정보\n{@link IHubSaleAuditComment.IRequest} 를 어떻게 설정하냐에 따라, 각 페이지 당\n레코드 수를 {@link IHubSaleAuditComment.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 댓글들만을 {@link IHubSaleAuditComment.IRequest.search 검색}하거나,\n댓글들의 {@link IHubSaleAuditComment.IRequest.sort 정렬 조건}을 임의로\n설정하거나 할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 매물의 {@link IHubSale.id }"
          },
          {
            "name": "auditId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 심사의 {@link IHubSaleAudit.id }"
          }
        ],
        "requestBody": {
          "description": "댓글 작성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleAuditComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "작성된 댓글 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleAuditComment"
                }
              }
            }
          }
        },
        "summary": "심사 댓글 작성하기",
        "description": "심사 댓글 작성하기.\n\n특정 {@link IHubSaleAudit 심사 게시물}에 대하여 댓글 작성",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/audits/{auditId}/comments/{id}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id }"
          },
          {
            "name": "auditId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 심사의 {@link IHubSaleAudit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 댓글의 {@link IHubSaleAuditComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "댓글 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleAuditComment"
                }
              }
            }
          }
        },
        "summary": "심사 댓글 개별 조회하기",
        "description": "심사 댓글 개별 조회하기.\n\n특정 {@link IHubSaleAudit 심사 게시물}에 대하여 {@link IHubSeller 판매 당사자}\n또는 {@link IHubAdministrator 관리자}가 작성한\n{@link IHubSaleAuditComment 댓글}을 개별 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id }"
          },
          {
            "name": "auditId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 심사의 {@link IHubSaleAudit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 수정할 댓글의 {@link IHubSaleAuditComment.id}"
          }
        ],
        "requestBody": {
          "description": "댓글 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleAuditComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "새로이 생성된 스냅샷 컨텐츠 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBbsArticleComment.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "심사 게시물의 댓글 수정하기",
        "description": "심사 게시물의 댓글 수정하기.\n\n특정 {@link IHubSaleAudit 심사} 게시물에 작성한\n{@link IHubSaleAuditComment 댓글}을, {@link IHubSeller 판매자}\n또는 {@link IHubAdministrator 관리자}가 스스로 수정한다.\n\n단, 본 허브 시스템이 댓글에 대하여 일괄적으로 펼치는 정책이 그러하듯, 본 댓글을\n수정했다해서, 실제로 기존의 내용이 바뀌는 것은 아니다. 수정은 내용은 새로운\n{@link IHubSaleAuditComment.ISnapshot 스냅샷}으로써, 기존의 댓글에 누적되어\n기록된다. 그리고 이는 해당 {@link IHubAdministrator 관리자}와\n{@link IHubSeller 판매자} 등 모두에게 공개되어, 해당 {@link IHubSaleAudit 심사}\n게시물을 열람할 수 있는 이는 누구나, 그 수정 내역 또한 함께 열람할 수 있다.\n\n이는 분쟁이 발생하기 쉬운 전자상거래 특성상, 관리자 또는 판매자가 자신의 댓글을\n수정하여 그 정황을 조작하거나 하는 일 따위를 막기 위함이다. 즉 증거 보존을 위함인\n것.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/audits/{id}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 심사의 {@link IHubSaleAudit.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "심사 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleAudit"
                }
              }
            }
          }
        },
        "summary": "심사 정보 상세 조회하기",
        "description": "심사 정보 상세 조회하기.\n\n{@link IHubSale 매물}에 대한 {@link IHubSaleAudit 심사 게시물}을 상세 조회함.\n\n리턴되는 정보 {@link IHubSaleAudit} 에는, 어떤\n{@link IHubAdministrator 관리자}가 심사를 개시하고, 누가\n{@link IHubSaleAuditRejection 거절} 혹은\n{@link IHubSaleAuditApproval 승인}하였는 지 등에 대한 정보가,\n각각의 일시과 함께 자세히 기록되어있다.\n\n더하여 심사에 대하여 {@link IHubSeller 판매자}와 관리자가 각각\n{@link IHubSaleAuditComment 댓글}로써 소통할 수 있으니, 댓글 관련 API\n{@link audits.comments.index} 도 함께 호출해보기 바란다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/audits/{id}/emend": {
      "put": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 심사의 {@link IHubSaleAudit.id}"
          }
        ],
        "requestBody": {
          "description": "첨삭 내용",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleAuditEmendation.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "첨삭 완료 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleAuditEmendation"
                }
              }
            }
          }
        },
        "summary": "심사 중 첨삭하기",
        "description": "심사 중 첨삭하기.\n\n{@link IHubSeller 판매자}가 등록 (혹은 수정)한 {@link IHubSale 매물}이\n현재 {@link IHubSaleAudit 심사} 중이거든, 판매자와\n{@link IHubAdministrator 관리자}는 이를 첨삭하고 편집할 수 있다.\n\n물론, 이는 어디까지나 심시가 진행 중인 매물에 한정되며, 아직 심사조차 개시되지\n않은 매물은 수정할 수 없다. 그리고 {@link IHubSaleAuditApproval 승인} 완료된\n매물 또한 결코 수정할 수 없다.\n\n다만, 관리자가 심사 {@link IHubSaleAuditRejection 거절}한 건에 대해서는,\n판매자가 이를 첨삭함으로써 관리자에게 재심을 요구하는 것이 가능하다. 물론, 이는\n{@link IHubSaleAuditRejection.reversible 번복 가능한 거절 건}에 한정된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/questions/{inquiryId}/comments": {
      "post": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "생성할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 질의문 댓글의 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "질의문 댓글 작성",
        "description": "질의문 댓글 작성.\n\n질의문에 댓글을 작성한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "제품 질의문에 대한 댓글 목록 조회",
        "description": "제품 질의문에 대한 댓글 목록 조회.\n\n{@link IHubSaleInquiryComment} 리스트를 조회한다.\n\n리턴되는 {@link IHubSaleInquiryComment}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSaleInquiryComment.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSaleInquiryComment.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 제품질의문에 대한 댓글을 {@link IHubSaleInquiryComment.IRequest.search 검색}하거나,\n제품 질의문에 대한 댓글의 {@link IHubSaleInquiryComment.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/questions/{inquiryId}/comments/{id}": {
      "put": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 댓글의 {@link IHubSaleInquiryComment.id}"
          }
        ],
        "requestBody": {
          "description": "수정할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 질의문 댓글의 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryComment.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "질의문 댓글 수정",
        "description": "질의문 댓글 수정.\n\n질의문에 작성된 댓글을 수정한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 댓글의 {@link IHubSaleInquiryComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "질의문 댓글 삭제",
        "description": "질의문 댓글 삭제.\n\n작성된 질의문 댓글을 삭제한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleInquiryComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 제품 질의문에 대한 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "제품 질의문에 대한 특정 댓글 조회",
        "description": "제품 질의문에 대한 특정 댓글 조회.\n\n특정 {@link IHubSaleInquiryComment}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/questions/{questionId}": {
      "post": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 {@link IHubSale.id }"
          },
          {
            "name": "questionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 {@link IHubSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "생성할 질문 정보.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryAnswer.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Asher",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryAnswer"
                }
              }
            }
          }
        },
        "summary": "매물 질문에 대한 답변 작성",
        "description": "매물 질문에 대한 답변 작성.\n\n판매자가 매물 질문에 대한 답변을 작성한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 {@link IHubSale.id }"
          },
          {
            "name": "questionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 {@link IHubSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "수정할 답변 정보.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryAnswer.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 답변 정보의 스냅샷",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryAnswer.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "매물 질문에 대한 답변 수정",
        "description": "매물 질문에 대한 답변 수정.\n\n판매자가 매물 질문에 대한 답변을 수정한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/questions": {
      "patch": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleQuestion.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleQuestion.ISummary"
                }
              }
            }
          }
        },
        "summary": "매물 스냅샷에 대한 질문 요약 정보 목록 조회",
        "description": "매물 스냅샷에 대한 질문 요약 정보 목록 조회.\n\n{@link IHubSaleQuestion} 리스트를 조회한다.\n\n리턴되는 {@link IHubSaleQuestion}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSaleQuestion.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSaleQuestion.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 매물 스냅샷에 대한 질문을 {@link IHubSaleQuestion.IRequest.search 검색}하거나,\n매물 스냅샷에 대한 질문의 {@link IHubSaleQuestion.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/questions/{id}": {
      "get": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleQuestion.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 매물 스냅샷에 대한 질문 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleQuestion"
                }
              }
            }
          }
        },
        "summary": "매물 스냅샷에 대한 질문 상세 정보 조회",
        "description": "매물 스냅샷에 대한 질문 상세 정보 조회.\n\n특정 {@link IHubSaleQuestion}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 삭제할 {@link IHubSaleQuestion.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "매물 스냅샷에 대한 질문 삭제",
        "description": "매물 스냅샷에 대한 질문 삭제.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/reviews/{inquiryId}/comments": {
      "post": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "생성할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 질의문 댓글의 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "질의문 댓글 작성",
        "description": "질의문 댓글 작성.\n\n질의문에 댓글을 작성한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryComment.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "제품 질의문에 대한 댓글 목록 조회",
        "description": "제품 질의문에 대한 댓글 목록 조회.\n\n{@link IHubSaleInquiryComment} 리스트를 조회한다.\n\n리턴되는 {@link IHubSaleInquiryComment}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSaleInquiryComment.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSaleInquiryComment.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 제품질의문에 대한 댓글을 {@link IHubSaleInquiryComment.IRequest.search 검색}하거나,\n제품 질의문에 대한 댓글의 {@link IHubSaleInquiryComment.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/reviews/{inquiryId}/comments/{id}": {
      "put": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 댓글의 {@link IHubSaleInquiryComment.id}"
          }
        ],
        "requestBody": {
          "description": "수정할 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryComment.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 질의문 댓글의 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryComment.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "질의문 댓글 수정",
        "description": "질의문 댓글 수정.\n\n질의문에 작성된 댓글을 수정한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 댓글의 {@link IHubSaleInquiryComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "질의문 댓글 삭제",
        "description": "질의문 댓글 삭제.\n\n작성된 질의문 댓글을 삭제한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 질의문의 {@link IHubSaleInquiry.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleInquiryComment.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 제품 질의문에 대한 댓글",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryComment"
                }
              }
            }
          }
        },
        "summary": "제품 질의문에 대한 특정 댓글 조회",
        "description": "제품 질의문에 대한 특정 댓글 조회.\n\n특정 {@link IHubSaleInquiryComment}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/reviews/{reviewId}": {
      "post": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 매물의 {@link IHubSale.id }"
          },
          {
            "name": "reviewId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 매물의 리뷰의 {@link IHubSaleReview.id }"
          }
        ],
        "requestBody": {
          "description": "생성할 답변의 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryAnswer.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 답변의 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryAnswer"
                }
              }
            }
          }
        },
        "summary": "매물 리뷰에 대한 답변 생성",
        "description": "매물 리뷰에 대한 답변 생성.\n\n매물 리뷰에 대한 답변를 생성한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 매물의 {@link IHubSale.id }"
          },
          {
            "name": "reviewId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 매물의 리뷰의 {@link IHubSaleReview.id }"
          }
        ],
        "requestBody": {
          "description": "수정할 답변의 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleInquiryAnswer.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 답변 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleInquiryAnswer.ISnapshot"
                }
              }
            }
          }
        },
        "summary": "매물 리뷰에 대한 답변 수정",
        "description": "매물 리뷰에 대한 답변 수정.\n\n매물 리뷰에 대한 답변를 수정한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/reviews": {
      "patch": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          }
        ],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleReview.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 매물 스냡샷에 대한 리뷰 요약 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleReview.ISummary"
                }
              }
            }
          }
        },
        "summary": "매물 스냅샷에 대한 리뷰 요약 정보 목록 조회",
        "description": "매물 스냅샷에 대한 리뷰 요약 정보 목록 조회.\n\n{@link IHubSaleReview}의 요약 정보 리스트를 조회한다.\n\n리턴되는 {@link IHubSaleReview}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSaleReview.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSaleReview.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 매물 스냅샷에 대한 리뷰를 {@link IHubSaleReview.IRequest.search 검색}하거나,\n매물 스냅샷에 대한 리뷰의 {@link IHubSaleReview.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/reviews/{id}": {
      "get": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleReview.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 매물 스냅샷에 대한 리뷰 상세 정보.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleReview"
                }
              }
            }
          }
        },
        "summary": "매물 스냅샷에 대한 리뷰 상세 조회",
        "description": "매물 스냅샷에 대한 리뷰 상세 조회.\n\n특정 {@link IHubSaleReview}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Inquiry"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 판매의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSaleReview.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "void"
          }
        },
        "summary": "매물에 대한 리뷰 삭제",
        "description": "매물에 대한 리뷰 삭제.\n\n특정 매물에 대한 리뷰 삭제.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales": {
      "post": {
        "tags": [
          "Sale"
        ],
        "parameters": [],
        "requestBody": {
          "description": "매물 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSale.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 매물 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSale"
                }
              }
            }
          }
        },
        "summary": "매물 등록하기",
        "description": "매물 등록하기.\n\n{@link IHubSeller 판매자}가 새 {@link IHubSale 매물}을 등록한다.\n\n단, 판매자가 본 API 를 통하여 매물을 등록하였다하여, 그 즉시로 판매가 개시되는\n것은 아니다. 해당 매물에 대하여 관리자가 {@link IHubSaleAudit 심사}하고\n{@link IHubSaleAuditApproval 승인}하여야 하며, 그리하고도 판매자가\n매물을 등록하며 설정한 {@link IHubSale.opened_at 판매 개시 일시}가 도래해야,\n비로소 진정한 판매가 시작된다.\n\n참고로 매물은 그 구조가 제법 복잡하여, 그것의 {@link IHubSale.ICreate 입력 정보}\n또한 그러하다. 따라서 부디, 관련 DTO 및 ERD 해설서에 적힌 설명을 자세히 읽어 충분히\n관련 구조를 숙지한 후, 클라이언트를 개발하기 바란다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSale.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 매물들의 요약 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSale.ISummary"
                }
              }
            }
          }
        },
        "summary": "매물의 요약정보 리스트 조회하기",
        "description": "매물의 요약정보 리스트 조회하기.\n\n{@link IHubSale.ISummary 매물의 요약 정보}들을 불러온다.\n\n리턴되는 {@link IHubSale.ISummary 요약 정보}들은 {@link IPage 페이징} 처리가\n되어있다. 그리고 요청 정보 {@link IHubSale.IRequest} 를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSale.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 매물들만을 {@link IHubSale.IRequest.search 검색}하거나,\n매물들의 {@link IHubSale.IRequest.sort 정렬 조건}을 임의로 지정하거나 할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{id}": {
      "put": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id}"
          }
        ],
        "requestBody": {
          "description": "매물 편집 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSale.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 매물 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSale"
                }
              }
            }
          }
        },
        "summary": "매물 편집하기",
        "description": "매물 편집하기.\n\n{@link IHubSeller 판매자}가 등록한 기존 {@link IHubSale 매물}을 수정한다. 다만,\n기존 레코드를 수정하는 방식이 아니라, 새로운 {@link IHubSaleSnapshot 스냅샷}\n레코드를 누적하여 발행하는 방식으로 수정 작업이 이루어진다.\n\n그리고 만약, 해당 매물이 이미 {@link IHubSaleAudit 심사}하여\n{@link IHubSaleAuditApproval 승인}된 상태라면, 이는 해당 매물을 수정시\n{@link IHubAdministrator 관리자}로부터 다시 심사를 받아야하는 부분이다.\n\n반대로 현재의 매물이 심사 중인 상태라면, 본 API 는 사용할 수 없다. 그 대신,\n첨삭 API 에 해당하는 {@link HubApi.functional.hub.sellers.sales.audits.emend}\n함수를 사용할 것. 참고로 심사가 {@link IHubSaleAuditRejection 거절}된 매물은,\n번복 가능 여부를 뜻하는 {@link IHubSaleAuditRejection.reversible} 에 따라\n추가 첨삭 가능 여부가 갈린다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "매물 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSale"
                }
              }
            }
          }
        },
        "summary": "매물 상세 조회하기",
        "description": "매물 상세 조회하기.\n\n타깃 매물의 상세 정보 {@link IHubSale} 을 조회한다.\n\n단, 매물을 조회하는 주체가 누구냐에 따라, 세부 속성값이 달라질 수 있다. 가장 대표적인\n것이 {@link IHubSaleUnitSwagger.host} 로써, 조회하는 주체가 고객일 때는 본\n허브 시스템의 미들웨어 API 주소가, 반면에 판매자/관리자일 때는 판매 당사자가 등록한\n상용 서버 API 주소가 적힌다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{id}/replica": {
      "get": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "복제된 매물 입력 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSale.ICreate"
                }
              }
            }
          }
        },
        "summary": "매물 입력값 복제하기",
        "description": "매물 입력값 복제하기.\n\n본 API 는 유틸리티 함수의 일종으로, {@link IHubSeller 판매자}가 등록한 기\n{@link IHubSale 매물}로부터 {@link IHubSale.ICreate 입력 정보}를 재구성 해 준다.\n판매자가 기존의 매물을 {@link create 복제}하거나, 혹은 기존의 매물을\n{@link update 편집}하기 위하여 입력 정보를 구성해야 할 때 유용할 것이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{id}/pause": {
      "delete": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "판매 일시 정지",
        "description": "판매 일시 정지.\n\n{@link IHubSale 매물}의 판매를 일시적으로 정지한다.\n{@link IHubSale.paused_at} 에 현재의 시간이 기록된다. 이 경우,\n{@link IHubCustomer 고객}은 여전히 리스트 및 상세 페이지에서 해당 매물을\n조회할 수 있되, 해당 매물에는 \"판매가 일시 중지된 상품입니다\" 라는 라벨이 붙는다.\n\n더하여, {@link IHubSeller 판매자}가 {@link restore} 함수를 호출하여 해당\n매물의 \"판매 일시 정지\" 상태를 해소하기 전까지, 고객은 이를\n{@link IHubCartItem 장바구니}에 담을 수 없다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{id}/suspend": {
      "delete": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "매물 판매 중단",
        "description": "매물 판매 중단.\n\n{@link IHubSeller 판매자}가 스스로 등록한 {@link IHubSale 매물}을 모종의 이유로\n판매 중단한다. {@link IHubSale.suspended_at} 에 현재 시간이 기록되며, 고객은 해당\n매물을 리스트 및 상세 페이지에서 일절 조회할 수 없다.\n\n다만, {@link IHubSeller 판매자}와 {@link IHubAdministrator 관리자}는\n여전히 이를 열람할 수 있어, 고객에게만 SOFT DELETION 인 셈. 물론,\n{@link IHubSeller 판매자}가 {@link restore} 함수를 호출하여 해당 매물의\n\"판매 중단\" 상태를 해소하기 전까지, 고객은 이를 {@link IHubCartItem 장바구니}에\n담을 수 없다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{id}/restore": {
      "put": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "판매 재개하기",
        "description": "판매 재개하기.\n\n대상 {@link IHubSale 매물}이 {@link IHubSale.paused_at 판매 일시 정지} 혹은\n{@link IHubSale.suspended_at 중단} 상태일 때, 이를 해소하여 판매를 재개해준다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{id}/swagger": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id}"
          }
        ],
        "requestBody": {
          "description": "대상 유닛 (및 스톡) 에 대한 식별자 키",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleUnitSwaggerAccessor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "스웨거 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISwagger"
                }
              }
            }
          }
        },
        "summary": "Swagger 정보 조회하기",
        "description": "Swagger 정보 조회하기.\n\n타깃 {@link IHubSale 매물}로부터 특정 {@link IHubSaleUnit 유닛} 및\n{@link IHubSaleUnitStock 스톡}을 지정, 그것의 {@link ISwagger 스웨거} 정보를\n불러온다.\n\n리턴되는 스웨거 문서는 {@link IHubSeller 판매자} 및\n{@link IHubAdministrator 관리자} 기준으로 판매자가 등록한 실제 서버 API 주소가\n기재되며, {@link IHubCustomer 고객} 기준으로는 DEV 서버에 대한 본 허브 시스템의\n미들웨어 API 주소가 기재된다. 영리 목적을 위해, REAL 서버 주소는 배제된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/snapshots/{id}/version/description": {
      "put": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.id}"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleSnapshot.IUpdateVersionDescription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "스냅샷 버전 설명 변경",
        "description": "스냅샷 버전 설명 변경.\n\n스냅샷에 적힌 버전 설명 {@link IHubSaleSnapshot.version_description} 을 수정한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/snapshots": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id}"
          }
        ],
        "requestBody": {
          "description": "페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이지 단위로 묶인 스냅샷 요약 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleSnapshot.ISummary"
                }
              }
            }
          }
        },
        "summary": "매물 내 승인된 스냅샷들의 요약정보 리스트 조회하기",
        "description": "매물 내 승인된 스냅샷들의 요약정보 리스트 조회하기.\n\n특정 {@link IHubSale 매물}을 대상으로, 과거 및 현재의 모든\n{@link IHubSaleAuditApproval 심사 승인}된 바 있는 스냅샷들의\n{@link IHubSaleSnapshot.ISummary 요약 정보}를 불러온다.\n\n그리고 이 때, 기록된 통계/집계 정보는, 오직 해당 스냅샷 시점에 대한 것만이\n기재된다. 가령 총 API 호출 건수를 뜻하는 {@link IHubSaleGoodAggregate.call_count}\n의 경우, 귀속 매물에 대한 총 호출 건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가\n기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/snapshots/{id}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleSnapshot"
                }
              }
            }
          }
        },
        "summary": "메믈 내 승인된 스냅샷 상세 조회하기",
        "description": "메믈 내 승인된 스냅샷 상세 조회하기.\n\n{@link IHubSale 매물} 내 {@link IHubSaleAuditApproval 심사 승인}된 바 있는\n특정 시기의 {@link IHubSaleSnapshot 스냅샷}을 조회한다.\n\n단, 해당 매물이 {@link IHubSaleAudit 심사} 진행 중이고\n{@link IHubSaleAuditEmendation 첨삭} 과정에 있다면, 그 때에는 비록 심사\n승인되지 않은 경우라도, {@link IHubSeller 판매자} 및\n{@link IHubAdministrator 관리자}는 이를 조회할 수 있다.\n\n그리고 이 때, 기록된 통계/집계 정보는, 오직 해당 스냅샷 시점에 대한 것만이\n기재된다. 가령 총 API 호출 건수를 뜻하는 {@link IHubSaleGoodAggregate.call_count}\n의 경우, 귀속 매물에 대한 총 호출 건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가\n기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/snapshots/{id}/flip": {
      "get": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "스냅샷으로부터 역 구성한 매물 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSale"
                }
              }
            }
          }
        },
        "summary": "매물 내 승인된 스냅샷의 매물 역 구성정보 조회하기",
        "description": "매물 내 승인된 스냅샷의 매물 역 구성정보 조회하기.\n\n{@link IHubSale 매물} 내 {@link IHubSaleAuditApproval 심사 승인}된 바 있는\n특정 시기의 {@link IHubSaleSnapshot 스냅샷}에 대한 정보를 역 구성, 해당 시점의\n매물 정보 {@link IHubSale} 을 조회한다.\n\n단, 해당 매물이 {@link IHubSaleAudit 심사} 진행 중이고\n{@link IHubSaleAuditEmendation 첨삭} 과정에 있다면, 그 때에는 비록 심사\n승인되지 않은 경우라도, {@link IHubSeller 판매자} 및\n{@link IHubAdministrator 관리자}는 이를 조회할 수 있다.\n\n그리고 이 때, 기록된 통계/집계 정보는, 오직 해당 스냅샷 시점에 대한 것만이\n기재된다. 가령 총 API 호출 건수를 뜻하는 {@link IHubSaleGoodAggregate.call_count}\n의 경우, 귀속 매물에 대한 총 호출 건수가 아닌, 해당 스냅샷 시점에 대한 총 호출 건수가\n기재된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/snapshots/{id}/swagger": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 매물의 {@link IHubSale.id}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스냅샷의 {@link IHubSaleSnapshot.id}"
          }
        ],
        "requestBody": {
          "description": "대상 유닛 (및 스톡) 에 대한 식별자 키",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleUnitSwaggerAccessor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "스웨거 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISwagger"
                }
              }
            }
          }
        },
        "summary": "Swagger 정보 조회하기",
        "description": "Swagger 정보 조회하기.\n\n타깃 {@link IHubSaleSnapshot 매물 스냅샷}으로부터 특정 {@link IHubSaleUnit 유닛}\n및 {@link IHubSaleUnitStock 스톡}을 지정, 그것의 {@link ISwagger 스웨거} 정보를\n불러온다.\n\n리턴되는 스웨거 문서는 {@link IHubSeller 판매자} 및\n{@link IHubAdministrator 관리자} 기준으로 판매자가 등록한 실제 서버 API 주소가\n기재되며, {@link IHubCustomer 고객} 기준으로는 DEV 서버에 대한 본 허브 시스템의\n미들웨어 API 주소가 기재된다. 영리 목적을 위해, REAL 서버 주소는 배제된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/snapshots/{snapshotId}/units/{unitId}/parameters": {
      "patch": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id }"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "unitId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 유닛의 {@link IHubSaleUnit.id }"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "IHubSaleUnitParameter 의 페이지 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleUnitParameter"
                }
              }
            }
          }
        },
        "summary": "매물에 대한 파라미터 정보 조회",
        "description": "매물에 대한 파라미터 정보 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id }"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "unitId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 유닛의 {@link IHubSaleUnit.id }"
          }
        ],
        "requestBody": {
          "description": "생성할 파라미터 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleUnitParameter.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 파라미터 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSaleUnitParameter"
                }
              }
            }
          }
        },
        "summary": "매물에 대한 파라미터 정보 생성",
        "description": "매물에 대한 파라미터 정보 생성.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/sales/{saleId}/snapshots/{snapshotId}/units/{unitId}/parameters/{id}": {
      "put": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id }"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "unitId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 유닛의 {@link IHubSaleUnit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 수정할 파라미터 {@link IHubSaleUnitParameter.id}"
          }
        ],
        "requestBody": {
          "description": "수정할 파라미터 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSaleUnitParameter.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 파라미터 정보"
          }
        },
        "summary": "매물에 대한 특정 파라미터 정보 수정",
        "description": "매물에 대한 특정 파라미터 정보 수정.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sale"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 매물의 {@link IHubSale.id }"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "unitId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 유닛의 {@link IHubSaleUnit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 삭제할 파라미터 {@link IHubSaleUnitParameter.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "매물에 대한 특정 파라미터 정보 삭제",
        "description": "매물에 대한 특정 파라미터 정보 삭제.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/statistics/orders/goods/calls": {
      "patch": {
        "tags": [
          "Statistics"
        ],
        "parameters": [],
        "requestBody": {
          "description": "조회할 상품의 검색 및 페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodCallAggregate.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "상품의 API 호출 내역에 대한 통계 정보.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodCallAggregate"
                }
              }
            }
          }
        },
        "summary": "특정 기간 API 호출 관련 통계를 조회 합니다",
        "description": "특정 기간 API 호출 관련 통계를 조회 합니다.\n\n상품의 API 사용량, 에러율, API Latency 등을 조회합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/statistics/orders/goods/calls/entire": {
      "patch": {
        "tags": [
          "Statistics"
        ],
        "parameters": [],
        "requestBody": {
          "description": "대상 상품 내지 매물에 대한 특정화 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodCallAggregate.IEntireRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "상품의 API 호출 내역에 대한 전체 기간의 통계 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubOrderGoodCallAggregate"
                }
              }
            }
          }
        },
        "summary": "전체 기간의 API 호출 관련 통계를 조회",
        "description": "전체 기간의 API 호출 관련 통계를 조회.\n\n상품의 전체 기간에 대한 API 사용량, 에러율, API Latency 등을 조회합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/statistics/orders/goods/calls/ranking": {
      "patch": {
        "tags": [
          "Statistics"
        ],
        "parameters": [],
        "requestBody": {
          "description": "조회할 상품의 검색 및 페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubOrderGoodRanking.IEntireRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "상품의 API 호출 내역에 대한 통계 정보.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubOrderGoodRanking"
                }
              }
            }
          }
        },
        "summary": "구독한 API의 특정 기간 랭킹을 조회 합니다",
        "description": "구독한 API의 특정 기간 랭킹을 조회 합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/statistics/sales/calls/rankings": {
      "patch": {
        "tags": [
          "Statistics"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 랭킹 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSaleCallRanking"
                }
              }
            }
          }
        },
        "summary": "매물의 API 호출 횟수 기준 랭킹을 조회한다",
        "description": "매물의 API 호출 횟수 기준 랭킹을 조회한다.\n\n매물이 주문되어 그 API 가 호출된 횟수를 기준, 상위권 랭킹의 매물들을 조회한다.\n총 조회 가능한 랭킹은 100 위까지이며, 만일 서로 다른 매물 간 동점자 발생시,\n그 처리는 다음과 같다.\n\n1. API 호출 건수가 가장 많은 매물\n2. API 호출 중 성공 횟수가 많은 매물\n3. 보다 더 빨리 생성된 매물",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/systematic/channels/{channelCode}/categories": {
      "patch": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 채널 코드"
          }
        ],
        "responses": {
          "200": {
            "description": "채널 카테고리 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IHubChannelCategory.IHierarchical"
                  }
                }
              }
            }
          }
        },
        "summary": "채널 카테고리 정보 리스트",
        "description": "채널 카테고리 정보 리스트.\n\n{@link IHubChannelCategory} 리스트를 조회한다.\n채널 카테고리는 1: N 재귀구조를 가져 부모 카테고리가 존재할 경우 children 필드에 자식 카테고리 리스트를 포함한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/systematic/channels/{channelCode}/categories/{id}": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 채널 코드"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 해당 채널 카테고리 {@link IHubChannelCategory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "채널 카테고리 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubChannelCategory"
                }
              }
            }
          }
        },
        "summary": "채널 카테고리 상세 정보",
        "description": "채널 카테고리 상세 정보.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/systematic/channels/{channelCode}/categories/{id}/invert": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 채널 코드"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 특정 카테고리 {@link IHubChannelCategory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "상위 카테고리 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubChannelCategory.IInvert"
                }
              }
            }
          }
        },
        "summary": "특정 카테고리의 상위 카테고리 정보",
        "description": "특정 카테고리의 상위 카테고리 정보.\n\n특정 카테고리의 부모 카테고리 정보를 가져옴.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/systematic/channels": {
      "patch": {
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubChannel.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubChannel"
                }
              }
            }
          }
        },
        "summary": "허브 채널 리스트",
        "description": "허브 채널 리스트.\n\n{@link IHubChannel} 리스트를 조회한다.\n\n리턴되는 {@link IHubChannel}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubChannel.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubChannel.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 허브 채널을 {@link IHubChannel.IRequest.search 검색}하거나,\n허브 채널들의 {@link IHubChannel.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/systematic/channels/hierarchical": {
      "patch": {
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubChannel.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubChannel.IHierarchical"
                }
              }
            }
          }
        },
        "summary": "채널 계층 정보 리스트",
        "description": "채널 계층 정보 리스트.\n\n{@link IHubChannel.IHierarchical} 카테고리 계층 리스트를 조회한다.\n\n리턴되는 {@link IHubChannel}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubChannel.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubChannel.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 채널 계층을 {@link IHubChannel.IRequest.search 검색}하거나,\n채널 계층의 {@link IHubChannel.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/systematic/channels/{id}": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubChannel.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 특정 채널의 계층",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubChannel.IHierarchical"
                }
              }
            }
          }
        },
        "summary": "채널의 아이디로 특정 채널의 계층 보기",
        "description": "채널의 아이디로 특정 채널의 계층 보기.\n\n특정 채널의 계층을 조회합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/systematic/channels/{code}/get": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 조회할 {@link IHubChannel.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 특정 채널의 계층",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubChannel.IHierarchical"
                }
              }
            }
          }
        },
        "summary": "채널 코드로 특정 채널의 계층 보기",
        "description": "채널 코드로 특정 채널의 계층 보기.\n\n특정 채널의 계층을 조회합니다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/systematic/sections": {
      "patch": {
        "tags": [
          "Systematic"
        ],
        "parameters": [],
        "requestBody": {
          "description": "리스트 요청 정보 ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IHubSection.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIHubSection"
                }
              }
            }
          }
        },
        "summary": "섹션 정보 리스트",
        "description": "섹션 정보 리스트.\n\n{@link IHubSection}의 리스트를 조회한다.\n\n리턴되는 {@link IHubSection}들은 {@link IPage 페이징} 처리가 되어있다.\n그리고 요청 정보 {@link IHubSection.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를 {@link IHubSection.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 섹션을 {@link IHubSection.IRequest.search 검색}하거나,\n섹션들의 {@link IHubSection.IRequest.sort 정렬 조건}을 임의로 지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/systematic/sections/{id}": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 조회할 {@link IHubSection.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 섹션 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSection"
                }
              }
            }
          }
        },
        "summary": "섹션 아이디로 특정 섹션 정보 상세",
        "description": "섹션 아이디로 특정 섹션 정보 상세.\n\n특정 {@link IHubSection}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/hub/sellers/systematic/sections/{code}/get": {
      "get": {
        "tags": [
          "Systematic"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 조회할 {@link IHubSection.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "조회된 섹션 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IHubSection"
                }
              }
            }
          }
        },
        "summary": "섹션 코드로 특정 섹션 정보 상세",
        "description": "섹션 코드로 특정 섹션 정보 상세.\n\n특정 {@link IHubSection}를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/accounts": {
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccount.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 계정 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioAccount.ISummary"
                }
              }
            }
          }
        },
        "summary": "계정 요약정보 리스트 조회",
        "description": "계정 요약정보 리스트 조회.\n\n본 스튜디오 시스템에 존재하는 모든\n{@link IStudioAccount.IInvert 계정의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/accounts/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 계정의 {@link IStudioAccount.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "계정 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccount"
                }
              }
            }
          }
        },
        "summary": "계정 상세 정보를 {@link IStudioAccount.id}로 조회",
        "description": "계정 상세 정보를 {@link IStudioAccount.id}로 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/accounts/{code}/get": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 계정의 {@link IStudioAccount.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "계정 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccount"
                }
              }
            }
          }
        },
        "summary": "계정 상세 정보를 {@link IStudioAccount.code}로 조회",
        "description": "계정 상세 정보를 {@link IStudioAccount.code}로 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/accounts/{accountCode}/schedules": {
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSchedule.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "스케쥴들의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioAccountSchedule.ISummary"
                }
              }
            }
          }
        },
        "summary": "스케쥴 목록을 조회한다",
        "description": "스케쥴 목록을 조회한다.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한 모든\n{@link IStudioAccountSchedule 스케쥴의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n참고로 스튜디오 계정에 설정된 스케쥴는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/accounts/{accountCode}/schedules/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 스케쥴의 {@link IStudioAccount.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "스케쥴 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSchedule"
                }
              }
            }
          }
        },
        "summary": "스케쥴을 상세 조회한다",
        "description": "스케쥴을 상세 조회한다.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한\n{@link IStudioAccountSchedule 스케쥴}의 상세 정보를 불러온다. 리턴되는\n상세 정보에는, {@link IStudioAccountSchedule.ISummary} 에는 없는 변수값\n및 상세 설명이 포함된다.\n\n참고로 스튜디오 계정에 설정된 스케쥴는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/accounts/{accountCode}/secrets": {
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSecret.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "시크릿 변수 세트들의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioAccountSecret.ISummary"
                }
              }
            }
          }
        },
        "summary": "시크릿 변수 세트들의 목록을 조회한다",
        "description": "시크릿 변수 세트들의 목록을 조회한다.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한 모든\n{@link IStudioAccountSecret 시크릿 변수 세트의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n참고로 스튜디오 계정에 설정된 시크릿 변수 세트는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/accounts/{accountCode}/secrets/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 시크릿 변수 세트의 {@link IStudioAccount.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "시크릿 변수 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSecret"
                }
              }
            }
          }
        },
        "summary": "시크릿 변수 세트를 상세 조회한다",
        "description": "시크릿 변수 세트를 상세 조회한다.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한\n{@link IStudioAccountSecret 시크릿 변수 세트}의 상세 정보를 불러온다. 리턴되는\n상세 정보에는, {@link IStudioAccountSecret.ISummary} 에는 없는 변수값\n리스트 및 상세 설명이 포함된다.\n\n참고로 스튜디오 계정에 설정된 시크릿 변수 세트는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/accounts/{accountCode}/secrets/{key}/get": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "key",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 시크릿 변수 세트의 {@link IStudioAccountSecret.key}"
          }
        ],
        "responses": {
          "200": {
            "description": "시크릿 변수 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSecret"
                }
              }
            }
          }
        },
        "summary": "시크릿 변수 세트 상세 조회 by key",
        "description": "시크릿 변수 세트 상세 조회 by key.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한\n{@link IStudioAccountSecret 시크릿 변수}의 상세 정보를, 그것이 키 값 (변수명)\n으로 불러온다. 리턴되는 상세 정보에는, {@link IStudioAccountSecret.ISummary}\n에는 없는 변수값 및 상세 설명이 포함된다.\n\n참고로 스튜디오 계정에 설정된 시크릿 변수는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/accounts/{accountCode}/secrets/values": {
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSecretValue.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "변수값 역참조 요약 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioAccountSecretValue.IInvertSummary"
                }
              }
            }
          }
        },
        "summary": "전역 변수들의 목록을 조회한다",
        "description": "전역 변수들의 목록을 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/accounts/{accountCode}/secrets/{secretId}/values/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "secretId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 시크릿 변수 세트의 {@link IStudioAccountSecret.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 변수값의 {@link IStudioAccountSecretValue.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "변수값 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSecretValue"
                }
              }
            }
          }
        },
        "summary": "전역 변수 상세 조회",
        "description": "전역 변수 상세 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/accounts/{accountCode}/widgets/{widgetCode}/tiles/minimap": {
      "patch": {
        "tags": [],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "widgetCode",
            "in": "path",
            "schema": {
              "const": "general"
            },
            "required": true,
            "description": " 귀속 위젯의 코드"
          },
          {
            "name": "breakpoint",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "const": "md"
                },
                {
                  "const": "xs"
                },
                {
                  "const": "sm"
                },
                {
                  "const": "lg"
                }
              ]
            },
            "required": true,
            "description": " 대상 {@link IStudioAccountWidgetTileGeometry.breakpoint}"
          }
        ],
        "responses": {
          "200": {
            "description": "미니맵 정보",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IStudioAccountWidgetTile.IMinimapItem"
                  }
                }
              }
            }
          }
        },
        "summary": "위젯 타일의 미니맵 일괄 조회",
        "description": "위젯 타일의 미니맵 일괄 조회.\n\n{@link IStudioAccountWidgetTileGeometry 위젯 타일의 geometry 정보}를, 특정\n{@link IStudioAccountWidgetTileGeometry.breakpoint} 에 한하여 일괄 조회한다.\n\n이를 통하여 미니맵을 구성할 수 있으며, 각각 위젯 타일의 상세 컴포넌트 정보는,\n{@link index} API 를 통하여 영역 단위로 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/accounts/{accountCode}/widgets/{widgetCode}/tiles": {
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "widgetCode",
            "in": "path",
            "schema": {
              "const": "general"
            },
            "required": true,
            "description": " 귀속 위젯의 코드"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountWidgetTile.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "좌표체계상 페이징 처리된 위젯 타일 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IGeometryPageIStudioAccountWidgetTile.ISummary"
                }
              }
            }
          }
        },
        "summary": "위젯 타일 목록 조회하기",
        "description": "위젯 타일 목록 조회하기.\n\n특정 {@link IStudioAccount 계정} 및 위젯에 속한\n{@link IStudioAccountWidgetTile 타일}들을, 페이지 단위로 불러온다.\n\n단, 위젯은 일반적인 페이지네이션 API 와 달리, 스칼라 값 (ex: 1 페이지) 이\n아닌 {@link IStudioAccountWidgetTile.IGeometry 2D 공간상 좌표와 크기}에 의한\n{@link IGeometryPage 페이지네이션}을 수행한다.\n\n이 점을 명시하고, 조회코자 하는 페이지의 영역을 이동해가며, 페이지네이션을\n작업을 수행할 것.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/accounts/{accountCode}/widgets/{widgetCode}/tiles/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "widgetCode",
            "in": "path",
            "schema": {
              "const": "general"
            },
            "required": true,
            "description": " 귀속 위젯의 코드"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 타일의 {@link IStudioAccountWidgetTile.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "위젯 타일 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountWidgetTile"
                }
              }
            }
          }
        },
        "summary": "위젯 타일 개별 조회하기",
        "description": "위젯 타일 개별 조회하기.\n\n특정 {@link IStudioAccountWidgetTile 위젯 타일}을 개별 조회한다.\n\n아마 프론트 어플리케이션에서는 사용할 일이 없고, 순 테스트 검산용 API 가 될 듯.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/enterprises/{accountCode}/employees": {
      "patch": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseEmployee.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 직원의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioEnterpriseEmployee.ISummary"
                }
              }
            }
          }
        },
        "summary": "기업 직원들의 요약정보 리스트 조회",
        "description": "기업 직원들의 요약정보 리스트 조회.\n\n특정 {@link IStudioEnterprise 기업}에 소속된 모든\n{@link IStudioEnterpriseEmployee.ISummary 직원의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/enterprises/{accountCode}/employees/{id}": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 직원의 {@link IStudioEnterpriseEmployee.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "직원의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseEmployee"
                }
              }
            }
          }
        },
        "summary": "직원 상세 정보 조회하기",
        "description": "직원 상세 정보 조회하기.\n\n특정 {@link IStudioEnterpriseEmployee 직원}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/enterprises": {
      "patch": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterprise.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 기업의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioEnterprise.ISummary"
                }
              }
            }
          }
        },
        "summary": "기업 요약정보 리스트 조회",
        "description": "기업 요약정보 리스트 조회.\n\n본 스튜디오 시스템에 존재하는 모든\n{@link IStudioEnterprise.ISummary 기업의 요악정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/enterprises/{id}": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 기업의 {@link IStudioEnterprise.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "기업의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterprise"
                }
              }
            }
          }
        },
        "summary": "기업의 상세 정보 조회하기",
        "description": "기업의 상세 정보 조회하기.\n\n특정 {@link IStudioEnterprise 기업}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/enterprises/{accountCode}/get": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 기업에 귀속된 계정의 {@link IStudioAccount.code }"
          }
        ],
        "responses": {
          "200": {
            "description": "기업의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterprise"
                }
              }
            }
          }
        },
        "summary": "기업의 상세 정보 조회하기 (by 계정 코드)",
        "description": "기업의 상세 정보 조회하기 (by 계정 코드).\n\n특정 {@link IStudioEnterprise 기업}의 상세 정보를, 귀속 계정의\n{@link IStudioAccount.code 코드}로 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/enterprises/{accountCode}/teams/{teamCode}/companions": {
      "patch": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "teamCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 팀의 {@link IStudioEnterpriseTeam.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 구성원의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioEnterpriseTeamCompanion.ISummary"
                }
              }
            }
          }
        },
        "summary": "기업 팀 구성원들의 요약정보 리스트 조회",
        "description": "기업 팀 구성원들의 요약정보 리스트 조회.\n\n특정 {@link IStudioEnterprise 기업}의 {@link IStudioEnterpriseTeam 팀}에\n소속된 {@link IStudioEnterpriseTeamCompanion.ISummary 구성원의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/enterprises/{accountCode}/teams/{teamCode}/companions/{id}": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "teamCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 팀의 {@link IStudioEnterpriseTeam.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 구성원의 {@link IStudioEnterpriseTeamCompanion.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "구성원의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion"
                }
              }
            }
          }
        },
        "summary": "구성원 상세 정보 조회하기",
        "description": "구성원 상세 정보 조회하기.\n\n{@link IStudioEnterprise 기업}에서 구성한\n{@link IStudioEnterpriseTeam 팀}에 소속된 특정\n{@link IStudioEnterpriseTeamCompanion 구성원}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/enterprises/{accountCode}/teams": {
      "patch": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseTeam.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 팀의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioEnterpriseTeam.ISummary"
                }
              }
            }
          }
        },
        "summary": "기업 팀들의 요약정보 리스트 조회",
        "description": "기업 팀들의 요약정보 리스트 조회.\n\n특정 {@link IStudioEnterprise 기업}에 구성된 모든\n{@link IStudioEnterpriseTeam.ISummary 팀의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/enterprises/{accountCode}/teams/{id}": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 팀의 {@link IStudioEnterpriseTeam.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "팀의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseTeam"
                }
              }
            }
          }
        },
        "summary": "팀 상세 정보 조회하기",
        "description": "팀 상세 정보 조회하기.\n\n{@link IStudioEnterprise 기업}에서 구성한 특정\n{@link IStudioEnterpriseTeam 팀}의 정보를 상세 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/enterprises/{accountCode}/teams/{code}/get": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 팀의 {@link IStudioEnterpriseTeam.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "팀의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseTeam"
                }
              }
            }
          }
        },
        "summary": "팀 상세 정보 조회하기 by 코드",
        "description": "팀 상세 정보 조회하기 by 코드.\n\n{@link IStudioEnterprise 기업}에서 구성한 특정\n{@link IStudioEnterpriseTeam 팀}의 상세 정보를 해당 팀의 코드 (`code`) 를\n이용하여 상세 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/meta/chat/sessions/{sessionId}/connections": {
      "patch": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 채팅 세션의 {@link IStudioMetaChatSession.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioMetaChatSessionConnection.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 접속 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioMetaChatSessionConnection"
                }
              }
            }
          }
        },
        "summary": "Meta LLM 채팅 세션에의 접속 정보 리스트 조회",
        "description": "Meta LLM 채팅 세션에의 접속 정보 리스트 조회.\n\n{@link IStudioMetaChatSession 채팅 세션}에 대한 {@link IHubCustomer 고객}의\nWebsocket 접속 정보들을 일괄 조회한다.\n\n리턴되는 {@link IStudioMetaChatSessionConnection}들은 {@link IPage 페이징}\n처리가 되어있다. 그리고 요청 정보\n{@link IStudioMetaChatSessionConnection.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를\n{@link IStudioMetaChatSessionConnection.IRequest.limit 제한}하거나\n{@link IStudioMetaChatSessionConnection.IRequest.search 검색}하거나,\n{@link IStudioMetaChatSessionConnection.IRequest.sort 정렬 조건}을\n임의로 설정하거나 할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/meta/chat/sessions/{sessionId}/connections/{id}": {
      "get": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 채팅 세션의 {@link IStudioMetaChatSession.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 접속의 {@link IStudioMetaChatSessionConnection.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "접속 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioMetaChatSessionConnection"
                }
              }
            }
          }
        },
        "summary": "Meta LLM 채팅 세션에의 접속 정보 개별 조회",
        "description": "Meta LLM 채팅 세션에의 접속 정보 개별 조회.\n\n{@link IStudioMetaChatSession 채팅 세션}에 대한\n{@link IHubCustomer 고객}의 Websocket 접속 정보\n{@link IStudioMetaChatSessionConnection} 를 개별 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/meta/chat/sessions/{sessionId}/messages": {
      "patch": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 채팅 세션의 {@link IStudioMetaChatSession.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioMetaChatSessionMessage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 메시지 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioMetaChatSessionMessageIStudioMetaChatSessionMessageData"
                }
              }
            }
          }
        },
        "summary": "채팅 세션 메시지 리스트 조회",
        "description": "채팅 세션 메시지 리스트 조회.\n\n{@link IStudioMetaChatSession 채팅 세션}에서 발생한 모든\n{@link IStudioMetaChatSessionMessage 메시지}들의 리스트를 조회한다.\n\n만일 메시지가 발생한 귀속 {@link IStudioMetaChatSessionConnection 접속 단위}를\n제한하고 싶다면, {@link IStudioMetaChatSessionMessage.IRequest.connection_id}\n를 설정해주면 된다.\n\n그리고 리턴되는 {@link IStudioMetaChatSessionMessage}들은 {@link IPage 페이징}\n처리가 되어있다. 그리고 요청 정보\n{@link IStudioMetaChatSessionMessage.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를\n{@link IStudioMetaChatSessionMessage.IRequest.limit 제한}하거나,\n{@link IStudioMetaChatSessionMessage.IRequest.search 검색}하거나,\n{@link IStudioMetaChatSessionMessage.IRequest.sort 정렬 조건}을\n임의로 지정하거나 할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/meta/chat/sessions/{sessionId}/messages/{id}": {
      "get": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 채팅 세션의 {@link IStudioMetaChatSession.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 메시지의 {@link IStudioMetaChatSessionMessage.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "메시지 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioMetaChatSessionMessageIStudioMetaChatSessionMessageData"
                }
              }
            }
          }
        },
        "summary": "채팅 세션 메시지 상세 조회",
        "description": "채팅 세션 메시지 상세 조회.\n\n{@link IStudioMetaChatSession 채팅 세션}에서 발생한 특정\n{@link IStudioMetaChatSessionMessage 메시지}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/meta/chat/sessions": {
      "patch": {
        "tags": [
          "Meta"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioMetaChatSession.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 세션 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioMetaChatSession"
                }
              }
            }
          }
        },
        "summary": "채팅 세션 목록 조회",
        "description": "채팅 세션 목록 조회.\n\n채팅 세션 {@link IStudioMetaChatSession} 리스트를 조회한다.\n\n리턴되는 {@link IStudioMetaChatSession}들은 {@link IPage 페이징} 처리가\n되어있다. 그리고 요청 정보 {@link IStudioMetaChatSession.IRequest}를\n어떻게 설정하냐에 따라, 각 페이지 당 레코드 수를\n{@link IStudioMetaChatSession.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 세션만을 {@link IStudioMetaChatSession.IRequest.search 검색}하거나,\n세션들의 {@link IStudioMetaChatSession.IRequest.sort 정렬 조건}을 임의로\n지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/meta/chat/sessions/{id}": {
      "get": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 채팅 세션의 {@link IStudioMetaChatSession.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "채팅 세션 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioMetaChatSession"
                }
              }
            }
          }
        },
        "summary": "채팅 세션 개별 조회하기",
        "description": "채팅 세션 개별 조회하기.\n\n타깃 채팅 세션의 상세 정보 {@link IStudioMetaChatSession}을 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepository.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 저장소 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepository.ISummary"
                }
              }
            }
          }
        },
        "summary": "저장소 요약정보 리스트 조회",
        "description": "저장소 요약정보 리스트 조회.\n\n본 스튜디오 시스템에 존재하는 모든\n{@link IStudioRepository.ISummary 저장소의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n단 {@link IStudioRepository.IRequest 페이지 요청 정보}를 구성하며, 조회\n대상의 범위를 특정 {@link IStudioAccount 계정}에 국한할 수 있다.\n\n그리고 귀속 계정의 코드 *accountCode* 를 `null` 값으로 둘 수 있는데, 이러하면\n해당 {@link IHubCustommer 고객}이 접근 가능한 모든 저장소를, 귀속 계정에\n관계없이 모두 조회한다. 반대로 말하면, *accountCode* 가 `null` 이 아닌 이상,\n해당 계정에 귀속된 저장소만을 조회한다. 그리고 이는\n{@link IStudioRepository.IRequest.ISearch.account.code} 와 차이가 있는데,\n검색에 사용하는 계정 코드는 유사 검색이며, 본 path 파라미터에 사용하는 코드는\n완전 일치 검색이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{id}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 저장소의 {@link IStudioRepository.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "저장소 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepository"
                }
              }
            }
          }
        },
        "summary": "저장소 상세 정보 조회하기",
        "description": "저장소 상세 정보 조회하기.\n\n특정 {@link IStudioRepository 저장소}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{code}/get": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 저장소의 {@link IStudioRepository.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "저장소 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepository"
                }
              }
            }
          }
        },
        "summary": "저장소 상세 정보 조회하기 (by code)",
        "description": "저장소 상세 정보 조회하기 (by code).\n\n특정 {@link IStudioRepository 저장소}의 상세 정보를,\n귀속 {@link IStudioAccount 계정}과 저장소의 코드 (`code`) 를 이용하여 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/accesses": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryAccess.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 접근 권한의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryAccess.ISummary"
                }
              }
            }
          }
        },
        "summary": "저장소 접근 권한들의 요약정보 리스트 조회",
        "description": "저장소 접근 권한들의 요약정보 리스트 조회.\n\n특정 {@link IStudioRepository 저장소}에 부여된 모든\n{@link IStudioRepositoryAccess.ISummary 접근 권한의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/accesses/{id}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 접근 권한의 {@link IStudioRepositoryAccess.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "접근 권한의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryAccess"
                }
              }
            }
          }
        },
        "summary": "접근 권한 상세 정보 조회하기",
        "description": "접근 권한 상세 정보 조회하기.\n\n특정 {@link IStudioRepositoryAccess 접근 권한}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/buckets": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보 + 폴더 경로",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryBucket.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 버킷 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryBucket.ISummary"
                }
              }
            }
          }
        },
        "summary": "특정 커밋 기준의 버킷의 요약정보 리스트 조회",
        "description": "특정 커밋 기준의 버킷의 요약정보 리스트 조회.\n\n특정 {@link IStudioRepositoryCommit 커밋}을 기준으로 한,\n{@link IStudioRepositoryBucket.ISummary 버킷의 요약 정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n참고로 {@link IStudioRepositoryBucket.IRequest 페이지 요청 정보}를 구성하며,\n대상 {@link IStudioRepositoryDirectory 폴더 경로}를 지정할 수 있다. 또한\n폴더 경로에 구애받지 않고, 커밋 기준 모든 버킷들을 조회할 수도 있는데, 대신\n이 때는 폴더 정보를 일절 불러오지 않는다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/buckets/{id}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 버킷의 {@link IStudioRepositoryBucket.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "버킷의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryBucket"
                }
              }
            }
          }
        },
        "summary": "버킷의 상세 정보를 조회한다",
        "description": "버킷의 상세 정보를 조회한다.\n\n특정 {@link IStudioRepositoryCommit 커밋}을 기준으로 한,\n{@link IStudioRepositoryBucket 버킷}의 상세 정보를 불러온다.\n\n단 조회 대상이 {@link IStudioRepositoryDirectory 폴더}인 경우, 해당 폴더에\n귀속된 모든 버킷들의 정보를 불러오는데, 이 때 버킷의 수가 많아 데이터의 양\n자체가 방대할 수도 있다. 이에 가급 폴더의 상세 정보를 불러오는 것은 지양하고,\n대신 {@link index}를 함수를 호출하도록 하자.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/buckets/get": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          }
        ],
        "requestBody": {
          "description": "대상 버킷의 경로 (랩핑됨)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryBucket.IPath"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "버킷의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryBucket"
                }
              }
            }
          }
        },
        "summary": "버킷의 상세 정보 조회 by path",
        "description": "버킷의 상세 정보 조회 by path.\n\n특정 {@link IStudioRepositoryCommit 커밋}을 기준으로 한\n{@link IStudioRepositoryBucket 버킷}의 상세 정보를, 그것의 경로\n{@link IStudioRepositoryBucket.path} 를 통해 불러온다.\n\n단 조회 대상이 {@link IStudioRepositoryDirectory 폴더}인 경우, 해당 폴더에\n귀속된 모든 버킷들의 정보를 불러오는데, 이 때 버킷의 수가 많아 데이터의 양\n자체가 방대할 수도 있다. 이에 가급 폴더의 상세 정보를 불러오는 것은 지양하고,\n대신 {@link index}를 함수를 호출하도록 하자.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/commits": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryCommit.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 커밋 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryCommit.ISummary"
                }
              }
            }
          }
        },
        "summary": "저장소 내 커밋의 요약정보 리스트 조회",
        "description": "저장소 내 커밋의 요약정보 리스트 조회.\n\n{@link IStudioRepository 저장소} 내의\n{@link IStudioRepositoryCommit.ISummary 커밋의  요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n참고로 {@link IHubCustomer 고객}이 현재 수정 중으로써\n{@link IStudioRepositoryCommit.archived_at 아직 기록되지 아니한 커밋}의\n경우, 오직 해당 커밋을 생성한 고객만이 이를 열람할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/commits/{id}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "커밋의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryCommit"
                }
              }
            }
          }
        },
        "summary": "커밋의 상세 정보 조회",
        "description": "커밋의 상세 정보 조회.\n\n{@link IStudioRepository 저장소} 내 특정\n{@link IStudioRepositoryCommit 커밋}의 상세 정보를 불러온다.\n\n참고로 {@link IHubCustomer 고객}이 현재 수정 중으로써\n{@link IStudioRepositoryCommit.archived_at 아직 기록되지 아니한 커밋}의\n경우, 오직 해당 커밋을 생성한 고객만이 이를 열람할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/histories": {
      "patch": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "워크플로우 실행 내역 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioWorkflowHistory.ISummary"
                }
              }
            }
          }
        },
        "summary": "워크플로우 실행 내역 요약 정보 일괄 조회",
        "description": "워크플로우 실행 내역 요약 정보 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/histories/details": {
      "patch": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "워크플로우 실행 내역 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioWorkflowHistory"
                }
              }
            }
          }
        },
        "summary": "워크플로우 실행 내역 상세 정보 일괄 조회",
        "description": "워크플로우 실행 내역 상세 정보 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/histories/{id}": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우 실행 내역의 {@link IStudioWorkflowHistory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "워크플로우 실행 상세 내역",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowHistory"
                }
              }
            }
          }
        },
        "summary": "워크플로우 실행 내역 상세 조회",
        "description": "워크플로우 실행 내역 상세 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우 실행 내역의 {@link IStudioWorkflowHistory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "워크플로우 실행 중단",
        "description": "워크플로우 실행 중단.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/commits/workflows/standalone/{workflowId}": {
      "get": {
        "deprecated": true,
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "워크플로우 + 커밋 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowStandalone"
                }
              }
            }
          }
        },
        "summary": "워크플로우 단독 조회하기",
        "description": "워크플로우 단독 조회하기.\n\n특정 {@link IStudioRepository 저장소}로부터,\n가장 마지막 {@link IStudioRepositoryCommit 커밋}의\n{@link IStudioWorkflow 워크플로우} 파일을 단독 조회하는 API 함수.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/commits/workflows/standalone/get": {
      "patch": {
        "deprecated": true,
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "워크플로우 경로",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowStandalone.IPath"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "워크플로우 + 커밋 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowStandalone"
                }
              }
            }
          }
        },
        "summary": "워크플로우 단독 조회하기 by get",
        "description": "워크플로우 단독 조회하기 by get.\n\n특정 {@link IStudioRepository 저장소}로부터,\n가장 마지막 {@link IStudioRepositoryCommit 커밋}의\n{@link IStudioWorkflow 워크플로우} 파일을 경로 기준 단독 조회하는 API 함수.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{id}/compile": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id}"
          }
        ],
        "responses": {
          "201": {
            "description": "컴파일된 프로그램의 URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        },
        "summary": "워크플로우 문서 임시 컴파일하기",
        "description": "워크플로우 문서 임시 컴파일하기.\n\n현행 {@link IStudioWorkflow 워크플로우} 문서만을 대상으로, 임시 컴파일한다.\n\n본래 저장소에서 {@link IStudioWorkflowRepositoryRelease 배포 프로그램}을\n빌드할 때에도 이러한 컴파일이 이루어진다. 본 API 는 그것과 별개로써, 개별\n워크플로우 문서와 그곳에서 `import` 된 일부 스크립트 파일들만을 대상으로, 부분\n컴파일을 하는 것이다.\n\n주 용도는 개별 워크플로우의 시험 동작 등을 위함이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{id}/execute": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id}"
          }
        ],
        "requestBody": {
          "description": "파라미터 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflow.IExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "워크플로우 함수 실행 결과로써의 리턴값",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IExecutionResultany"
                }
              }
            }
          }
        },
        "summary": "워크플로우 함수 실행하기",
        "description": "워크플로우 함수 실행하기.\n\n워크플로우 함수를 실행하고, 그것의 리턴값을 기다려 반환한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{id}/proceed": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id}"
          }
        ],
        "requestBody": {
          "description": "파라미터 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflow.IExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "워크플로우 함수 실행 결과로써의 리턴값",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowHistory.ISummary"
                }
              }
            }
          }
        },
        "summary": "워크플로우 함수 진행하기",
        "description": "워크플로우 함수 진행하기.\n\n워크플로우 함수를 실행하되, 그것의 리턴값을 기다리지 않고, 다만 실행 결과\n내역에 해당하는 {@link IStudioWorkflowHistory.ISummary} 를 반환한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{id}/simulate": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id}"
          }
        ],
        "requestBody": {
          "description": "디버깅 여부",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflow.ISimulate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "TypeScript 파일들의 Dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recordstringstring"
                }
              }
            }
          }
        },
        "summary": "컴파일 시뮬레이션",
        "description": "컴파일 시뮬레이션.\n\n워크플로우 문서를 바로 컴파일하지 않고, 컴파일시 생겨나는 TypeScript\n파일들을 미리 확인함으로써, 그 과정을 시뮬레이션 해 본다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/releases": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryRelease.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 배포 프로그램 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryRelease.ISummary"
                }
              }
            }
          }
        },
        "summary": "저장소 내 배포 프로그램의 요약정보 리스트 조회",
        "description": "저장소 내 배포 프로그램의 요약정보 리스트 조회.\n\n특정 {@link IStudioRepository 저장소} 내의 모든\n{@link IStudioRepositoryRelease 배포 프로그램의 요약 정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n배포 프로그램의 요약 정보에는, 배포 프로그램의 버전과 일시 및 문서 정보 정도가\n들어있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/releases/{id}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 배포 프로그램의 {@link IStudioRepositoryRelease.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "배포 프로그램의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryRelease"
                }
              }
            }
          }
        },
        "summary": "저장소 내 배포 프로그램의 상세 정보 조회",
        "description": "저장소 내 배포 프로그램의 상세 정보 조회.\n\n{@link IStudioRepository 저장소} 내 특정\n{@link IStudioRepositoryRelease 배포 프로그램}의 상세 정보를 불러온다.\n\n배포 프로그램의 상세 정보에는, 해당 프로그램에서 `export` 된 모든\n{@link IStudioRepositoryReleaseNode 함수 노드}들과, 이들의 메타 타입 정보가\n들어있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/releases/{version}/get": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 배포 프로그램의 {@link IStudioRepositoryRelease.version}"
          }
        ],
        "responses": {
          "200": {
            "description": "배포 프로그램의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryRelease"
                }
              }
            }
          }
        },
        "summary": "저장소 내 배포 프로그램의 상세 정보 조회 by version",
        "description": "저장소 내 배포 프로그램의 상세 정보 조회 by version.\n\n{@link IStudioRepository 저장소} 내 특정\n{@link IStudioRepositoryRelease 배포 프로그램}의 상세 정보를,\n해당 릴리즈의 버전명으로 조회한다.\n\n배포 프로그램의 상세 정보에는, 해당 프로그램에서 `export` 된 모든\n{@link IStudioRepositoryReleaseNode 함수 노드}들과, 이들의 메타 타입 정보가\n들어있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/releases/{id}/swagger": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 배포 프로그램의 {@link IStudioRepositoryRelease.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "스웨거 문서",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISwagger"
                }
              }
            }
          }
        },
        "summary": "배포 프로그램을 스웨거 문서로 조회한다",
        "description": "배포 프로그램을 스웨거 문서로 조회한다.\n\n본 스튜디오 시스템은 {@link IStudioRepository 저장소}에서\n{@link IStudioRepositoryRelease 배포한 프로그램}의 각\n{@link IStudioRepositoryReleaseNode 노드 함수}들을, 개개별별 Rest API 형태로도\n제공한다. 본 함수는 이러한 Rest API 의 스펙들을 스웨거 문서를 열람할 수 있는\n함수이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{id}/execute": {
      "post": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 배포 프로그램의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 함수 노드의 {@link IStudioRepositoryReleaseNode.id}"
          }
        ],
        "requestBody": {
          "description": "파라미터 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.IExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "대상 함수 노드의 실행 결과로써의 리턴값",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IExecutionResultany"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 실행하기",
        "description": "릴리즈 노드 실행하기.\n\n릴리즈 노드를 실행하고, 그것의 리턴값을 기다려 반환한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{id}/proceed": {
      "post": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 배포 프로그램의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 함수 노드의 {@link IStudioRepositoryReleaseNode.id}"
          }
        ],
        "requestBody": {
          "description": "파라미터 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.IExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "대상 함수 노드의 실행 결과로써의 리턴값",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory.ISummary"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 진행하기",
        "description": "릴리즈 노드 진행하기.\n\n릴리즈 노드를 실행하되, 그것의 리턴값을 기다리지 않고, 다만 실행 결과\n내역에 해당하는 {@link IStudioRepositoryReleaseNodeHistory.ISummary} 를\n반환한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{nodeId}/histories": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 릴리즈의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 노드의 {@link IStudioRepositoryReleaseNode.id }"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "릴리즈 노드 내역 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryReleaseNodeHistory.ISummary"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 실행 내역 요약 정보 일괄 조회",
        "description": "릴리즈 노드 실행 내역 요약 정보 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{nodeId}/histories/details": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 릴리즈의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 노드의 {@link IStudioRepositoryReleaseNode.id }"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "릴리즈 노드 내역 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryReleaseNodeHistory"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 실행 내역 상세 정보 일괄 조회",
        "description": "릴리즈 노드 실행 내역 상세 정보 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/admins/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{nodeId}/histories/{id}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 릴리즈의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 노드의 {@link IStudioRepositoryReleaseNode.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 릴리즈 노드 실행 내역의 {@link IStudioRepositoryReleaseNodeHistory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "릴리즈 노드 실행 상세 내역",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 실행 내역 상세 조회",
        "description": "릴리즈 노드 실행 내역 상세 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [],
        "requestBody": {
          "description": "계정 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccount.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 계정의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccount"
                }
              }
            }
          }
        },
        "summary": "계정 생성하기",
        "description": "계정 생성하기.\n\n{@link IHubCustomer 고객}이 {@link IStudioAccount 계정}을 생성한다.\n\n만일 고객이 {@link IStudioEnterprise 기업}을 설립하고 그곳에 계정을 귀속시키는\n게 목적이라해도, 일단 고객은 자신의 계정을 먼저 생성하고, 이어서 기업을 설립하며\n해당 계정의 소유권을 넘겨야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccount.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 계정 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioAccount.ISummary"
                }
              }
            }
          }
        },
        "summary": "계정 요약정보 리스트 조회",
        "description": "계정 요약정보 리스트 조회.\n\n본 스튜디오 시스템에 존재하는 모든\n{@link IStudioAccount.IInvert 계정의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{id}": {
      "put": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 계정의 {@link IStudioAccount.id}"
          }
        ],
        "requestBody": {
          "description": "계정 코드 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccount.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "계정 수정하기",
        "description": "계정 수정하기.\n\n{@link IHubCustomer 고객}이 과거 자신이 생성했던\n{@link IStudioAccount 계정}의 식별자 코드를 수정한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 계정의 {@link IStudioAccount.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "계정 삭제하기",
        "description": "계정 삭제하기.\n\n{@link IHubCustomer 고객}이 과거 자신이 생성했던 {@link IStudioAccount 계정}을\n삭제한다.\n\n만일 대상 계정이 {@link IHubMember 회원}이 아닌 {@link IStudioEnterprise 기업}에\n귀속된 것이라면, 현재의 고객은 해당 기업의 최상위 관리자 권한을 가진\n{@link IStudioEnterpriseEmployee 직원}이어야 한다. 그리고 해당 기업은 계정과\n삭제와 함께 삭제된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 계정의 {@link IStudioAccount.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "계정 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccount"
                }
              }
            }
          }
        },
        "summary": "계정 상세 정보를 {@link IStudioAccount.id}로 조회",
        "description": "계정 상세 정보를 {@link IStudioAccount.id}로 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{code}/get": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 계정의 {@link IStudioAccount.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "계정 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccount"
                }
              }
            }
          }
        },
        "summary": "계정 상세 정보를 {@link IStudioAccount.code}로 조회",
        "description": "계정 상세 정보를 {@link IStudioAccount.code}로 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/schedules": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IStudioAccountSchedule.ICreateForRelease"
                  },
                  {
                    "$ref": "#/components/schemas/IStudioAccountSchedule.ICreateForGood"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSchedule"
                }
              }
            }
          }
        },
        "summary": "스케쥴을 생성한다",
        "description": "스케쥴을 생성한다.\n\n{@link IStudioAccount 스튜디오 계정}에 새로운 스케쥴\n{@link IStudioAccountSchedule}을 생성한다.\n\n참고로 스튜디오 계정에 설정된 스케쥴은, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 편집할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSchedule.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "스케쥴들의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioAccountSchedule.ISummary"
                }
              }
            }
          }
        },
        "summary": "스케쥴 목록을 조회한다",
        "description": "스케쥴 목록을 조회한다.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한 모든\n{@link IStudioAccountSchedule 스케쥴의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n참고로 스튜디오 계정에 설정된 스케쥴는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/schedules/{id}/pause": {
      "put": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스케쥴의 {@link IStudioAccount.id }"
          }
        ],
        "requestBody": {
          "description": "중지할 스케쥴 인터벌 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSchedule.IPause"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "스케쥴을 일시 중지한다",
        "description": "스케쥴을 일시 중지한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/schedules/{id}/resume": {
      "put": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스케쥴의 {@link IStudioAccount.id }"
          }
        ],
        "requestBody": {
          "description": "재개할 스케쥴 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSchedule.IResume"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "일시 중단된 스케쥴을 재개한다",
        "description": "일시 중단된 스케쥴을 재개한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/schedules/{id}": {
      "put": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스케쥴의 {@link IStudioAccount.id }"
          }
        ],
        "requestBody": {
          "description": "수정할 스케쥴 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSchedule.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "스케쥴을 수정한다",
        "description": "스케쥴을 수정한다.\n\n{@link IStudioAccount 스튜디오 계정}에 기 설정한\n{@link IStudioAccountSchedule 스케쥴}을 수정한다.\n\n참고로 스튜디오 계정에 설정된 스케쥴은, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 편집할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 스케쥴의 {@link IStudioAccount.id }"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "스케쥴을 삭제한다",
        "description": "스케쥴을 삭제한다.\n\n{@link IStudioAccount 스튜디오 계정}에 기 설정한\n{@link IStudioAccountSchedule 스케쥴}을 삭제한다.\n\n참고로 스튜디오 계정에 설정된 스케쥴은, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 편집할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 스케쥴의 {@link IStudioAccount.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "스케쥴 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSchedule"
                }
              }
            }
          }
        },
        "summary": "스케쥴을 상세 조회한다",
        "description": "스케쥴을 상세 조회한다.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한\n{@link IStudioAccountSchedule 스케쥴}의 상세 정보를 불러온다. 리턴되는\n상세 정보에는, {@link IStudioAccountSchedule.ISummary} 에는 없는 변수값\n및 상세 설명이 포함된다.\n\n참고로 스튜디오 계정에 설정된 스케쥴는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/secrets": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "생성할 전역 변수 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSecret.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 전역 변수 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSecret"
                }
              }
            }
          }
        },
        "summary": "전역 변수를 생성한다",
        "description": "전역 변수를 생성한다.\n\n{@link IStudioAccount 스튜디오 계정}에 새로운 전역 변수\n{@link IStudioAccountSecret}를 생성한다. 참고로 전역 변수에 설정한 변수값\n{@link IStudioAccountSecret.value}은, DB에 암호화되어 저장된다.\n\n참고로 스튜디오 계정에 설정된 전역 변수는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 편집할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSecret.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "시크릿 변수 세트들의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioAccountSecret.ISummary"
                }
              }
            }
          }
        },
        "summary": "시크릿 변수 세트들의 목록을 조회한다",
        "description": "시크릿 변수 세트들의 목록을 조회한다.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한 모든\n{@link IStudioAccountSecret 시크릿 변수 세트의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n참고로 스튜디오 계정에 설정된 시크릿 변수 세트는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/secrets/emplace": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "생성 또는 편집할 전역 변수 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSecret.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성 또는 편집된 전역 변수 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSecret"
                }
              }
            }
          }
        },
        "summary": "변수 변수를 생성 또는 편집한다",
        "description": "변수 변수를 생성 또는 편집한다.\n\n{@link IStudioAccount 스튜디오 계정}에 새로운 전역 변수\n{@link IStudioAccountSecret}를 생성한다. 만일 동일한 {@link IStudioAccountSecret.key}\n값을 가진 레코드가 있다면, 해당 레코드를 편집한다. 그리고 이러한 과정을\n{@link IStudioAccountSecret.values} 에도 동일하게 거쳐, 변수값들을 생성 또는 편집한다.\n\n참고로 스튜디오 계정에 설정된 전역 변수는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 편집할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/secrets/{id}": {
      "put": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 전역 변수의 {@link IStudioAccount.id }"
          }
        ],
        "requestBody": {
          "description": "수정할 전역 변수 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSecret.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "전역 변수를 수정한다",
        "description": "전역 변수를 수정한다.\n\n{@link IStudioAccount 스튜디오 계정}에 기 설정한\n{@link IStudioAccountSecret 전역 변수}를 수정한다.\n\n참고로 스튜디오 계정에 설정된 전역 변수는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 편집할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 전역 변수의 {@link IStudioAccount.id }"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "전역 변수를 삭제한다",
        "description": "전역 변수를 삭제한다.\n\n{@link IStudioAccount 스튜디오 계정}에 기 설정한\n{@link IStudioAccountSecret 전역 변수}를 삭제한다.\n\n참고로 스튜디오 계정에 설정된 전역 변수는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 편집할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 시크릿 변수 세트의 {@link IStudioAccount.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "시크릿 변수 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSecret"
                }
              }
            }
          }
        },
        "summary": "시크릿 변수 세트를 상세 조회한다",
        "description": "시크릿 변수 세트를 상세 조회한다.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한\n{@link IStudioAccountSecret 시크릿 변수 세트}의 상세 정보를 불러온다. 리턴되는\n상세 정보에는, {@link IStudioAccountSecret.ISummary} 에는 없는 변수값\n리스트 및 상세 설명이 포함된다.\n\n참고로 스튜디오 계정에 설정된 시크릿 변수 세트는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/secrets/{key}/get": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "key",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 시크릿 변수 세트의 {@link IStudioAccountSecret.key}"
          }
        ],
        "responses": {
          "200": {
            "description": "시크릿 변수 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSecret"
                }
              }
            }
          }
        },
        "summary": "시크릿 변수 세트 상세 조회 by key",
        "description": "시크릿 변수 세트 상세 조회 by key.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한\n{@link IStudioAccountSecret 시크릿 변수}의 상세 정보를, 그것이 키 값 (변수명)\n으로 불러온다. 리턴되는 상세 정보에는, {@link IStudioAccountSecret.ISummary}\n에는 없는 변수값 및 상세 설명이 포함된다.\n\n참고로 스튜디오 계정에 설정된 시크릿 변수는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/secrets/{secretId}/values": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "secretId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 변수값 세트의 {@link IStudioAccountSecret.id }"
          }
        ],
        "requestBody": {
          "description": "변수값 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSecretValue.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 변수값",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSecretValue"
                }
              }
            }
          }
        },
        "summary": "개별 변수값 생성하기",
        "description": "개별 변수값 생성하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/secrets/{secretId}/values/{id}": {
      "put": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "secretId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 변수값 세트의 {@link IStudioAccountSecret.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 변수값의 {@link IStudioAccountSecretValue.id}"
          }
        ],
        "requestBody": {
          "description": "수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSecretValue.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "개별 변수값 수정하기",
        "description": "개별 변수값 수정하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "secretId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 변수값 세트의 {@link IStudioAccountSecret.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 변수값의 {@link IStudioAccountSecretValue.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "개별 변수값 삭제하기",
        "description": "개별 변수값 삭제하기.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "secretId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 시크릿 변수 세트의 {@link IStudioAccountSecret.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 변수값의 {@link IStudioAccountSecretValue.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "변수값 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSecretValue"
                }
              }
            }
          }
        },
        "summary": "전역 변수 상세 조회",
        "description": "전역 변수 상세 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/secrets/values": {
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSecretValue.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "변수값 역참조 요약 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioAccountSecretValue.IInvertSummary"
                }
              }
            }
          }
        },
        "summary": "전역 변수들의 목록을 조회한다",
        "description": "전역 변수들의 목록을 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/widgets/{widgetCode}/tiles": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "widgetCode",
            "in": "path",
            "schema": {
              "const": "general"
            },
            "required": true,
            "description": " 귀속 위젯의 코드"
          }
        ],
        "requestBody": {
          "description": "타일 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountWidgetTile.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 타일 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountWidgetTile"
                }
              }
            }
          }
        },
        "summary": "위젯 타일 생성하기",
        "description": "위젯 타일 생성하기.\n\n특정 {@link IStudioAccount 계정} 및 위젯을 대상으로, 새로운\n{@link IStudioAccountWidgetTile 타일}을 생성한다.\n\n타일을 생성하며, 그것이 배치될\n{@link IStudioAccountWidgetTile.position 좌표}와\n{@link IStudioAccountWidgetTile.position 크기}를 입력해야 하는데, 만일\n해당 좌표 영역과 겹치는 기존의 타일이 존재시,\n{@link IStudioAccountWidgetTile.bash} 속성에 따라 그 작업이 성공 또는 실패할\n수 있으니, 필히 {@link IStudioAccountWidgetTile.bash} 에 대하여 정독할 것.\n\n- 밀어내기 `false`:\n  - 422 Unprocessable Entity 에러\n- 밀어내기 `true`:\n  - 영역이 겹치는 타일들을 하단으로 밀어냄 (Y 좌표 값이 늘어남)\n  - 밀려난 타일과 겹치는 또다른 타일 존재시, 그 또한 연쇄적으로 밀어냄\n  - 다만 {@link IStudioAccountWidgetTile.pinned} 는 못 밀어내고 422 에러",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "widgetCode",
            "in": "path",
            "schema": {
              "const": "general"
            },
            "required": true,
            "description": " 귀속 위젯의 코드"
          }
        ],
        "requestBody": {
          "description": "위젯 편집 정보",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IStudioAccountWidgetTile.IUpdate"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "위젯 타일 편집하기",
        "description": "위젯 타일 편집하기.\n\n특정 {@link IStudioAccountWidgetTile} 의 좌표나 크기 등, geometry 정보를\n수정한다.\n\n타일을 수정하며, 그것이 새로이 배치될\n{@link IStudioAccountWidgetTile.position 좌표}와\n{@link IStudioAccountWidgetTile.position 크기}를 입력해야 하는데, 만일\n해당 좌표 영역과 겹치는 기존의 타일이 존재시,\n{@link IStudioAccountWidgetTile.bash} 속성에 따라 그 작업이 성공 또는 실패할\n수 있으니, 필히 {@link IStudioAccountWidgetTile.bash} 에 대하여 정독할 것.\n\n- 밀어내기 `false`:\n  - 422 Unprocessable Entity 에러\n- 밀어내기 `true`:\n  - 영역이 겹치는 타일들을 하단으로 밀어냄 (Y 좌표 값이 늘어남)\n  - 밀려난 타일과 겹치는 또다른 타일 존재시, 그 또한 연쇄적으로 밀어냄\n  - 다만 {@link IStudioAccountWidgetTile.pinned} 는 못 밀어내고 422 에러",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "widgetCode",
            "in": "path",
            "schema": {
              "const": "general"
            },
            "required": true,
            "description": " 귀속 위젯의 코드"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountWidgetTile.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "좌표체계상 페이징 처리된 위젯 타일 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IGeometryPageIStudioAccountWidgetTile.ISummary"
                }
              }
            }
          }
        },
        "summary": "위젯 타일 목록 조회하기",
        "description": "위젯 타일 목록 조회하기.\n\n특정 {@link IStudioAccount 계정} 및 위젯에 속한\n{@link IStudioAccountWidgetTile 타일}들을, 페이지 단위로 불러온다.\n\n단, 위젯은 일반적인 페이지네이션 API 와 달리, 스칼라 값 (ex: 1 페이지) 이\n아닌 {@link IStudioAccountWidgetTile.IGeometry 2D 공간상 좌표와 크기}에 의한\n{@link IGeometryPage 페이지네이션}을 수행한다.\n\n이 점을 명시하고, 조회코자 하는 페이지의 영역을 이동해가며, 페이지네이션을\n작업을 수행할 것.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/widgets/{widgetCode}/tiles/{id}": {
      "delete": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "widgetCode",
            "in": "path",
            "schema": {
              "const": "general"
            },
            "required": true,
            "description": " 귀속 위젯의 코드"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 타일의 {@link IStudioAccountWidgetTile.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "위젯 타일 삭제하기",
        "description": "위젯 타일 삭제하기.\n\n특정 {@link IStudioAccountWidgetTile} 을 삭제한다.\n\n타일의 삭제는 영구적이며, 복원할 수 없다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "widgetCode",
            "in": "path",
            "schema": {
              "const": "general"
            },
            "required": true,
            "description": " 귀속 위젯의 코드"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 타일의 {@link IStudioAccountWidgetTile.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "위젯 타일 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountWidgetTile"
                }
              }
            }
          }
        },
        "summary": "위젯 타일 개별 조회하기",
        "description": "위젯 타일 개별 조회하기.\n\n특정 {@link IStudioAccountWidgetTile 위젯 타일}을 개별 조회한다.\n\n아마 프론트 어플리케이션에서는 사용할 일이 없고, 순 테스트 검산용 API 가 될 듯.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/widgets/{widgetCode}/tiles/minimap": {
      "patch": {
        "tags": [],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "widgetCode",
            "in": "path",
            "schema": {
              "const": "general"
            },
            "required": true,
            "description": " 귀속 위젯의 코드"
          },
          {
            "name": "breakpoint",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "const": "md"
                },
                {
                  "const": "xs"
                },
                {
                  "const": "sm"
                },
                {
                  "const": "lg"
                }
              ]
            },
            "required": true,
            "description": " 대상 {@link IStudioAccountWidgetTileGeometry.breakpoint}"
          }
        ],
        "responses": {
          "200": {
            "description": "미니맵 정보",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IStudioAccountWidgetTile.IMinimapItem"
                  }
                }
              }
            }
          }
        },
        "summary": "위젯 타일의 미니맵 일괄 조회",
        "description": "위젯 타일의 미니맵 일괄 조회.\n\n{@link IStudioAccountWidgetTileGeometry 위젯 타일의 geometry 정보}를, 특정\n{@link IStudioAccountWidgetTileGeometry.breakpoint} 에 한하여 일괄 조회한다.\n\n이를 통하여 미니맵을 구성할 수 있으며, 각각 위젯 타일의 상세 컴포넌트 정보는,\n{@link index} API 를 통하여 영역 단위로 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/accounts/{accountCode}/widgets/{widgetCode}/tiles/trashes": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "widgetCode",
            "in": "path",
            "schema": {
              "const": "general"
            },
            "required": true,
            "description": " 귀속 위젯의 코드"
          }
        ],
        "requestBody": {
          "description": "다시 위젯에 등록할 타일 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountWidgetTile.IRestore"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "삭제된 위젯 타일 살리기",
        "description": "삭제된 위젯 타일 살리기.\n\n삭제된 특정 {@link IStudioAccountWidgetTile} 을 다시 위젯에 등록한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "widgetCode",
            "in": "path",
            "schema": {
              "const": "general"
            },
            "required": true,
            "description": " 귀속 위젯의 코드"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 위젯 타일 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioAccountWidgetTile"
                }
              }
            }
          }
        },
        "summary": "삭제된 위젯 타일 목록 조회하기",
        "description": "삭제된 위젯 타일 목록 조회하기.\n\n특정 {@link IStudioAccount 계정} 및 위젯에 속한\n삭제된 {@link IStudioAccountWidgetTile 타일}들을, 페이지 단위로 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/enterprises/{accountCode}/employees": {
      "post": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "직원 임명 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseEmployee.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "임명된 직원의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseEmployee"
                }
              }
            }
          }
        },
        "summary": "직원 임명하기",
        "description": "직원 임명하기.\n\n{@link IStudioEnterprise 기업}의 관리자 이상급 직원인 {@link IHubCustomer 고객}이,\n특정 {@link IHubMember 회원}을 자사의 {@link IStudioEnterpriseEmployee 직원}으로\n임명한다.\n\n단, 직원을 임명할 수 있는 이는 기업의 소유자이거나 관리자여야 한다. 그리고 관리자의\n경우에는 자신보다 낮은 직급의 직원만을 임명할 수 있으며, 오직 소유자만이 소유자 또는\n관리자 직책의 직원을 임명할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseEmployee.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 직원의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioEnterpriseEmployee.ISummary"
                }
              }
            }
          }
        },
        "summary": "기업 직원들의 요약정보 리스트 조회",
        "description": "기업 직원들의 요약정보 리스트 조회.\n\n특정 {@link IStudioEnterprise 기업}에 소속된 모든\n{@link IStudioEnterpriseEmployee.ISummary 직원의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/enterprises/{accountCode}/employees/{id}": {
      "put": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 직원의 {@link IStudioEnterpriseEmployee.id}"
          }
        ],
        "requestBody": {
          "description": "직원 직책 변경 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseEmployee.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "직원 직책 변경하기",
        "description": "직원 직책 변경하기.\n\n{@link IStudioEnterprise 기업}의 관리자 이상급 직원인 {@link IHubCustomer 고객}이,\n특정 {@link IStudioEnterpriseEmployee 직원}의 직책을 변경한다.\n\n단, 직원의 직책을 변경할 수 있는 이는 기업의 소유자이거나 관리자여야 한다. 그리고\n관리자의 경우에는 자신보다 낮은 직급의 직책만을 변경할 수 있으며, 오직 소유자만이\n소유자 또는 관리자 직책의 직원을 변경할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 직원의 {@link IStudioEnterpriseEmployee.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "직원 해임하기",
        "description": "직원 해임하기.\n\n{@link IStudioEnterprise 기업}의 관리자 이상급 직원인\n{@link IHubCustomer 고객}이, 특정 {@link IStudioEnterpriseEmployee 직원}을\n해임한다.\n\n단, 직원을 해임할 수 있는 이는 기업의 소유자이거나 관리자여야 한다. 그리고\n관리자의 경우에는 자신보다 낮은 직급의 직원만을 해임할 수 있으며, 오직\n소유자만이 소유자 또는 관리자 직책의 직원을 해임할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 직원의 {@link IStudioEnterpriseEmployee.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "직원의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseEmployee"
                }
              }
            }
          }
        },
        "summary": "직원 상세 정보 조회하기",
        "description": "직원 상세 정보 조회하기.\n\n특정 {@link IStudioEnterpriseEmployee 직원}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/enterprises/{accountCode}/employees/approve": {
      "put": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 기업 계정의 {@link IStudioAccount.code }"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseEmployee"
                }
              }
            }
          }
        },
        "summary": "직원 초대 수락하기",
        "description": "직원 초대 수락하기.\n\n{@link IHubCustomer 고객}이 자신에게 온 초대를 수락하여, 실제 해당\n{@link IStudioEnterprise 기업}의 {@link IStudioEnterpriseEmployee 직원}이\n된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/enterprises": {
      "post": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [],
        "requestBody": {
          "description": "기업 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IStudioEnterprise.ICreate.INew"
                  },
                  {
                    "$ref": "#/components/schemas/IStudioEnterprise.ICreate.IMigrate"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 기업의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterprise"
                }
              }
            }
          }
        },
        "summary": "기업 생성하기",
        "description": "기업 생성하기.\n\n새로운 {@link IStudioEnterprise 기업}을 생성한다.\n\n{@link IHubCustomer 고객}은 새 기업을 생성하며 그 기업에 새로운 계정을 발급할\n수도 있고, 자신이 보유한 {@link IStudioAccount 계정}을 새 기업에게 넘기고\n스스로는 또다른 새 계정을 발급해 사용할 수도 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/enterprises/{id}": {
      "put": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "기업 변경 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterprise.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "기업 정보 변경하기",
        "description": "기업 정보 변경하기.\n\n{@link IStudioEnterprise 기업}의 기본 정보를 변경한다.\n\n단, 이를 위해서는 현 {@link IHubCustomer 고객}이 해당 기업의\n소유자 직책을 가진 {@link IStudioEnterpriseEmployee 직원}이어야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "기업 삭제하기",
        "description": "기업 삭제하기.\n\n{@link IStudioEnterprise 기업}을 삭제하고, 귀속 {@link IStudioAccount 계정}\n또한 함께 없애버린다.\n\n단, 이를 위해서는 현 {@link IHubCustomer 고객}이 해당 기업의\n소유자 직책을 가진 {@link IStudioEnterpriseEmployee 직원}이어야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 기업의 {@link IStudioEnterprise.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "기업의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterprise"
                }
              }
            }
          }
        },
        "summary": "기업의 상세 정보 조회하기",
        "description": "기업의 상세 정보 조회하기.\n\n특정 {@link IStudioEnterprise 기업}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/enterprises/{accountCode}/get": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 기업에 귀속된 계정의 {@link IStudioAccount.code }"
          }
        ],
        "responses": {
          "200": {
            "description": "기업의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterprise"
                }
              }
            }
          }
        },
        "summary": "기업의 상세 정보 조회하기 (by 계정 코드)",
        "description": "기업의 상세 정보 조회하기 (by 계정 코드).\n\n특정 {@link IStudioEnterprise 기업}의 상세 정보를, 귀속 계정의\n{@link IStudioAccount.code 코드}로 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/enterprises/{accountCode}/teams/{teamCode}/companions": {
      "post": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioAccount.code }"
          },
          {
            "name": "teamCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 팀의 {@link IStudioEnterpriseTeam.code }"
          }
        ],
        "requestBody": {
          "description": "구성원 임명 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 구성원의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion"
                }
              }
            }
          }
        },
        "summary": "팀 구성원 임명하기",
        "description": "팀 구성원 임명하기.\n\n{@link IStudioEnterprise 기업} 내 어떤 {@link IStudioEnterpriseTeam 팀}의\n관리자 이상급 {@link IStudioEnterpriseTeamCompanion 구성원}인\n{@link IHubCustomer 고객}이, 해당 기업 내 특정\n{@link IStudioEnterpriseEmployee 직원}을 자신의 팀에 구성원으로 임명한다.\n\n단, 구성원을 임명할 수 있는 이는 팀의 관리자이거나 \"장\" 이어야 한다. 그리고\n관리자의 경우에는 자신의 역할보다 낮은 단계의 구성원만을 임명할 수 있으며, 오직\n팀의 \"장\" 만이 \"장\" 및 \"관리자\" 급의 구성원을 임명할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "teamCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 팀의 {@link IStudioEnterpriseTeam.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 구성원의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioEnterpriseTeamCompanion.ISummary"
                }
              }
            }
          }
        },
        "summary": "기업 팀 구성원들의 요약정보 리스트 조회",
        "description": "기업 팀 구성원들의 요약정보 리스트 조회.\n\n특정 {@link IStudioEnterprise 기업}의 {@link IStudioEnterpriseTeam 팀}에\n소속된 {@link IStudioEnterpriseTeamCompanion.ISummary 구성원의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/enterprises/{accountCode}/teams/{teamCode}/companions/{id}": {
      "put": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioAccount.code }"
          },
          {
            "name": "teamCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 팀의 {@link IStudioEnterpriseTeam.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 구성원의 {@link IStudioEnterpriseTeamCompanion.id}"
          }
        ],
        "requestBody": {
          "description": "구성원의 역할 변경 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "구성원의 역할 변경하기",
        "description": "구성원의 역할 변경하기.\n\n{@link IStudioEnterprise 기업} 내 어떤 {@link IStudioEnterpriseTeam 팀}의\n관리자 이상급 {@link IStudioEnterpriseTeamCompanion 구성원}인\n{@link IHubCustomer 고객}이, 타 구성원의\n{@link IStudioEnterpriseTeamCompanion.role 역할}을 변경한다.\n\n단, 구성원의 역할을 변경할 수 있는 이는 팀의 관리자이거나 \"장\" 이어야 한다. 그리고\n관리자의 경우에는 자신의 역할보다 낮은 단계의 구성원만을 변경할 수 있으며, 오직\n팀의 \"장\" 만이 \"장\" 및 \"관리자\" 급의 구성원을 변경할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioAccount.code }"
          },
          {
            "name": "teamCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 팀의 {@link IStudioEnterpriseTeam.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 구성원의 {@link IStudioEnterpriseTeamCompanion.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "구성원 해임하기",
        "description": "구성원 해임하기.\n\n{@link IStudioEnterprise 기업} 내 어떤 {@link IStudioEnterpriseTeam 팀}의\n관리자 이상급 {@link IStudioEnterpriseTeamCompanion 구성원}인\n{@link IHubCustomer 고객}이, 타 구성원을 팀에서 해임한다.\n\n단, 구성원을 해임할 수 있는 이는 팀의 관리자이거나 \"장\" 이어야 한다. 그리고\n관리자의 경우에는 자신의 역할보다 낮은 단계의 구성원만을 해임할 수 있으며, 오직\n팀의 \"장\" 만이 \"장\" 및 \"관리자\" 급의 구성원을 해임할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "teamCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 팀의 {@link IStudioEnterpriseTeam.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 구성원의 {@link IStudioEnterpriseTeamCompanion.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "구성원의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion"
                }
              }
            }
          }
        },
        "summary": "구성원 상세 정보 조회하기",
        "description": "구성원 상세 정보 조회하기.\n\n{@link IStudioEnterprise 기업}에서 구성한\n{@link IStudioEnterpriseTeam 팀}에 소속된 특정\n{@link IStudioEnterpriseTeamCompanion 구성원}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/enterprises/{accountCode}/teams": {
      "post": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "팀 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseTeam.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 팀의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseTeam"
                }
              }
            }
          }
        },
        "summary": "기업에 새 팀을 창설한다",
        "description": "기업에 새 팀을 창설한다.\n\n특정 {@link IStudioEnterprise 기업}의 관리자 이상급\n{@link IStudioEnterpriseEmployee 직원}인 {@link IHubCustomer 고객}이,\n새 {@link IStudioEnterpriseTeam 팀}을 창설한다.\n\n또한 팀의 창설자인 고객인, 그 스스로가 해당 팀의 \"장\"\n{@link IStudioEnterpriseTeamCompanion 구성원}이 된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseTeam.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 팀의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioEnterpriseTeam.ISummary"
                }
              }
            }
          }
        },
        "summary": "기업 팀들의 요약정보 리스트 조회",
        "description": "기업 팀들의 요약정보 리스트 조회.\n\n특정 {@link IStudioEnterprise 기업}에 구성된 모든\n{@link IStudioEnterpriseTeam.ISummary 팀의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/enterprises/{accountCode}/teams/{id}": {
      "put": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 팀의 {@link IStudioEnterpriseTeam.id}"
          }
        ],
        "requestBody": {
          "description": "팀 변경 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseTeam.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "팀 정보를 변경한다",
        "description": "팀 정보를 변경한다.\n\n{@link IStudioEnterpriseTeam 기업 팀}의 관리자 이상급\n{@link IStudioEnterpriseTeamCompanion 구성원}인 {@link IHubCustomer 고객}이,\n해당 팀의 정보를 변경한다.\n\n만일 바꾸고자 하는 정보가 팀이 아닌 구성원 관련된 것이라면,\n다른 API 를 사용해야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 팀의 {@link IStudioEnterpriseTeam.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "팀을 해산한다",
        "description": "팀을 해산한다.\n\n{@link IStudioEnterpriseTeam 기업 팀}의 \"장\" 급인\n{@link IStudioEnterpriseTeamCompanion 구성원} {@link IHubCustomer 고객}이,\n스스로의 팀을 해산한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 팀의 {@link IStudioEnterpriseTeam.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "팀의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseTeam"
                }
              }
            }
          }
        },
        "summary": "팀 상세 정보 조회하기",
        "description": "팀 상세 정보 조회하기.\n\n{@link IStudioEnterprise 기업}에서 구성한 특정\n{@link IStudioEnterpriseTeam 팀}의 정보를 상세 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/enterprises/{accountCode}/teams/merge": {
      "delete": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "팀 합병 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseTeam.IMerge"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "팀을 병합한다",
        "description": "팀을 병합한다.\n\n{@link IStudioEnterprise 기업} 내 여러 {@link IStudioEnterpriseTeam 팀}의\n\"장\" 급인 {@link IStudioEnterpriseTeamCompanion 구성원}\n{@link IHubCustomer 고객}이, 여러 팀을 하나로 병합한다.\n\n만일 병합하고자 하는 여러 팀에 동시에 소속된\n{@link IStudioEnterpriseEmployee 직원}들이 있다면, 이들은 남는 쪽 팀의\n{@link IStudioEnterpriseTeamCompanion.role 역할}을 부여받게 된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/enterprises/{accountCode}/teams/{code}/get": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 팀의 {@link IStudioEnterpriseTeam.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "팀의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseTeam"
                }
              }
            }
          }
        },
        "summary": "팀 상세 정보 조회하기 by 코드",
        "description": "팀 상세 정보 조회하기 by 코드.\n\n{@link IStudioEnterprise 기업}에서 구성한 특정\n{@link IStudioEnterpriseTeam 팀}의 상세 정보를 해당 팀의 코드 (`code`) 를\n이용하여 상세 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/meta/chat/sessions/{sessionId}/connections/{id}/disconnect": {
      "delete": {
        "deprecated": true,
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 채팅 세션의 {@link IStudioMetaChatSession.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 채팅 세션 커넥션의 {@link IStudioMetaChatSessionConnection.id }"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Meta LLM 채팅 세션 커넥션의 연결 해제 처리",
        "description": "Meta LLM 채팅 세션 커넥션의 연결 해제 처리.\n\nMeta LLM 채팅 세션 커넥션이 실제로 닫히지 않았어도, 마치 닫힌 것처럼 처리해주는 API.\n\n현재 프론트에서 웹소켓 연결 해제를 제대로 못하고 있어 임시로 제공하는 API 이기에,\n본 API 는 조만간 사라질 예정이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/meta/chat/sessions/{sessionId}/connections": {
      "patch": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 채팅 세션의 {@link IStudioMetaChatSession.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioMetaChatSessionConnection.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 접속 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioMetaChatSessionConnection"
                }
              }
            }
          }
        },
        "summary": "Meta LLM 채팅 세션에의 접속 정보 리스트 조회",
        "description": "Meta LLM 채팅 세션에의 접속 정보 리스트 조회.\n\n{@link IStudioMetaChatSession 채팅 세션}에 대한 {@link IHubCustomer 고객}의\nWebsocket 접속 정보들을 일괄 조회한다.\n\n리턴되는 {@link IStudioMetaChatSessionConnection}들은 {@link IPage 페이징}\n처리가 되어있다. 그리고 요청 정보\n{@link IStudioMetaChatSessionConnection.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를\n{@link IStudioMetaChatSessionConnection.IRequest.limit 제한}하거나\n{@link IStudioMetaChatSessionConnection.IRequest.search 검색}하거나,\n{@link IStudioMetaChatSessionConnection.IRequest.sort 정렬 조건}을\n임의로 설정하거나 할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/meta/chat/sessions/{sessionId}/connections/{id}": {
      "get": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 채팅 세션의 {@link IStudioMetaChatSession.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 접속의 {@link IStudioMetaChatSessionConnection.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "접속 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioMetaChatSessionConnection"
                }
              }
            }
          }
        },
        "summary": "Meta LLM 채팅 세션에의 접속 정보 개별 조회",
        "description": "Meta LLM 채팅 세션에의 접속 정보 개별 조회.\n\n{@link IStudioMetaChatSession 채팅 세션}에 대한\n{@link IHubCustomer 고객}의 Websocket 접속 정보\n{@link IStudioMetaChatSessionConnection} 를 개별 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/meta/chat/sessions/{sessionId}/messages": {
      "patch": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 채팅 세션의 {@link IStudioMetaChatSession.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioMetaChatSessionMessage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 메시지 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioMetaChatSessionMessageIStudioMetaChatSessionMessageData"
                }
              }
            }
          }
        },
        "summary": "채팅 세션 메시지 리스트 조회",
        "description": "채팅 세션 메시지 리스트 조회.\n\n{@link IStudioMetaChatSession 채팅 세션}에서 발생한 모든\n{@link IStudioMetaChatSessionMessage 메시지}들의 리스트를 조회한다.\n\n만일 메시지가 발생한 귀속 {@link IStudioMetaChatSessionConnection 접속 단위}를\n제한하고 싶다면, {@link IStudioMetaChatSessionMessage.IRequest.connection_id}\n를 설정해주면 된다.\n\n그리고 리턴되는 {@link IStudioMetaChatSessionMessage}들은 {@link IPage 페이징}\n처리가 되어있다. 그리고 요청 정보\n{@link IStudioMetaChatSessionMessage.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를\n{@link IStudioMetaChatSessionMessage.IRequest.limit 제한}하거나,\n{@link IStudioMetaChatSessionMessage.IRequest.search 검색}하거나,\n{@link IStudioMetaChatSessionMessage.IRequest.sort 정렬 조건}을\n임의로 지정하거나 할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/meta/chat/sessions/{sessionId}/messages/{id}": {
      "get": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 채팅 세션의 {@link IStudioMetaChatSession.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 메시지의 {@link IStudioMetaChatSessionMessage.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "메시지 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioMetaChatSessionMessageIStudioMetaChatSessionMessageData"
                }
              }
            }
          }
        },
        "summary": "채팅 세션 메시지 상세 조회",
        "description": "채팅 세션 메시지 상세 조회.\n\n{@link IStudioMetaChatSession 채팅 세션}에서 발생한 특정\n{@link IStudioMetaChatSessionMessage 메시지}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/meta/chat/sessions/{id}": {
      "put": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 채팅 세션의 {@link IStudioMetaChatSession.id}"
          }
        ],
        "requestBody": {
          "description": "세션의 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioMetaChatSession.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "메타 LLM 채팅 세션 정보를 수정함",
        "description": "메타 LLM 채팅 세션 정보를 수정함.\n\n기존에 생성된 {@link IStudioMetaChatSession Meta LLM 채팅 세션}의 정보를 수정한다.\n\n현재 수정할 수 있는 정보는 오직 {@link IStudioMetaChatSession.title} 밖에 없다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 채팅 세션의 {@link IStudioMetaChatSession.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Meta LLM 채팅 세션의 삭제",
        "description": "Meta LLM 채팅 세션의 삭제.\n\n기존에 생성된 {@link IStudioMetaChatSession Meta LLM 채팅 세션}을 삭제한다.\n\n해당 세션은 더 이상 {@link index} 및 {@link at} 로 조회할 수 없으며,\n{@link restart} 로 재시작 하는 것 또한 불가능하다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 채팅 세션의 {@link IStudioMetaChatSession.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "채팅 세션 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioMetaChatSession"
                }
              }
            }
          }
        },
        "summary": "채팅 세션 개별 조회하기",
        "description": "채팅 세션 개별 조회하기.\n\n타깃 채팅 세션의 상세 정보 {@link IStudioMetaChatSession}을 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/meta/chat/sessions/{id}/pin": {
      "put": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 채팅 세션의 {@link IStudioMetaChatSession.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Meta LLM 채팅 세션을 고정시킨다",
        "description": "Meta LLM 채팅 세션을 고정시킨다.\n\n고정된 채팅 세션은 다른 채팅 세션들과 구분되어, 상단에 고정되어 표시된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/meta/chat/sessions/{id}/unpin": {
      "put": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 채팅 세션의 {@link IStudioMetaChatSession.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Meta LLM 채팅 세션의 고정을 해제한다",
        "description": "Meta LLM 채팅 세션의 고정을 해제한다.\n\n고정된 채팅 세션은 다른 채팅 세션들과 구분되어, 상단에 고정되어 표시된다.\n본 함수는 그러한 고정을 해제하여, 일반 채팅 세션으로 되돌아가게 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/meta/chat/sessions/eraseAll": {
      "delete": {
        "tags": [
          "Meta"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Meta LLM 채팅 세션의 일괄 삭제",
        "description": "Meta LLM 채팅 세션의 일괄 삭제.\n\n해당 고객이 생성한 모든 {@link IStudioMetaChatSession Meta LLM 채팅 세션}들을 일괄 삭제한다.\n\n해당 고객은 더 이상 기존 세션들을 조회할 수 없으며, {@link restart 재시작}도 불가능하다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/meta/chat/sessions/{id}/disconnect": {
      "delete": {
        "deprecated": true,
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 채팅 세션의 {@link IStudioMetaChatSession.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Meta LLM 채팅 세션 내 모든 커넥션들의 연결 해제 처리",
        "description": "Meta LLM 채팅 세션 내 모든 커넥션들의 연결 해제 처리.\n\nMeta LLM 채팅 세션 커넥션들이 실제로 닫히지 않았어도, 마치 닫힌 것처럼 처리해주는 API.\n\n현재 프론트에서 웹소켓 연결 해제를 제대로 못하고 있어 임시로 제공하는 API 이기에,\n본 API 는 조만간 사라질 예정이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/meta/chat/sessions": {
      "patch": {
        "tags": [
          "Meta"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioMetaChatSession.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 세션 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioMetaChatSession"
                }
              }
            }
          }
        },
        "summary": "채팅 세션 목록 조회",
        "description": "채팅 세션 목록 조회.\n\n채팅 세션 {@link IStudioMetaChatSession} 리스트를 조회한다.\n\n리턴되는 {@link IStudioMetaChatSession}들은 {@link IPage 페이징} 처리가\n되어있다. 그리고 요청 정보 {@link IStudioMetaChatSession.IRequest}를\n어떻게 설정하냐에 따라, 각 페이지 당 레코드 수를\n{@link IStudioMetaChatSession.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 세션만을 {@link IStudioMetaChatSession.IRequest.search 검색}하거나,\n세션들의 {@link IStudioMetaChatSession.IRequest.sort 정렬 조건}을 임의로\n지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}": {
      "post": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "저장소 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepository.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 저장소의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepository"
                }
              }
            }
          }
        },
        "summary": "저장소 생성하기",
        "description": "저장소 생성하기.\n\n{@link IHubCustomer 고객}이 {@link IStudioRepository 저장소}를 생성한다.\n\n그리고 생성되는 저장소는 고객 {@link IHubMember 회원} 본인의\n{@link IStudioAccount 계정}에 귀속할 수도 있지만, 고객이\n{@link IStudioEnterpriseEmployee 직원}으로 소속된\n{@link IStudioEnterprise 기업}의 것으로 할 수도 있다.\n\n또한, 고객은 스스로 생성한 저장소에 대하여, 소유자\n{@link IStudioRepositoryAccess 권한}을 자동 부여받는다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepository.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 저장소 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepository.ISummary"
                }
              }
            }
          }
        },
        "summary": "저장소 요약정보 리스트 조회",
        "description": "저장소 요약정보 리스트 조회.\n\n본 스튜디오 시스템에 존재하는 모든\n{@link IStudioRepository.ISummary 저장소의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n단 {@link IStudioRepository.IRequest 페이지 요청 정보}를 구성하며, 조회\n대상의 범위를 특정 {@link IStudioAccount 계정}에 국한할 수 있다.\n\n그리고 귀속 계정의 코드 *accountCode* 를 `null` 값으로 둘 수 있는데, 이러하면\n해당 {@link IHubCustommer 고객}이 접근 가능한 모든 저장소를, 귀속 계정에\n관계없이 모두 조회한다. 반대로 말하면, *accountCode* 가 `null` 이 아닌 이상,\n해당 계정에 귀속된 저장소만을 조회한다. 그리고 이는\n{@link IStudioRepository.IRequest.ISearch.account.code} 와 차이가 있는데,\n검색에 사용하는 계정 코드는 유사 검색이며, 본 path 파라미터에 사용하는 코드는\n완전 일치 검색이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{id}": {
      "put": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 저장소의 {@link IStudioRepository.id}"
          }
        ],
        "requestBody": {
          "description": "저장소 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartialIStudioRepository.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "저장소 수정하기",
        "description": "저장소 수정하기.\n\n특정 {@link IStudioRepository 저장소}의 공개 수준이나 제목 및 검색 태그\n등을 수정한다. 저장소의 식별자 코드 {@link IStudioRepository.code} 또한\n본 API 함수를 통하여 수정할 수 있다.\n\n단, 저장소를 수정하기 위해서는 고객이 해당 저장소에 대하여, 최상위 관리자\n{@link IStudioRepositoryAccesss 권한}을 가지고 있어야 한다. 또한, 저장소의\n귀속 계정이 회원인 경우라면 고객 당사자인 경우, 기업인 경우라면 고객이 해당 기업의\n최상위 관리자 직원인 경우도 가능하다.\n\n그리고 원하는 것이 저장소의 귀속 계정을 변경/이전하는 것이라면 {@link shift}\n함수를 대신 사용하도록 한다. 또한 내부 버킷을 수정하는 것이라면, 새\n{@link IStudioRepositoryCommit 커밋}을 발행하도록 하자.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 저장소의 {@link IStudioRepository.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "저장소 삭제하기",
        "description": "저장소 삭제하기.\n\n{@link IHubCustomer 고객}이 과거 자신이 생성했던\n{@link IStudioRepository 저장소}를 삭제한다.\n\n참고로 저장소를 삭제하기 위해서는, 정말로 해당 저장소의 소유자여야 한다.\n단순히 해당 저장소로부터 관리자 {@link IStudioRepositoryAccess 권한}을\n부여받은 정도로는, 저장소의 소유권을 변경할 수 없다.\n\n또한 대상 저장소의 귀속 계정이 {@link IHubMember 회원}이 아닌\n{@link IStudioEnterprise 기업}이라면, 현재의 고객은 해당 기업의 최상위\n관리자 권한을 가진 {@link IStudioEnterpriseEmployee 직원}이어야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 저장소의 {@link IStudioRepository.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "저장소 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepository"
                }
              }
            }
          }
        },
        "summary": "저장소 상세 정보 조회하기",
        "description": "저장소 상세 정보 조회하기.\n\n특정 {@link IStudioRepository 저장소}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{id}/shift": {
      "put": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 저장소의 {@link IStudioRepository.id}"
          }
        ],
        "requestBody": {
          "description": "저장소 이전 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepository.IShift"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "저장소 소유권 이전하기",
        "description": "저장소 소유권 이전하기.\n\n{@link IHubCustomer 고객}이 자신이 보유한 {@link IStudioRepository 저장소}의\n소유권을 다른 {@link IStudioAccount 계정}에게 이전한다.\n\n참고로 저장소를 이전하기 위해서는, 정말로 해당 저장소의 소유자여야 한다.\n단순히 해당 저장소로부터 관리자 {@link IStudioRepositoryAccess 권한}을 부여받은\n정도로는, 저장소의 소유권을 변경할 수 없다.\n\n또한 대상 저장소의 귀속 계정이 {@link IHubMember 회원}이 아닌\n{@link IStudioEnterprise 기업}이라면, 현재의 고객은 해당 기업의 최상위\n관리자 권한을 가진 {@link IStudioEnterpriseEmployee 직원}이어야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{code}/get": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 저장소의 {@link IStudioRepository.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "저장소 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepository"
                }
              }
            }
          }
        },
        "summary": "저장소 상세 정보 조회하기 (by code)",
        "description": "저장소 상세 정보 조회하기 (by code).\n\n특정 {@link IStudioRepository 저장소}의 상세 정보를,\n귀속 {@link IStudioAccount 계정}과 저장소의 코드 (`code`) 를 이용하여 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/accesses": {
      "post": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "저장소 접근 권한 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryAccess.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 저장소 접근 권한의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryAccess"
                }
              }
            }
          }
        },
        "summary": "저장소에 새 접근 권한을 부여한다",
        "description": "저장소에 새 접근 권한을 부여한다.\n\n특정 {@link IStudioRepository 저장소}의 관리자 이상급 권한 보유자인\n{@link IHubMember 회원} 또는 {@link IStudioEnterpriseTeam 기업 팀}이,\n해당 저장소에 새로운 회원이나 기업 팀을 대상으로, 새로운\n{@link IStudioRepositoryAccess 접근 권한}을 부여한다.\n\n단, 접근 권한을 부여할 수 있는 이는 저장소의 관리자이거나 소유자여야 한다.\n그리고 관리자의 경우에는 자신의 역할보다 낮은 단계의 권한만을 부여할 수 있으며,\n오직 소유자만이 \"소유자\" 및 \"관리자\" 급의 권한을 부여할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryAccess.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 접근 권한의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryAccess.ISummary"
                }
              }
            }
          }
        },
        "summary": "저장소 접근 권한들의 요약정보 리스트 조회",
        "description": "저장소 접근 권한들의 요약정보 리스트 조회.\n\n특정 {@link IStudioRepository 저장소}에 부여된 모든\n{@link IStudioRepositoryAccess.ISummary 접근 권한의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/accesses/{id}": {
      "put": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 저장소 접근 권한의 {@link IStudioRepositoryAccess.id}"
          }
        ],
        "requestBody": {
          "description": "저장소 접근 권한 변경 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryAccess.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "저장소 접근 권한 정보를 변경한다",
        "description": "저장소 접근 권한 정보를 변경한다.\n\n특정 {@link IStudioRepository 저장소}의 관리자 이상급 권한 보유자인\n{@link IHubMember 회원} 또는 {@link IStudioEnterpriseTeam 기업 팀}이,\n해당 저장소에 특정 회원이나 기업 팀을 대상으로, 기존의\n{@link IStudioRepositoryAccess 접근 권한}을 변경한다.\n\n단, 접근 권한을 변경할 수 있는 이는 저장소의 관리자이거나 소유자여야 한다.\n그리고 관리자의 경우에는 자신의 역할보다 낮은 단계의 권한만을 변경할 수 있으며,\n오직 소유자만이 \"소유자\" 및 \"관리자\" 급의 권한을 변경할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 저장소 접근 권한의 {@link IStudioRepositoryAccess.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "저장소 접근 권한을 해제한다",
        "description": "저장소 접근 권한을 해제한다.\n\n특정 {@link IStudioRepository 저장소}의 관리자 이상급 권한 보유자인\n{@link IHubMember 회원} 또는 {@link IStudioEnterpriseTeam 기업 팀}이,\n해당 저장소에 특정 회원이나 기업 팀을 대상으로, 기존의\n{@link IStudioRepositoryAccess 접근 권한}을 해제한다.\n\n단, 접근 권한을 해제할 수 있는 이는 저장소의 관리자이거나 소유자여야 한다.\n그리고 관리자의 경우에는 자신의 역할보다 낮은 단계의 권한만을 해제할 수 있으며,\n오직 소유자만이 \"소유자\" 및 \"관리자\" 급의 권한을 해제할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 접근 권한의 {@link IStudioRepositoryAccess.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "접근 권한의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryAccess"
                }
              }
            }
          }
        },
        "summary": "접근 권한 상세 정보 조회하기",
        "description": "접근 권한 상세 정보 조회하기.\n\n특정 {@link IStudioRepositoryAccess 접근 권한}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/accesses/{id}/approve": {
      "put": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 접근 권한 레코드의 {@link IStudioRepositoryAccess.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryAccess"
                }
              }
            }
          }
        },
        "summary": "저장소 접근 권한 부여 수락하기",
        "description": "저장소 접근 권한 부여 수락하기.\n\n{@link IHubCustomer 고객} 또는 {@link IStudioEnterpriseTeam 기업 팀}의\n매니저 이상 급 지위자가, 특정 {@link IStudioRepository 저장소}에 대하여\n부여된 {@link IStudioRepositoryAccess 접근 권한}을 수락한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/buckets": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보 + 폴더 경로",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryBucket.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 버킷 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryBucket.ISummary"
                }
              }
            }
          }
        },
        "summary": "특정 커밋 기준의 버킷의 요약정보 리스트 조회",
        "description": "특정 커밋 기준의 버킷의 요약정보 리스트 조회.\n\n특정 {@link IStudioRepositoryCommit 커밋}을 기준으로 한,\n{@link IStudioRepositoryBucket.ISummary 버킷의 요약 정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n참고로 {@link IStudioRepositoryBucket.IRequest 페이지 요청 정보}를 구성하며,\n대상 {@link IStudioRepositoryDirectory 폴더 경로}를 지정할 수 있다. 또한\n폴더 경로에 구애받지 않고, 커밋 기준 모든 버킷들을 조회할 수도 있는데, 대신\n이 때는 폴더 정보를 일절 불러오지 않는다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/buckets/{id}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 버킷의 {@link IStudioRepositoryBucket.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "버킷의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryBucket"
                }
              }
            }
          }
        },
        "summary": "버킷의 상세 정보를 조회한다",
        "description": "버킷의 상세 정보를 조회한다.\n\n특정 {@link IStudioRepositoryCommit 커밋}을 기준으로 한,\n{@link IStudioRepositoryBucket 버킷}의 상세 정보를 불러온다.\n\n단 조회 대상이 {@link IStudioRepositoryDirectory 폴더}인 경우, 해당 폴더에\n귀속된 모든 버킷들의 정보를 불러오는데, 이 때 버킷의 수가 많아 데이터의 양\n자체가 방대할 수도 있다. 이에 가급 폴더의 상세 정보를 불러오는 것은 지양하고,\n대신 {@link index}를 함수를 호출하도록 하자.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/buckets/get": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          }
        ],
        "requestBody": {
          "description": "대상 버킷의 경로 (랩핑됨)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryBucket.IPath"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "버킷의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryBucket"
                }
              }
            }
          }
        },
        "summary": "버킷의 상세 정보 조회 by path",
        "description": "버킷의 상세 정보 조회 by path.\n\n특정 {@link IStudioRepositoryCommit 커밋}을 기준으로 한\n{@link IStudioRepositoryBucket 버킷}의 상세 정보를, 그것의 경로\n{@link IStudioRepositoryBucket.path} 를 통해 불러온다.\n\n단 조회 대상이 {@link IStudioRepositoryDirectory 폴더}인 경우, 해당 폴더에\n귀속된 모든 버킷들의 정보를 불러오는데, 이 때 버킷의 수가 많아 데이터의 양\n자체가 방대할 수도 있다. 이에 가급 폴더의 상세 정보를 불러오는 것은 지양하고,\n대신 {@link index}를 함수를 호출하도록 하자.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits": {
      "post": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 저장소의 {@link IStudioRepository.code}"
          }
        ],
        "requestBody": {
          "description": "커밋 발행 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryCommit.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 커밋의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryCommit"
                }
              }
            }
          }
        },
        "summary": "새 커밋 발행하기",
        "description": "새 커밋 발행하기.\n\n{@link IHubCustomer 고객}이 {@link IStudioRepository 저장소}로부터\n{@link IStudioRepositoryBucket 버킷 파일}들을 편집하고,\n{@link IStudioRepositoryCommit 커밋}을 발행한다.\n\n참고로 고객이 커밋을 하려거든, 해당 저장소로부터 최소 \"member\" 이상의\n{@link IStudioRepositoryAccess 접근 권한}을 부여받아야 한다.\n\n그리고 커밋을 발행하였다하여, 그것이 곧 커밋의 완결을 뜻하는 것은 아니다.\n커밋은 그것의 기록 확정 일시를 뜻하는\n{@link IStudioRepositoryCommit.archived_at} 속성이 `null` 인\n경우에는 {@link IStudioRepositoryBucket 버킷}들을 계속 {@link update 수정}할\n수 있으며, 심지어 커밋을 취소하고 {@link erase 삭제}할 수도 있다.\n\n커밋의 완결은 오직 {@link archive} 메서드 호출을 통해서 이루어진다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryCommit.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 커밋 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryCommit.ISummary"
                }
              }
            }
          }
        },
        "summary": "저장소 내 커밋의 요약정보 리스트 조회",
        "description": "저장소 내 커밋의 요약정보 리스트 조회.\n\n{@link IStudioRepository 저장소} 내의\n{@link IStudioRepositoryCommit.ISummary 커밋의  요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n참고로 {@link IHubCustomer 고객}이 현재 수정 중으로써\n{@link IStudioRepositoryCommit.archived_at 아직 기록되지 아니한 커밋}의\n경우, 오직 해당 커밋을 생성한 고객만이 이를 열람할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{id}": {
      "put": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id}"
          }
        ],
        "requestBody": {
          "description": "커밋 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryCommit.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "기존 커밋 수정하기",
        "description": "기존 커밋 수정하기.\n\n{@link IHubCustomer 고객}이 기 발행한 {@link IStudioRepositoryCommit 커밋}을\n수정한다.\n\n물론, 대상 커밋은 아직 {@link IStudioRepositoryCommit.archived_at} 속성이\n`null` 이어야 한다. 즉, 기록 완결되지 않은 커밋이어야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "커밋 삭제하기",
        "description": "커밋 삭제하기.\n\n구성 중이던 {@link IStudioRepositoryCommit 커밋}을 취소하고, 삭제한다.\n\n물론, 대상 커밋은 아직 {@link IStudioRepositoryCommit.archived_at} 속성이\n`null` 이어야 한다. 즉, 기록 완결되지 않은 커밋이어야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "커밋의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryCommit"
                }
              }
            }
          }
        },
        "summary": "커밋의 상세 정보 조회",
        "description": "커밋의 상세 정보 조회.\n\n{@link IStudioRepository 저장소} 내 특정\n{@link IStudioRepositoryCommit 커밋}의 상세 정보를 불러온다.\n\n참고로 {@link IHubCustomer 고객}이 현재 수정 중으로써\n{@link IStudioRepositoryCommit.archived_at 아직 기록되지 아니한 커밋}의\n경우, 오직 해당 커밋을 생성한 고객만이 이를 열람할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{id}/archive": {
      "post": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudio }"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryCommit.IArchivedCommit"
                }
              }
            }
          }
        },
        "summary": "커밋 기록하기",
        "description": "커밋 기록하기.\n\n{@link IStudioRepositoryCommit 커밋}의 모든 변경 내용을\n{@link IStudioRepository 저장소}에 기록함으로써, 완결한다.\n\n커밋을 기록한 이후로는, {@link update 수정} 및 {@link erase 삭제}가\n일절 불가하다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{id}/fork": {
      "post": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 저장소의 {@link IStudioRepository.code}"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id}"
          }
        ],
        "requestBody": {
          "description": "새로운 저장소 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepository.ICreateFork"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "새로운 저장소 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepository"
                }
              }
            }
          }
        },
        "summary": "저장소 복제하기",
        "description": "저장소 복제하기.\n\n특정 커밋으로부터 새로운 저장소를 복제/생성한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/releases": {
      "post": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "배포 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryRelease.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 배포 프로그램의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryRelease"
                }
              }
            }
          }
        },
        "summary": "프로그램 배포하기",
        "description": "프로그램 배포하기.\n\n본 {@link IStudioRepository 저장소}의 특정\n{@link IStudioRepositoryCommit 커밋}으로부터, 프로그램을 배포한다.\n\n{@link IHubCustomer 고객}은 저장소 (커밋) 을 구성하는 각\n{@link IStudioWorkflow 워크플로우 문서} 및\n{@link IStudioRepositoryFile 스크립트 파일}로부터 대상 함수들을 지정함으로써,\n이들을 하나의 프로그램으로 묶어 빌드하여 배포할 수 있다. 더하여 배포본을 생성하며,\n이에 관하여 문서를 작성할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryRelease.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 배포 프로그램 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryRelease.ISummary"
                }
              }
            }
          }
        },
        "summary": "저장소 내 배포 프로그램의 요약정보 리스트 조회",
        "description": "저장소 내 배포 프로그램의 요약정보 리스트 조회.\n\n특정 {@link IStudioRepository 저장소} 내의 모든\n{@link IStudioRepositoryRelease 배포 프로그램의 요약 정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n배포 프로그램의 요약 정보에는, 배포 프로그램의 버전과 일시 및 문서 정보 정도가\n들어있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/releases/{id}": {
      "put": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "문서 및 검색 태그 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryRelease.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정된 배포 프로그램의 상세 정보"
          }
        },
        "summary": "배포 프로그램의 문서 수정하기",
        "description": "배포 프로그램의 문서 수정하기.\n\n기 {@link IStudioRepositoryRelease 배포한 프로그램}의 문서 및\n검색 태그를 수정한다.\n\n본 함수를 통해 기 배포 프로그램의 귀속 {@link IStudioRepositoryCommit 커밋}을\n수정하거나, `export` 할 {@link IStudioWorkflow 워크플로우 문서}나\n{@link IStudioRepositoryFile 사용자 정의 함수}를 변경하거나 하는 것은\n불가능하다. 그러한 것을 원한다면, 현 배포 프로그램을 {@link erase 삭제}하고,\n{@link create 새로이 배포}하는 것을 권장.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 배포 프로그램의 {@link IStudioRepositoryRelease.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "배포 프로그램 삭제하기",
        "description": "배포 프로그램 삭제하기.\n\n기존에 {@link IStudioRepositoryRelease 배포했던 프로그램}을 삭제한다.\n\n단, 이미 해당 배포 프로그램을 `import` 하여 사용 중인 또다른\n{@link IStudioRepository 저장소}의 {@link IStudioWorkflow 워크플로우 문서}나\n{@link IStudioRepositoryFile 스크립트 파일}들은 이에 영향받지 아니한다.\n이는 마켓으로부터 기 판매된 프로그램에 대하여도 동일.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 배포 프로그램의 {@link IStudioRepositoryRelease.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "배포 프로그램의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryRelease"
                }
              }
            }
          }
        },
        "summary": "저장소 내 배포 프로그램의 상세 정보 조회",
        "description": "저장소 내 배포 프로그램의 상세 정보 조회.\n\n{@link IStudioRepository 저장소} 내 특정\n{@link IStudioRepositoryRelease 배포 프로그램}의 상세 정보를 불러온다.\n\n배포 프로그램의 상세 정보에는, 해당 프로그램에서 `export` 된 모든\n{@link IStudioRepositoryReleaseNode 함수 노드}들과, 이들의 메타 타입 정보가\n들어있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/releases/{version}/get": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 배포 프로그램의 {@link IStudioRepositoryRelease.version}"
          }
        ],
        "responses": {
          "200": {
            "description": "배포 프로그램의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryRelease"
                }
              }
            }
          }
        },
        "summary": "저장소 내 배포 프로그램의 상세 정보 조회 by version",
        "description": "저장소 내 배포 프로그램의 상세 정보 조회 by version.\n\n{@link IStudioRepository 저장소} 내 특정\n{@link IStudioRepositoryRelease 배포 프로그램}의 상세 정보를,\n해당 릴리즈의 버전명으로 조회한다.\n\n배포 프로그램의 상세 정보에는, 해당 프로그램에서 `export` 된 모든\n{@link IStudioRepositoryReleaseNode 함수 노드}들과, 이들의 메타 타입 정보가\n들어있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/releases/{id}/swagger": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 배포 프로그램의 {@link IStudioRepositoryRelease.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "스웨거 문서",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISwagger"
                }
              }
            }
          }
        },
        "summary": "배포 프로그램을 스웨거 문서로 조회한다",
        "description": "배포 프로그램을 스웨거 문서로 조회한다.\n\n본 스튜디오 시스템은 {@link IStudioRepository 저장소}에서\n{@link IStudioRepositoryRelease 배포한 프로그램}의 각\n{@link IStudioRepositoryReleaseNode 노드 함수}들을, 개개별별 Rest API 형태로도\n제공한다. 본 함수는 이러한 Rest API 의 스펙들을 스웨거 문서를 열람할 수 있는\n함수이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{id}/compile": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id}"
          }
        ],
        "responses": {
          "201": {
            "description": "컴파일된 프로그램의 URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        },
        "summary": "워크플로우 문서 임시 컴파일하기",
        "description": "워크플로우 문서 임시 컴파일하기.\n\n현행 {@link IStudioWorkflow 워크플로우} 문서만을 대상으로, 임시 컴파일한다.\n\n본래 저장소에서 {@link IStudioWorkflowRepositoryRelease 배포 프로그램}을\n빌드할 때에도 이러한 컴파일이 이루어진다. 본 API 는 그것과 별개로써, 개별\n워크플로우 문서와 그곳에서 `import` 된 일부 스크립트 파일들만을 대상으로, 부분\n컴파일을 하는 것이다.\n\n주 용도는 개별 워크플로우의 시험 동작 등을 위함이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{id}/execute": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id}"
          }
        ],
        "requestBody": {
          "description": "파라미터 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflow.IExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "워크플로우 함수 실행 결과로써의 리턴값",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IExecutionResultany"
                }
              }
            }
          }
        },
        "summary": "워크플로우 함수 실행하기",
        "description": "워크플로우 함수 실행하기.\n\n워크플로우 함수를 실행하고, 그것의 리턴값을 기다려 반환한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{id}/proceed": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id}"
          }
        ],
        "requestBody": {
          "description": "파라미터 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflow.IExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "워크플로우 함수 실행 결과로써의 리턴값",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowHistory.ISummary"
                }
              }
            }
          }
        },
        "summary": "워크플로우 함수 진행하기",
        "description": "워크플로우 함수 진행하기.\n\n워크플로우 함수를 실행하되, 그것의 리턴값을 기다리지 않고, 다만 실행 결과\n내역에 해당하는 {@link IStudioWorkflowHistory.ISummary} 를 반환한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{id}/simulate": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id}"
          }
        ],
        "requestBody": {
          "description": "디버깅 여부",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflow.ISimulate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "TypeScript 파일들의 Dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recordstringstring"
                }
              }
            }
          }
        },
        "summary": "컴파일 시뮬레이션",
        "description": "컴파일 시뮬레이션.\n\n워크플로우 문서를 바로 컴파일하지 않고, 컴파일시 생겨나는 TypeScript\n파일들을 미리 확인함으로써, 그 과정을 시뮬레이션 해 본다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/histories": {
      "patch": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "워크플로우 실행 내역 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioWorkflowHistory.ISummary"
                }
              }
            }
          }
        },
        "summary": "워크플로우 실행 내역 요약 정보 일괄 조회",
        "description": "워크플로우 실행 내역 요약 정보 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/histories/details": {
      "patch": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "워크플로우 실행 내역 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioWorkflowHistory"
                }
              }
            }
          }
        },
        "summary": "워크플로우 실행 내역 상세 정보 일괄 조회",
        "description": "워크플로우 실행 내역 상세 정보 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/histories/{id}": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우 실행 내역의 {@link IStudioWorkflowHistory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "워크플로우 실행 상세 내역",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowHistory"
                }
              }
            }
          }
        },
        "summary": "워크플로우 실행 내역 상세 조회",
        "description": "워크플로우 실행 내역 상세 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우 실행 내역의 {@link IStudioWorkflowHistory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "워크플로우 실행 중단",
        "description": "워크플로우 실행 중단.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/workflows/standalone": {
      "post": {
        "deprecated": true,
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "워크플로우 및 커밋 생성 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowStandalone.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 워크플로우 + 커밋 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowStandalone"
                }
              }
            }
          }
        },
        "summary": "워크플로우 단독 생성하기",
        "description": "워크플로우 단독 생성하기.\n\n특정 {@link IStudioRepository 저장소}로부터, 새로운\n{@link IStudioWorkflow 워크플로우} 파일을 단독 생성하고, 그대로\n{@link IStudioRepositoryCommit 커밋}까지 발행하는 API 함수.\n\n커밋을 생성하며 단 하나의 워크플로우 파일만을 생성하기에, 리턴되는 객체의 타입\n{@link IStudioWorkflowStandalone} 는 해당 워크플로우의 커밋의 정보를 동시에\n담고 있다.\n\n참고로 생성된 커밋의 {@link IStudioRepsitoryCommit.archived_at archive} 는,\n본래의 커밋 API 로 가서 행해야 한다. 즉, 본 그룹이 아닌 종래의\n{@link HubApi.functional.studio.customers.repositories.commits.archive}\n함수를 호출해야 한다는 것.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "deprecated": true,
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "커밋 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowStandalone.IUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "워크플로우 수정하기",
        "description": "워크플로우 수정하기.\n\n특정 {@link IStudioRepository 저장소}로부터\n아직 {@link IStudioRepositoryCommit.archived_at 기록되지 않은 커밋}의\n개별 {@link IStudioWorkflow 워크플로우} 파일을 수정하는 API 함수.\n\n참고로 대상 저장소의 가장 마지막 커밋이 아직 기록되지 않은 상태여야 하며,\n그렇지 않은 경우에는 에러가 발생한다. 그리고 수정한 커밋의\n{@link IStudioRepsitoryCommit.archived_at archive} 는,\n본래의 커밋 API 로 가서 행해야 한다. 즉, 본 그룹이 아닌 종래의\n{@link HubApi.functional.studio.customers.repositories.commits.archive}\n함수를 호출해야 한다는 것.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/workflows/standalone/accumulate": {
      "post": {
        "deprecated": true,
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "커밋 생성 + 워크플로우 수정 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowStandalone.IAccumulate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "수정된 워크플로우 + 생성된 커밋 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowStandalone"
                }
              }
            }
          }
        },
        "summary": "워크플로우 누적하기",
        "description": "워크플로우 누적하기.\n\n특정 {@link IStudioRepository 저장소}로부터 기존의\n{@link IStudioWorkflow 워크플로우} 파일을 단독 수정하며, 새로운\n{@link IStudioRepositoryCommit 커밋}을 발행하는 API 함수.\n\n커밋을 발행하며 단 하나의 워크플로우 문서만을 수정하기에, 리턴되는 객체의 타입\n{@link IStudioWorkflowStandalone} 는 해당 워크플로우의 커밋의 정보를 동시에\n담고 있다.\n\n참고로 생성된 커밋의 {@link IStudioRepsitoryCommit.archived_at archive} 는,\n본래의 커밋 API 로 가서 행해야 한다. 즉, 본 그룹이 아닌 종래의\n{@link HubApi.functional.studio.customers.repositories.commits.archive}\n함수를 호출해야 한다는 것.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/workflows/standalone/{workflowId}": {
      "get": {
        "deprecated": true,
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "워크플로우 + 커밋 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowStandalone"
                }
              }
            }
          }
        },
        "summary": "워크플로우 단독 조회하기",
        "description": "워크플로우 단독 조회하기.\n\n특정 {@link IStudioRepository 저장소}로부터,\n가장 마지막 {@link IStudioRepositoryCommit 커밋}의\n{@link IStudioWorkflow 워크플로우} 파일을 단독 조회하는 API 함수.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/workflows/standalone/get": {
      "patch": {
        "deprecated": true,
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "워크플로우 경로",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowStandalone.IPath"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "워크플로우 + 커밋 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowStandalone"
                }
              }
            }
          }
        },
        "summary": "워크플로우 단독 조회하기 by get",
        "description": "워크플로우 단독 조회하기 by get.\n\n특정 {@link IStudioRepository 저장소}로부터,\n가장 마지막 {@link IStudioRepositoryCommit 커밋}의\n{@link IStudioWorkflow 워크플로우} 파일을 경로 기준 단독 조회하는 API 함수.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/temporary": {
      "patch": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowTemporary.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 임시 저장 레코드 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioWorkflowTemporary.ISummary"
                }
              }
            }
          }
        },
        "summary": "임시 저장 레코드 리스트 조회하기",
        "description": "임시 저장 레코드 리스트 조회하기.\n\n대상 {@link IStudioWorkflow 워크플로우 문서}의 임시 저장 레코드의 요약 정보\n{@link IStudioWorkflowTemporary.ISummary} 의 리스트를 불러온다. 리턴되는 정보들은\n{@link IPage 페이징} 처리되어 있으며, 검색 조건에 따라 필터링된다.\n\n참고로 워크플로우 문서를 임시 저장하는 주체는 프론트 어플리케이션이며, 각각의 임시\n저장 레코드는 귀속 {@link IStudioRepositoryCommit.archived_at 커밋이 확정}되는\n순간에 일괄 삭제된다. 그리고 귀속 커밋 및 워크플로우 문서에 대하여도 임시 저장\n레코드가 N 개를 넘어가는 경우에도, 자동 삭제된다.\n\n따라서 기 생성한 임시 저장 레코드가 목록에서 조회되지 않는다해도, 이는 정상적인\n버그가 아니라 스펙일 수 있으니, 이 점 참고하기 바란다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowTemporary.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "생성된 임시 저장 레코드의 요약 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowTemporary.ISummary"
                }
              }
            }
          }
        },
        "summary": "워크플로우 문서에 대한 임시 저장 레코드 생성하기",
        "description": "워크플로우 문서에 대한 임시 저장 레코드 생성하기.\n\n현재 {@link IStudioRepositoryCommit.archived_at 편집 중인 커밋} 및\n{@link IStudioWorkflow 워크플로우 문서}에 대한\n{@link IStudioWorkflowTemporary 임시 저장 레코드}를 생성한다. 본 API 의 실행\n주체는 프론트 어플리케이션이며, 사람이 아닌 시스템의 스케쥴러에 의해 호출되어야 한다.\n\n참고로 귀속 커밋이 이미 기록 완료된 상태라면, 더 이상 임시 저장 수행이 불가능하여,\n`422 unprocessable entity` 오류가 발생한다. 그리고 귀속 커밋의 기록 완료와 함께,\n해당 커밋에 대한 모든 임시 저장 레코드들은 일괄 삭제된다.\n\n따라서 임시 저장 레코드 생성에 실패하거나 또는 기 생성한 임시 저장 레코드가\n더 이상 조회되지 않는다하여도, 이는 버그가 아니라 스펙의 일종일 수 있으니,\n이 점 참고하기 바란다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/temporary/{id}": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 워크플로우의 {@link IStudioWorkflow.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 임시 레코드의 {@link IStudioWorkflowTemporary.id}"
          },
          {
            "name": "erase",
            "in": "query",
            "schema": {
              "type": "boolean",
              "title": "삭제 여부",
              "description": "삭제 여부.\n\n임시 저장 레코드를 열람하며, 해당 레코드를 삭제할 지 여부."
            },
            "required": false,
            "title": "삭제 여부",
            "description": "삭제 여부.\n\n임시 저장 레코드를 열람하며, 해당 레코드를 삭제할 지 여부."
          }
        ],
        "responses": {
          "200": {
            "description": "대상 임시 레코드의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowTemporary"
                }
              }
            }
          }
        },
        "summary": "임시 저장 레코드 조회하기",
        "description": "임시 저장 레코드 조회하기.\n\n워크플로우 문서의 임시 저장 레코드 {@link IStudioWorkflowTemporary} 를 조회한다.\n그리고 쿼리 정보 {@link IStudioWorkflowTemporary.IQuery} 따라, 조회한 레코드를\n동시에 삭제하기도 한다.\n\n참고로 워크플로우 문서를 임시 저장하는 주체는 프론트 어플리케이션이며, 각각의 임시\n저장 레코드는 귀속 {@link IStudioRepositoryCommit.archived_at 커밋이 확정}되는\n순간에 일괄 삭제된다. 그리고 귀속 커밋 및 워크플로우 문서에 대하여도 임시 저장\n레코드가 N 개를 넘어가는 경우에도, 자동 삭제된다.\n\n따라서 기 생성한 임시 저장 레코드가 본 API 에서 조회되지 않는다해도, 이는 정상적인\n버그가 아니라 스펙일 수 있으니, 이 점 참고하기 바란다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 워크플로우의 {@link IStudioWorkflow.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 임시 레코드의 {@link IStudioWorkflowTemporary.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "임시 저장 레코드 삭제하기",
        "description": "임시 저장 레코드 삭제하기.\n\n대상 {@link IStudioWorkflowTemporary 임시 저장 레코드}를 삭제한다.\n\n단, 임시 저장은 오직 귀속 {@link IStudioRepositoryCommit 커밋}이\n{@link IStudioRepositoryCommit.archived_at 기록 완료}되지 않은 상태에서만\n가능하다. 그리고 귀속 커밋이 기록 완료되는 순간, 일괄 삭제된다. 더하여\n임시 저장 레코드를 {@link at 개별 조회}하며, 조회하는 그 순간에 삭제하는 것이\n가능하다.\n\n따라서 본 API 함수를 호출한 적이 없음에도 불구하고, 기 생성한 임시 저장\n레코드가 이미 삭제되었다한들, 이는 버그가 아니라 스펙이다. 이 점 참고하기 바란다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/temporary/clear": {
      "delete": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "임시 저장 레코드 일괄 삭제하기",
        "description": "임시 저장 레코드 일괄 삭제하기.\n\n대상 {@link IStudioWorkflow 워크플로우}에 대한\n{@link IStudioWorkflowTemporary 임시 저장 레코드}들을 일괄 삭제한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/scripts": {
      "patch": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowScriptConnector.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 스크립트 커넥터 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioWorkflowScriptConnector"
                }
              }
            }
          }
        },
        "summary": "스크립트 커넥트 리스트 조회하기",
        "description": "스크립트 커넥트 리스트 조회하기.\n\n귀속 {@link IStudioWorkflow 워크플로우 문서}와 {@link IStudioRepository 저장소}\n및 {@link IStudioRepositoryCommit 커밋}으로부터, 사용할 수 있는 모든\n{@link IStudioWorkflowScriptConnector 스크립트 커넥터}들을 불러온다.\n리턴되는 스크립트 커넥터들은 {@link IPage 페이징} 처리되어 있으며, 검색 조건에\n따라 필터링된다.\n\n참고로 워크플로우 문서 또한 함수의 일종이기에, 워크플로우 문서 또한 또다른\n워크플로우 문서의 입장에서는 (스크립트) 커넥터 함수의 일종이다. 따라서 리턴되는\n스크립트 커넥터 중 현 워크플로우 문서를 제하고 싶다면,\n{@link IStudioWorkflowScriptConnector.IRequest.workflow_id} 를 이용하여\n필터링하면 된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/scripts/get": {
      "patch": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "requestBody": {
          "description": "대상 스크립트 함수 또는 워크플로우 문서의 식별자",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowScriptConnector.ICreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "스크립트 커넥터 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowScriptConnector"
                }
              }
            }
          }
        },
        "summary": "스크립트 커넥터 개별 조회하기",
        "description": "스크립트 커넥터 개별 조회하기.\n\n귀속 {@link IStudioWorkflow 워크플로우 문서}와 {@link IStudioRepository 저장소}\n및 {@link IStudioRepositoryCommit 커밋}으로부터, 대상 스크립트 함수\n(또는 다른 워크플로우 문서)를 개별 지정하여, 그것의\n{@link IStudioWorkflowScriptConnector 스크립트 커넥터} 정보를 불러온다.\n\n참고로 동 저장소의 다른 워크플로우 문서 또한 스크립트 커넥터로 불러올 수 있는\n이유는, 워크플로우 문서 또한 함수의 일종이라 `import` 가능하기 때문이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/swaggers": {
      "patch": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "페이징 처리된 스웨거 커넥터 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioWorkflowSwagger"
                }
              }
            }
          }
        },
        "summary": "워크플로우 문서에 등록된 스웨거 문서 일괄 조회",
        "description": "워크플로우 문서에 등록된 스웨거 문서 일괄 조회.\n\n{@link IStudioWorkflow 워크플로우 문서}에 등록된 모든 스웨거 문서들을 일괄\n조회한다. 리턴되는 스웨거 문서는 {@link IPage 페이징} 처리되어 있으며,\n{@link IStudioWorkflowSwaggerConnector 커넥터}와의 결합을 위하여\n{@link IStudioWorkflowSwagger} 형태로 감싸져 있다.\n\n참고로 이 정보는 워크플로우 본 문서에서도 동일하게 기록된 요소이기에\n({@link IStudioWorkflowData.swaggers}), 워크플로우 문서를 조회 중인 경우에는\n본 API 를 직접 호출할 필요가 없다. 오직 다른 워크플로우 문서와 별도로, 그곳에서\n사용되는 스웨거 문서들을 조회하고 싶을 때에만 사용하자.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 귀속 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "requestBody": {
          "description": "스웨거 커넥터 생성에 필요한 정보, 스웨거 데이터 + 식별자 UUID 의 조합이다",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IStudioWorkflowSwagger.IGoodCreate"
                  },
                  {
                    "$ref": "#/components/schemas/IStudioWorkflowSwagger.IManualCreate"
                  },
                  {
                    "$ref": "#/components/schemas/IStudioWorkflowSwagger.ILinkCreate"
                  }
                ],
                "discriminator": {
                  "propertyName": "source",
                  "mapping": {
                    "good": "#/components/schemas/IStudioWorkflowSwagger.IGoodCreate",
                    "manual": "#/components/schemas/IStudioWorkflowSwagger.IManualCreate",
                    "link": "#/components/schemas/IStudioWorkflowSwagger.ILinkCreate"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "스웨거 및 커넥터 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowSwagger"
                }
              }
            }
          }
        },
        "summary": "스웨거 문서를 커넥터 구조로 변환",
        "description": "스웨거 문서를 커넥터 구조로 변환.\n\n{@link ISwagger 스웨거 문서}를 현행 {@link IStudioWorkflow 워크플로우 문서}에서\n사용할 수 있는 커넥터 구조로 변환한다.\n\n리턴되는 객체 {@link IStudioWorkflowSwagger} 에는 원본 스웨거 정보와 함께,\n{@link IStudioWorkflowSwaggerConnector 커넥터} 리스트가 함께 포함된다. 그리고\n각각의 커넥터는 endpoint 의 path 와 method 를 기준으로, 원본 스웨거의\n{@link ISwaggerOperation} 와 매칭된다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{id}/execute": {
      "post": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 배포 프로그램의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 함수 노드의 {@link IStudioRepositoryReleaseNode.id}"
          }
        ],
        "requestBody": {
          "description": "파라미터 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.IExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "대상 함수 노드의 실행 결과로써의 리턴값",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IExecutionResultany"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 실행하기",
        "description": "릴리즈 노드 실행하기.\n\n릴리즈 노드를 실행하고, 그것의 리턴값을 기다려 반환한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{id}/proceed": {
      "post": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 배포 프로그램의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 함수 노드의 {@link IStudioRepositoryReleaseNode.id}"
          }
        ],
        "requestBody": {
          "description": "파라미터 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.IExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "대상 함수 노드의 실행 결과로써의 리턴값",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory.ISummary"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 진행하기",
        "description": "릴리즈 노드 진행하기.\n\n릴리즈 노드를 실행하되, 그것의 리턴값을 기다리지 않고, 다만 실행 결과\n내역에 해당하는 {@link IStudioRepositoryReleaseNodeHistory.ISummary} 를\n반환한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{nodeId}/histories/{id}": {
      "delete": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 릴리즈의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 노드의 {@link IStudioRepositoryReleaseNode.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 릴리즈 노드 실행 내역의 {@link IStudioRepositoryReleaseNodeHistory.id }"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "릴리즈 노드 실행 중단",
        "description": "릴리즈 노드 실행 중단.\n\nTODO - 현재는 실제로 중단치는 아니하며, 단지 상태값만 저장한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 릴리즈의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 노드의 {@link IStudioRepositoryReleaseNode.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 릴리즈 노드 실행 내역의 {@link IStudioRepositoryReleaseNodeHistory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "릴리즈 노드 실행 상세 내역",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 실행 내역 상세 조회",
        "description": "릴리즈 노드 실행 내역 상세 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{nodeId}/histories": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 릴리즈의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 노드의 {@link IStudioRepositoryReleaseNode.id }"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "릴리즈 노드 내역 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryReleaseNodeHistory.ISummary"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 실행 내역 요약 정보 일괄 조회",
        "description": "릴리즈 노드 실행 내역 요약 정보 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{nodeId}/histories/details": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 릴리즈의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 노드의 {@link IStudioRepositoryReleaseNode.id }"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "릴리즈 노드 내역 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryReleaseNodeHistory"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 실행 내역 상세 정보 일괄 조회",
        "description": "릴리즈 노드 실행 내역 상세 정보 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/shelves/commits/workflows": {
      "patch": {
        "tags": [
          "Shelves"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioShelfCommitWorkflow.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "작업장 책장에 꽂힌 워크플로우 문서들의 요약 정보.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioShelfCommitWorkflow.ISummary"
                }
              }
            }
          }
        },
        "summary": "작업장 책장에 꽂힌 워크플로우 문서들의 요약 정보 목록을 조회",
        "description": "작업장 책장에 꽂힌 워크플로우 문서들의 요약 정보 목록을 조회.\n\n{@link IHubCustomer 고객}이 작업장의 책장에 꽂은 워크플로우 문서와 귀속\n{@link IStudioRepositoryCommit 커밋} 및 {@link IStudioRepository 저장소}의\n요약 정보들을 담은 {@link IStudioShelfCommitWorkflow.ISummary} 의 리스트를\n{@link IPage 페이징} 처리하여 반환한다.\n\n리턴되는 객체들은 귀속 {@link IStudioWorkflow 워크플로우 문서}가 단 한 번도\n{@link IStudioRepositoryRelease 배포}되지 않았음을 의미한다. 만약 특정\n워크플로우 문서가 단 한 번이라도 배포된 바 있다면, 이는 배포장의 책장을 뜻하는\n{@link IStudioShelfReleaseWorkflow} 로 분류되기에\n{@link HubApi.functional.customers.shelves.releases.workflows.index} 함수를\n대신 사용해야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/shelves/commits/workflows/{id}": {
      "get": {
        "tags": [
          "Shelves"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "title": "대상 레코드의 {@link IStudioShelfCommitWorkflow.id}",
            "description": " 대상 레코드의 {@link IStudioShelfCommitWorkflow.id}."
          }
        ],
        "responses": {
          "200": {
            "description": "작업장 책장에 꽂힌 워크플로우 문서의 상세 정보.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioShelfCommitWorkflow"
                }
              }
            }
          }
        },
        "summary": "작업장 책장에 꽂힌 워크플로우 문서의 상세 정보를 조회",
        "description": "작업장 책장에 꽂힌 워크플로우 문서의 상세 정보를 조회.\n\n{@link IHubCustomer 고객}이 작업장의 책장에 꽂은 워크플로우 문서와 귀속\n{@link IStudioRepositoryCommit 커밋} 및 {@link IStudioRepository 저장소}의\n상세 정보들을 담은 {@link IStudioShelfCommitWorkflow} 객체를 반환한다.\n\n리턴되는 객체는 귀속 {@link IStudioWorkflow 워크플로우 문서}가 단 한 번도\n{@link IStudioRepositoryRelease 배포}되지 않았음을 의미한다. 만약 특정\n워크플로우 문서가 단 한 번이라도 배포된 바 있다면, 이는 배포장의 책장을 뜻하는\n{@link IStudioShelfReleaseWorkflow} 로 분류되기에\n{@link HubApi.functional.customers.shelves.releases.workflows.at} 함수를\n대신 사용해야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/shelves/releases/workflows": {
      "patch": {
        "tags": [
          "Shelves"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioShelfReleaseWorkflow.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "배포장 책장에 꽂힌 워크플로우 문서들의 요약 정보.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioShelfReleaseWorkflow.ISummary"
                }
              }
            }
          }
        },
        "summary": "배포장 책장에 꽂힌 워크플로우 문서들의 요약 정보 목록을 조회",
        "description": "배포장 책장에 꽂힌 워크플로우 문서들의 요약 정보 목록을 조회.\n\n{@link IHubCustomer 고객}이 배포장의 책장에 꽂은 워크플로우 문서와 귀속\n{@link IStudioRepositoryRelease 배포} 및 {@link IStudioRepository 저장소}의\n요약 정보들을 담은 {@link IStudioShelfReleaseWorkflow.ISummary} 의 리스트를\n{@link IPage 페이징} 처리하여 반환한다.\n\n리턴되는 객체들은 귀속 {@link IStudioWorkflow 워크플로우 문서}가 단 한 번이라도\n{@link IStudioRepositoryRelease 배포}되었음을 의미한다. 만약 특정 워크플로우\n문서가 단 한 번도 배포된 적이 없다면, 이는 작업장의 책장을 뜻하는\n{@link IStudioShelfCommitWorkflow} 로 분류되기에\n{@link HubApi.functional.customers.shelves.commits.workflows.index} 함수를\n대신 사용해야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/shelves/releases/workflows/{id}": {
      "get": {
        "tags": [
          "Shelves"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "title": "대상 레코드의 {@link IStudioShelfCommitWorkflow.id}",
            "description": " 대상 레코드의 {@link IStudioShelfCommitWorkflow.id}."
          }
        ],
        "responses": {
          "200": {
            "description": "배포장 책장에 꽂힌 워크플로우 문서의 상세 정보.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioShelfReleaseWorkflow"
                }
              }
            }
          }
        },
        "summary": "배포장 책장에 꽂힌 워크플로우 문서의 상세 정보를 조회",
        "description": "배포장 책장에 꽂힌 워크플로우 문서의 상세 정보를 조회.\n\n{@link IHubCustomer 고객}이 배포장의 책장에 꽂은 워크플로우 문서와 귀속\n{@link IStudioRepositoryRelease 배포} 및 {@link IStudioRepository 저장소}의\n상세 정보들을 담은 {@link IStudioShelfReleaseWorkflow} 객체를 반환한다.\n\n리턴되는 객체는 귀속 {@link IStudioWorkflow 워크플로우 문서}가 단 한 번이라도\n{@link IStudioRepositoryRelease 배포}되었음을 의미한다. 만약 특정 워크플로우\n문서가 단 한 번도 배포된 적이 없다면, 이는 작업장의 책장을 뜻하는\n{@link IStudioShelfCommitWorkflow} 로 분류되기에\n{@link HubApi.functional.customers.shelves.commits.workflows.at} 함수를\n대신 사용해야 한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/customers/shelves/releases/workflows/categories/{purpose}": {
      "get": {
        "tags": [
          "Shelves"
        ],
        "parameters": [
          {
            "name": "purpose",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "app"
                },
                {
                  "const": "agent"
                }
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "카테고리별 릴리즈된 워크플로우 갯수.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioShelfReleaseWorkflow.Category"
                }
              }
            }
          }
        },
        "summary": "카테고리 별 배포된 워크플로우 갯수 조회",
        "description": "카테고리 별 배포된 워크플로우 갯수 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/accounts": {
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccount.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 계정 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioAccount.ISummary"
                }
              }
            }
          }
        },
        "summary": "계정 요약정보 리스트 조회",
        "description": "계정 요약정보 리스트 조회.\n\n본 스튜디오 시스템에 존재하는 모든\n{@link IStudioAccount.IInvert 계정의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/accounts/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 계정의 {@link IStudioAccount.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "계정 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccount"
                }
              }
            }
          }
        },
        "summary": "계정 상세 정보를 {@link IStudioAccount.id}로 조회",
        "description": "계정 상세 정보를 {@link IStudioAccount.id}로 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/accounts/{code}/get": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 계정의 {@link IStudioAccount.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "계정 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccount"
                }
              }
            }
          }
        },
        "summary": "계정 상세 정보를 {@link IStudioAccount.code}로 조회",
        "description": "계정 상세 정보를 {@link IStudioAccount.code}로 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/accounts/{accountCode}/schedules": {
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSchedule.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "스케쥴들의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioAccountSchedule.ISummary"
                }
              }
            }
          }
        },
        "summary": "스케쥴 목록을 조회한다",
        "description": "스케쥴 목록을 조회한다.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한 모든\n{@link IStudioAccountSchedule 스케쥴의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n참고로 스튜디오 계정에 설정된 스케쥴는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/accounts/{accountCode}/schedules/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 스케쥴의 {@link IStudioAccount.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "스케쥴 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSchedule"
                }
              }
            }
          }
        },
        "summary": "스케쥴을 상세 조회한다",
        "description": "스케쥴을 상세 조회한다.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한\n{@link IStudioAccountSchedule 스케쥴}의 상세 정보를 불러온다. 리턴되는\n상세 정보에는, {@link IStudioAccountSchedule.ISummary} 에는 없는 변수값\n및 상세 설명이 포함된다.\n\n참고로 스튜디오 계정에 설정된 스케쥴는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/accounts/{accountCode}/secrets": {
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSecret.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "시크릿 변수 세트들의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioAccountSecret.ISummary"
                }
              }
            }
          }
        },
        "summary": "시크릿 변수 세트들의 목록을 조회한다",
        "description": "시크릿 변수 세트들의 목록을 조회한다.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한 모든\n{@link IStudioAccountSecret 시크릿 변수 세트의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n참고로 스튜디오 계정에 설정된 시크릿 변수 세트는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/accounts/{accountCode}/secrets/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 시크릿 변수 세트의 {@link IStudioAccount.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "시크릿 변수 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSecret"
                }
              }
            }
          }
        },
        "summary": "시크릿 변수 세트를 상세 조회한다",
        "description": "시크릿 변수 세트를 상세 조회한다.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한\n{@link IStudioAccountSecret 시크릿 변수 세트}의 상세 정보를 불러온다. 리턴되는\n상세 정보에는, {@link IStudioAccountSecret.ISummary} 에는 없는 변수값\n리스트 및 상세 설명이 포함된다.\n\n참고로 스튜디오 계정에 설정된 시크릿 변수 세트는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/accounts/{accountCode}/secrets/{key}/get": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "key",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 시크릿 변수 세트의 {@link IStudioAccountSecret.key}"
          }
        ],
        "responses": {
          "200": {
            "description": "시크릿 변수 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSecret"
                }
              }
            }
          }
        },
        "summary": "시크릿 변수 세트 상세 조회 by key",
        "description": "시크릿 변수 세트 상세 조회 by key.\n\n{@link IStudioAccount 스튜디오 계정}에 설정한\n{@link IStudioAccountSecret 시크릿 변수}의 상세 정보를, 그것이 키 값 (변수명)\n으로 불러온다. 리턴되는 상세 정보에는, {@link IStudioAccountSecret.ISummary}\n에는 없는 변수값 및 상세 설명이 포함된다.\n\n참고로 스튜디오 계정에 설정된 시크릿 변수는, 해당 계정의 소유주이거나 또는\n해당 계정을 소유한 {@link IStudioEnterprise 기업}의 관리자 이상 직급을\n가진 {@link IStudioEnterpriseEmployee 직원}만이 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/accounts/{accountCode}/secrets/values": {
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountSecretValue.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "변수값 역참조 요약 정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioAccountSecretValue.IInvertSummary"
                }
              }
            }
          }
        },
        "summary": "전역 변수들의 목록을 조회한다",
        "description": "전역 변수들의 목록을 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/accounts/{accountCode}/secrets/{secretId}/values/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "secretId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 시크릿 변수 세트의 {@link IStudioAccountSecret.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 변수값의 {@link IStudioAccountSecretValue.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "변수값 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountSecretValue"
                }
              }
            }
          }
        },
        "summary": "전역 변수 상세 조회",
        "description": "전역 변수 상세 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/accounts/{accountCode}/widgets/{widgetCode}/tiles/minimap": {
      "patch": {
        "tags": [],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "widgetCode",
            "in": "path",
            "schema": {
              "const": "general"
            },
            "required": true,
            "description": " 귀속 위젯의 코드"
          },
          {
            "name": "breakpoint",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "const": "md"
                },
                {
                  "const": "xs"
                },
                {
                  "const": "sm"
                },
                {
                  "const": "lg"
                }
              ]
            },
            "required": true,
            "description": " 대상 {@link IStudioAccountWidgetTileGeometry.breakpoint}"
          }
        ],
        "responses": {
          "200": {
            "description": "미니맵 정보",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IStudioAccountWidgetTile.IMinimapItem"
                  }
                }
              }
            }
          }
        },
        "summary": "위젯 타일의 미니맵 일괄 조회",
        "description": "위젯 타일의 미니맵 일괄 조회.\n\n{@link IStudioAccountWidgetTileGeometry 위젯 타일의 geometry 정보}를, 특정\n{@link IStudioAccountWidgetTileGeometry.breakpoint} 에 한하여 일괄 조회한다.\n\n이를 통하여 미니맵을 구성할 수 있으며, 각각 위젯 타일의 상세 컴포넌트 정보는,\n{@link index} API 를 통하여 영역 단위로 조회할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/accounts/{accountCode}/widgets/{widgetCode}/tiles": {
      "patch": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "widgetCode",
            "in": "path",
            "schema": {
              "const": "general"
            },
            "required": true,
            "description": " 귀속 위젯의 코드"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioAccountWidgetTile.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "좌표체계상 페이징 처리된 위젯 타일 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IGeometryPageIStudioAccountWidgetTile.ISummary"
                }
              }
            }
          }
        },
        "summary": "위젯 타일 목록 조회하기",
        "description": "위젯 타일 목록 조회하기.\n\n특정 {@link IStudioAccount 계정} 및 위젯에 속한\n{@link IStudioAccountWidgetTile 타일}들을, 페이지 단위로 불러온다.\n\n단, 위젯은 일반적인 페이지네이션 API 와 달리, 스칼라 값 (ex: 1 페이지) 이\n아닌 {@link IStudioAccountWidgetTile.IGeometry 2D 공간상 좌표와 크기}에 의한\n{@link IGeometryPage 페이지네이션}을 수행한다.\n\n이 점을 명시하고, 조회코자 하는 페이지의 영역을 이동해가며, 페이지네이션을\n작업을 수행할 것.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/accounts/{accountCode}/widgets/{widgetCode}/tiles/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "widgetCode",
            "in": "path",
            "schema": {
              "const": "general"
            },
            "required": true,
            "description": " 귀속 위젯의 코드"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 타일의 {@link IStudioAccountWidgetTile.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "위젯 타일 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioAccountWidgetTile"
                }
              }
            }
          }
        },
        "summary": "위젯 타일 개별 조회하기",
        "description": "위젯 타일 개별 조회하기.\n\n특정 {@link IStudioAccountWidgetTile 위젯 타일}을 개별 조회한다.\n\n아마 프론트 어플리케이션에서는 사용할 일이 없고, 순 테스트 검산용 API 가 될 듯.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/enterprises/{accountCode}/employees": {
      "patch": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseEmployee.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 직원의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioEnterpriseEmployee.ISummary"
                }
              }
            }
          }
        },
        "summary": "기업 직원들의 요약정보 리스트 조회",
        "description": "기업 직원들의 요약정보 리스트 조회.\n\n특정 {@link IStudioEnterprise 기업}에 소속된 모든\n{@link IStudioEnterpriseEmployee.ISummary 직원의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/enterprises/{accountCode}/employees/{id}": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 직원의 {@link IStudioEnterpriseEmployee.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "직원의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseEmployee"
                }
              }
            }
          }
        },
        "summary": "직원 상세 정보 조회하기",
        "description": "직원 상세 정보 조회하기.\n\n특정 {@link IStudioEnterpriseEmployee 직원}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/enterprises/{id}": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 기업의 {@link IStudioEnterprise.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "기업의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterprise"
                }
              }
            }
          }
        },
        "summary": "기업의 상세 정보 조회하기",
        "description": "기업의 상세 정보 조회하기.\n\n특정 {@link IStudioEnterprise 기업}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/enterprises/{accountCode}/get": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 기업에 귀속된 계정의 {@link IStudioAccount.code }"
          }
        ],
        "responses": {
          "200": {
            "description": "기업의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterprise"
                }
              }
            }
          }
        },
        "summary": "기업의 상세 정보 조회하기 (by 계정 코드)",
        "description": "기업의 상세 정보 조회하기 (by 계정 코드).\n\n특정 {@link IStudioEnterprise 기업}의 상세 정보를, 귀속 계정의\n{@link IStudioAccount.code 코드}로 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/enterprises/{accountCode}/teams/{teamCode}/companions": {
      "patch": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "teamCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 팀의 {@link IStudioEnterpriseTeam.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 구성원의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioEnterpriseTeamCompanion.ISummary"
                }
              }
            }
          }
        },
        "summary": "기업 팀 구성원들의 요약정보 리스트 조회",
        "description": "기업 팀 구성원들의 요약정보 리스트 조회.\n\n특정 {@link IStudioEnterprise 기업}의 {@link IStudioEnterpriseTeam 팀}에\n소속된 {@link IStudioEnterpriseTeamCompanion.ISummary 구성원의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/enterprises/{accountCode}/teams/{teamCode}/companions/{id}": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "teamCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 팀의 {@link IStudioEnterpriseTeam.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 구성원의 {@link IStudioEnterpriseTeamCompanion.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "구성원의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion"
                }
              }
            }
          }
        },
        "summary": "구성원 상세 정보 조회하기",
        "description": "구성원 상세 정보 조회하기.\n\n{@link IStudioEnterprise 기업}에서 구성한\n{@link IStudioEnterpriseTeam 팀}에 소속된 특정\n{@link IStudioEnterpriseTeamCompanion 구성원}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/enterprises/{accountCode}/teams": {
      "patch": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioEnterpriseTeam.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 팀의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioEnterpriseTeam.ISummary"
                }
              }
            }
          }
        },
        "summary": "기업 팀들의 요약정보 리스트 조회",
        "description": "기업 팀들의 요약정보 리스트 조회.\n\n특정 {@link IStudioEnterprise 기업}에 구성된 모든\n{@link IStudioEnterpriseTeam.ISummary 팀의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/enterprises/{accountCode}/teams/{id}": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 팀의 {@link IStudioEnterpriseTeam.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "팀의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseTeam"
                }
              }
            }
          }
        },
        "summary": "팀 상세 정보 조회하기",
        "description": "팀 상세 정보 조회하기.\n\n{@link IStudioEnterprise 기업}에서 구성한 특정\n{@link IStudioEnterpriseTeam 팀}의 정보를 상세 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/enterprises/{accountCode}/teams/{code}/get": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 기업 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 팀의 {@link IStudioEnterpriseTeam.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "팀의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioEnterpriseTeam"
                }
              }
            }
          }
        },
        "summary": "팀 상세 정보 조회하기 by 코드",
        "description": "팀 상세 정보 조회하기 by 코드.\n\n{@link IStudioEnterprise 기업}에서 구성한 특정\n{@link IStudioEnterpriseTeam 팀}의 상세 정보를 해당 팀의 코드 (`code`) 를\n이용하여 상세 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/meta/chat/sessions/{sessionId}/connections": {
      "patch": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 채팅 세션의 {@link IStudioMetaChatSession.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioMetaChatSessionConnection.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 접속 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioMetaChatSessionConnection"
                }
              }
            }
          }
        },
        "summary": "Meta LLM 채팅 세션에의 접속 정보 리스트 조회",
        "description": "Meta LLM 채팅 세션에의 접속 정보 리스트 조회.\n\n{@link IStudioMetaChatSession 채팅 세션}에 대한 {@link IHubCustomer 고객}의\nWebsocket 접속 정보들을 일괄 조회한다.\n\n리턴되는 {@link IStudioMetaChatSessionConnection}들은 {@link IPage 페이징}\n처리가 되어있다. 그리고 요청 정보\n{@link IStudioMetaChatSessionConnection.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를\n{@link IStudioMetaChatSessionConnection.IRequest.limit 제한}하거나\n{@link IStudioMetaChatSessionConnection.IRequest.search 검색}하거나,\n{@link IStudioMetaChatSessionConnection.IRequest.sort 정렬 조건}을\n임의로 설정하거나 할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/meta/chat/sessions/{sessionId}/connections/{id}": {
      "get": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 채팅 세션의 {@link IStudioMetaChatSession.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 접속의 {@link IStudioMetaChatSessionConnection.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "접속 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioMetaChatSessionConnection"
                }
              }
            }
          }
        },
        "summary": "Meta LLM 채팅 세션에의 접속 정보 개별 조회",
        "description": "Meta LLM 채팅 세션에의 접속 정보 개별 조회.\n\n{@link IStudioMetaChatSession 채팅 세션}에 대한\n{@link IHubCustomer 고객}의 Websocket 접속 정보\n{@link IStudioMetaChatSessionConnection} 를 개별 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/meta/chat/sessions/{sessionId}/messages": {
      "patch": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 채팅 세션의 {@link IStudioMetaChatSession.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioMetaChatSessionMessage.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 메시지 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioMetaChatSessionMessageIStudioMetaChatSessionMessageData"
                }
              }
            }
          }
        },
        "summary": "채팅 세션 메시지 리스트 조회",
        "description": "채팅 세션 메시지 리스트 조회.\n\n{@link IStudioMetaChatSession 채팅 세션}에서 발생한 모든\n{@link IStudioMetaChatSessionMessage 메시지}들의 리스트를 조회한다.\n\n만일 메시지가 발생한 귀속 {@link IStudioMetaChatSessionConnection 접속 단위}를\n제한하고 싶다면, {@link IStudioMetaChatSessionMessage.IRequest.connection_id}\n를 설정해주면 된다.\n\n그리고 리턴되는 {@link IStudioMetaChatSessionMessage}들은 {@link IPage 페이징}\n처리가 되어있다. 그리고 요청 정보\n{@link IStudioMetaChatSessionMessage.IRequest}를 어떻게 설정하냐에 따라,\n각 페이지 당 레코드 수를\n{@link IStudioMetaChatSessionMessage.IRequest.limit 제한}하거나,\n{@link IStudioMetaChatSessionMessage.IRequest.search 검색}하거나,\n{@link IStudioMetaChatSessionMessage.IRequest.sort 정렬 조건}을\n임의로 지정하거나 할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/meta/chat/sessions/{sessionId}/messages/{id}": {
      "get": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 귀속 채팅 세션의 {@link IStudioMetaChatSession.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 메시지의 {@link IStudioMetaChatSessionMessage.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "메시지 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioMetaChatSessionMessageIStudioMetaChatSessionMessageData"
                }
              }
            }
          }
        },
        "summary": "채팅 세션 메시지 상세 조회",
        "description": "채팅 세션 메시지 상세 조회.\n\n{@link IStudioMetaChatSession 채팅 세션}에서 발생한 특정\n{@link IStudioMetaChatSessionMessage 메시지}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/meta/chat/sessions": {
      "patch": {
        "tags": [
          "Meta"
        ],
        "parameters": [],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioMetaChatSession.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 세션 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioMetaChatSession"
                }
              }
            }
          }
        },
        "summary": "채팅 세션 목록 조회",
        "description": "채팅 세션 목록 조회.\n\n채팅 세션 {@link IStudioMetaChatSession} 리스트를 조회한다.\n\n리턴되는 {@link IStudioMetaChatSession}들은 {@link IPage 페이징} 처리가\n되어있다. 그리고 요청 정보 {@link IStudioMetaChatSession.IRequest}를\n어떻게 설정하냐에 따라, 각 페이지 당 레코드 수를\n{@link IStudioMetaChatSession.IRequest.limit 제한}하거나, 특정 조건을\n만족하는 세션만을 {@link IStudioMetaChatSession.IRequest.search 검색}하거나,\n세션들의 {@link IStudioMetaChatSession.IRequest.sort 정렬 조건}을 임의로\n지정할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/meta/chat/sessions/{id}": {
      "get": {
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 채팅 세션의 {@link IStudioMetaChatSession.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "채팅 세션 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioMetaChatSession"
                }
              }
            }
          }
        },
        "summary": "채팅 세션 개별 조회하기",
        "description": "채팅 세션 개별 조회하기.\n\n타깃 채팅 세션의 상세 정보 {@link IStudioMetaChatSession}을 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepository.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 저장소 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepository.ISummary"
                }
              }
            }
          }
        },
        "summary": "저장소 요약정보 리스트 조회",
        "description": "저장소 요약정보 리스트 조회.\n\n본 스튜디오 시스템에 존재하는 모든\n{@link IStudioRepository.ISummary 저장소의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n단 {@link IStudioRepository.IRequest 페이지 요청 정보}를 구성하며, 조회\n대상의 범위를 특정 {@link IStudioAccount 계정}에 국한할 수 있다.\n\n그리고 귀속 계정의 코드 *accountCode* 를 `null` 값으로 둘 수 있는데, 이러하면\n해당 {@link IHubCustommer 고객}이 접근 가능한 모든 저장소를, 귀속 계정에\n관계없이 모두 조회한다. 반대로 말하면, *accountCode* 가 `null` 이 아닌 이상,\n해당 계정에 귀속된 저장소만을 조회한다. 그리고 이는\n{@link IStudioRepository.IRequest.ISearch.account.code} 와 차이가 있는데,\n검색에 사용하는 계정 코드는 유사 검색이며, 본 path 파라미터에 사용하는 코드는\n완전 일치 검색이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{id}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 저장소의 {@link IStudioRepository.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "저장소 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepository"
                }
              }
            }
          }
        },
        "summary": "저장소 상세 정보 조회하기",
        "description": "저장소 상세 정보 조회하기.\n\n특정 {@link IStudioRepository 저장소}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{code}/get": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 저장소의 {@link IStudioRepository.code}"
          }
        ],
        "responses": {
          "200": {
            "description": "저장소 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepository"
                }
              }
            }
          }
        },
        "summary": "저장소 상세 정보 조회하기 (by code)",
        "description": "저장소 상세 정보 조회하기 (by code).\n\n특정 {@link IStudioRepository 저장소}의 상세 정보를,\n귀속 {@link IStudioAccount 계정}과 저장소의 코드 (`code`) 를 이용하여 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/accesses": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryAccess.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 접근 권한의 요약정보 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryAccess.ISummary"
                }
              }
            }
          }
        },
        "summary": "저장소 접근 권한들의 요약정보 리스트 조회",
        "description": "저장소 접근 권한들의 요약정보 리스트 조회.\n\n특정 {@link IStudioRepository 저장소}에 부여된 모든\n{@link IStudioRepositoryAccess.ISummary 접근 권한의 요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/accesses/{id}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 접근 권한의 {@link IStudioRepositoryAccess.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "접근 권한의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryAccess"
                }
              }
            }
          }
        },
        "summary": "접근 권한 상세 정보 조회하기",
        "description": "접근 권한 상세 정보 조회하기.\n\n특정 {@link IStudioRepositoryAccess 접근 권한}의 상세 정보를 조회한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/buckets": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보 + 폴더 경로",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryBucket.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 버킷 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryBucket.ISummary"
                }
              }
            }
          }
        },
        "summary": "특정 커밋 기준의 버킷의 요약정보 리스트 조회",
        "description": "특정 커밋 기준의 버킷의 요약정보 리스트 조회.\n\n특정 {@link IStudioRepositoryCommit 커밋}을 기준으로 한,\n{@link IStudioRepositoryBucket.ISummary 버킷의 요약 정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n참고로 {@link IStudioRepositoryBucket.IRequest 페이지 요청 정보}를 구성하며,\n대상 {@link IStudioRepositoryDirectory 폴더 경로}를 지정할 수 있다. 또한\n폴더 경로에 구애받지 않고, 커밋 기준 모든 버킷들을 조회할 수도 있는데, 대신\n이 때는 폴더 정보를 일절 불러오지 않는다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/buckets/{id}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 버킷의 {@link IStudioRepositoryBucket.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "버킷의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryBucket"
                }
              }
            }
          }
        },
        "summary": "버킷의 상세 정보를 조회한다",
        "description": "버킷의 상세 정보를 조회한다.\n\n특정 {@link IStudioRepositoryCommit 커밋}을 기준으로 한,\n{@link IStudioRepositoryBucket 버킷}의 상세 정보를 불러온다.\n\n단 조회 대상이 {@link IStudioRepositoryDirectory 폴더}인 경우, 해당 폴더에\n귀속된 모든 버킷들의 정보를 불러오는데, 이 때 버킷의 수가 많아 데이터의 양\n자체가 방대할 수도 있다. 이에 가급 폴더의 상세 정보를 불러오는 것은 지양하고,\n대신 {@link index}를 함수를 호출하도록 하자.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/buckets/get": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          }
        ],
        "requestBody": {
          "description": "대상 버킷의 경로 (랩핑됨)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryBucket.IPath"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "버킷의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryBucket"
                }
              }
            }
          }
        },
        "summary": "버킷의 상세 정보 조회 by path",
        "description": "버킷의 상세 정보 조회 by path.\n\n특정 {@link IStudioRepositoryCommit 커밋}을 기준으로 한\n{@link IStudioRepositoryBucket 버킷}의 상세 정보를, 그것의 경로\n{@link IStudioRepositoryBucket.path} 를 통해 불러온다.\n\n단 조회 대상이 {@link IStudioRepositoryDirectory 폴더}인 경우, 해당 폴더에\n귀속된 모든 버킷들의 정보를 불러오는데, 이 때 버킷의 수가 많아 데이터의 양\n자체가 방대할 수도 있다. 이에 가급 폴더의 상세 정보를 불러오는 것은 지양하고,\n대신 {@link index}를 함수를 호출하도록 하자.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/commits": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryCommit.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 커밋 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryCommit.ISummary"
                }
              }
            }
          }
        },
        "summary": "저장소 내 커밋의 요약정보 리스트 조회",
        "description": "저장소 내 커밋의 요약정보 리스트 조회.\n\n{@link IStudioRepository 저장소} 내의\n{@link IStudioRepositoryCommit.ISummary 커밋의  요약정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n참고로 {@link IHubCustomer 고객}이 현재 수정 중으로써\n{@link IStudioRepositoryCommit.archived_at 아직 기록되지 아니한 커밋}의\n경우, 오직 해당 커밋을 생성한 고객만이 이를 열람할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/commits/{id}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "커밋의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryCommit"
                }
              }
            }
          }
        },
        "summary": "커밋의 상세 정보 조회",
        "description": "커밋의 상세 정보 조회.\n\n{@link IStudioRepository 저장소} 내 특정\n{@link IStudioRepositoryCommit 커밋}의 상세 정보를 불러온다.\n\n참고로 {@link IHubCustomer 고객}이 현재 수정 중으로써\n{@link IStudioRepositoryCommit.archived_at 아직 기록되지 아니한 커밋}의\n경우, 오직 해당 커밋을 생성한 고객만이 이를 열람할 수 있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/histories": {
      "patch": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "워크플로우 실행 내역 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioWorkflowHistory.ISummary"
                }
              }
            }
          }
        },
        "summary": "워크플로우 실행 내역 요약 정보 일괄 조회",
        "description": "워크플로우 실행 내역 요약 정보 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/histories/details": {
      "patch": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "워크플로우 실행 내역 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioWorkflowHistory"
                }
              }
            }
          }
        },
        "summary": "워크플로우 실행 내역 상세 정보 일괄 조회",
        "description": "워크플로우 실행 내역 상세 정보 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{workflowId}/histories/{id}": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우 실행 내역의 {@link IStudioWorkflowHistory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "워크플로우 실행 상세 내역",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowHistory"
                }
              }
            }
          }
        },
        "summary": "워크플로우 실행 내역 상세 조회",
        "description": "워크플로우 실행 내역 상세 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우 실행 내역의 {@link IStudioWorkflowHistory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "워크플로우 실행 중단",
        "description": "워크플로우 실행 중단.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/commits/workflows/standalone/{workflowId}": {
      "get": {
        "deprecated": true,
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id }"
          }
        ],
        "responses": {
          "200": {
            "description": "워크플로우 + 커밋 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowStandalone"
                }
              }
            }
          }
        },
        "summary": "워크플로우 단독 조회하기",
        "description": "워크플로우 단독 조회하기.\n\n특정 {@link IStudioRepository 저장소}로부터,\n가장 마지막 {@link IStudioRepositoryCommit 커밋}의\n{@link IStudioWorkflow 워크플로우} 파일을 단독 조회하는 API 함수.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/commits/workflows/standalone/get": {
      "patch": {
        "deprecated": true,
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "워크플로우 경로",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflowStandalone.IPath"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "워크플로우 + 커밋 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowStandalone"
                }
              }
            }
          }
        },
        "summary": "워크플로우 단독 조회하기 by get",
        "description": "워크플로우 단독 조회하기 by get.\n\n특정 {@link IStudioRepository 저장소}로부터,\n가장 마지막 {@link IStudioRepositoryCommit 커밋}의\n{@link IStudioWorkflow 워크플로우} 파일을 경로 기준 단독 조회하는 API 함수.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{id}/compile": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id}"
          }
        ],
        "responses": {
          "201": {
            "description": "컴파일된 프로그램의 URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        },
        "summary": "워크플로우 문서 임시 컴파일하기",
        "description": "워크플로우 문서 임시 컴파일하기.\n\n현행 {@link IStudioWorkflow 워크플로우} 문서만을 대상으로, 임시 컴파일한다.\n\n본래 저장소에서 {@link IStudioWorkflowRepositoryRelease 배포 프로그램}을\n빌드할 때에도 이러한 컴파일이 이루어진다. 본 API 는 그것과 별개로써, 개별\n워크플로우 문서와 그곳에서 `import` 된 일부 스크립트 파일들만을 대상으로, 부분\n컴파일을 하는 것이다.\n\n주 용도는 개별 워크플로우의 시험 동작 등을 위함이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{id}/execute": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id}"
          }
        ],
        "requestBody": {
          "description": "파라미터 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflow.IExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "워크플로우 함수 실행 결과로써의 리턴값",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IExecutionResultany"
                }
              }
            }
          }
        },
        "summary": "워크플로우 함수 실행하기",
        "description": "워크플로우 함수 실행하기.\n\n워크플로우 함수를 실행하고, 그것의 리턴값을 기다려 반환한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{id}/proceed": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id}"
          }
        ],
        "requestBody": {
          "description": "파라미터 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflow.IExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "워크플로우 함수 실행 결과로써의 리턴값",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioWorkflowHistory.ISummary"
                }
              }
            }
          }
        },
        "summary": "워크플로우 함수 진행하기",
        "description": "워크플로우 함수 진행하기.\n\n워크플로우 함수를 실행하되, 그것의 리턴값을 기다리지 않고, 다만 실행 결과\n내역에 해당하는 {@link IStudioWorkflowHistory.ISummary} 를 반환한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/commits/{commitId}/workflows/{id}/simulate": {
      "post": {
        "tags": [
          "Workflow"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true,
            "description": " 대상 커밋의 {@link IStudioRepositoryCommit.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 워크플로우의 {@link IStudioWorkflow.id}"
          }
        ],
        "requestBody": {
          "description": "디버깅 여부",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioWorkflow.ISimulate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "TypeScript 파일들의 Dictionary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recordstringstring"
                }
              }
            }
          }
        },
        "summary": "컴파일 시뮬레이션",
        "description": "컴파일 시뮬레이션.\n\n워크플로우 문서를 바로 컴파일하지 않고, 컴파일시 생겨나는 TypeScript\n파일들을 미리 확인함으로써, 그 과정을 시뮬레이션 해 본다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/releases": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          }
        ],
        "requestBody": {
          "description": "페이지 및 검색 요청 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryRelease.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "페이징 처리된 배포 프로그램 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryRelease.ISummary"
                }
              }
            }
          }
        },
        "summary": "저장소 내 배포 프로그램의 요약정보 리스트 조회",
        "description": "저장소 내 배포 프로그램의 요약정보 리스트 조회.\n\n특정 {@link IStudioRepository 저장소} 내의 모든\n{@link IStudioRepositoryRelease 배포 프로그램의 요약 정보}들을\n{@link IPage 페이징 처리}하여 불러온다.\n\n배포 프로그램의 요약 정보에는, 배포 프로그램의 버전과 일시 및 문서 정보 정도가\n들어있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/releases/{id}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 배포 프로그램의 {@link IStudioRepositoryRelease.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "배포 프로그램의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryRelease"
                }
              }
            }
          }
        },
        "summary": "저장소 내 배포 프로그램의 상세 정보 조회",
        "description": "저장소 내 배포 프로그램의 상세 정보 조회.\n\n{@link IStudioRepository 저장소} 내 특정\n{@link IStudioRepositoryRelease 배포 프로그램}의 상세 정보를 불러온다.\n\n배포 프로그램의 상세 정보에는, 해당 프로그램에서 `export` 된 모든\n{@link IStudioRepositoryReleaseNode 함수 노드}들과, 이들의 메타 타입 정보가\n들어있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/releases/{version}/get": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 대상 배포 프로그램의 {@link IStudioRepositoryRelease.version}"
          }
        ],
        "responses": {
          "200": {
            "description": "배포 프로그램의 상세 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryRelease"
                }
              }
            }
          }
        },
        "summary": "저장소 내 배포 프로그램의 상세 정보 조회 by version",
        "description": "저장소 내 배포 프로그램의 상세 정보 조회 by version.\n\n{@link IStudioRepository 저장소} 내 특정\n{@link IStudioRepositoryRelease 배포 프로그램}의 상세 정보를,\n해당 릴리즈의 버전명으로 조회한다.\n\n배포 프로그램의 상세 정보에는, 해당 프로그램에서 `export` 된 모든\n{@link IStudioRepositoryReleaseNode 함수 노드}들과, 이들의 메타 타입 정보가\n들어있다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/releases/{id}/swagger": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 배포 프로그램의 {@link IStudioRepositoryRelease.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "스웨거 문서",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISwagger"
                }
              }
            }
          }
        },
        "summary": "배포 프로그램을 스웨거 문서로 조회한다",
        "description": "배포 프로그램을 스웨거 문서로 조회한다.\n\n본 스튜디오 시스템은 {@link IStudioRepository 저장소}에서\n{@link IStudioRepositoryRelease 배포한 프로그램}의 각\n{@link IStudioRepositoryReleaseNode 노드 함수}들을, 개개별별 Rest API 형태로도\n제공한다. 본 함수는 이러한 Rest API 의 스펙들을 스웨거 문서를 열람할 수 있는\n함수이다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{id}/execute": {
      "post": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 배포 프로그램의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 함수 노드의 {@link IStudioRepositoryReleaseNode.id}"
          }
        ],
        "requestBody": {
          "description": "파라미터 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.IExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "대상 함수 노드의 실행 결과로써의 리턴값",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IExecutionResultany"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 실행하기",
        "description": "릴리즈 노드 실행하기.\n\n릴리즈 노드를 실행하고, 그것의 리턴값을 기다려 반환한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{id}/proceed": {
      "post": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 배포 프로그램의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 함수 노드의 {@link IStudioRepositoryReleaseNode.id}"
          }
        ],
        "requestBody": {
          "description": "파라미터 입력 정보",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.IExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "대상 함수 노드의 실행 결과로써의 리턴값",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory.ISummary"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 진행하기",
        "description": "릴리즈 노드 진행하기.\n\n릴리즈 노드를 실행하되, 그것의 리턴값을 기다리지 않고, 다만 실행 결과\n내역에 해당하는 {@link IStudioRepositoryReleaseNodeHistory.ISummary} 를\n반환한다.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{nodeId}/histories": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 릴리즈의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 노드의 {@link IStudioRepositoryReleaseNode.id }"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "릴리즈 노드 내역 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryReleaseNodeHistory.ISummary"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 실행 내역 요약 정보 일괄 조회",
        "description": "릴리즈 노드 실행 내역 요약 정보 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{nodeId}/histories/details": {
      "patch": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 릴리즈의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 노드의 {@link IStudioRepositoryReleaseNode.id }"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory.IRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "릴리즈 노드 내역 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IPageIStudioRepositoryReleaseNodeHistory"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 실행 내역 상세 정보 일괄 조회",
        "description": "릴리즈 노드 실행 내역 상세 정보 일괄 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/sellers/repositories/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{nodeId}/histories/{id}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 계정의 {@link IStudioAccount.code }"
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": " 귀속 저장소의 {@link IStudioRepository.code }"
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 릴리즈의 {@link IStudioRepositoryRelease.id }"
          },
          {
            "name": "nodeId",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 노드의 {@link IStudioRepositoryReleaseNode.id }"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": " 대상 릴리즈 노드 실행 내역의 {@link IStudioRepositoryReleaseNodeHistory.id}"
          }
        ],
        "responses": {
          "200": {
            "description": "릴리즈 노드 실행 상세 내역",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory"
                }
              }
            }
          }
        },
        "summary": "릴리즈 노드 실행 내역 상세 조회",
        "description": "릴리즈 노드 실행 내역 상세 조회.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/chat/{accountCode}/{repositoryCode}/build/new-session": {
      "post": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "새로 생성된 세션의 uuid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IChatCreateSessionResponse"
                }
              }
            }
          }
        },
        "summary": "새로운 build 세션 생성",
        "description": "새로운 build 세션 생성.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/chat/{accountCode}/{repositoryCode}/commits/{commitId}/chatbot/{workflowId}/new-session": {
      "post": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "oneOf": [
                {
                  "const": "latest"
                },
                {
                  "type": "string",
                  "format": "uuid"
                }
              ]
            },
            "required": true
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "새로 생성된 세션의 uuid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IChatCreateSessionResponse"
                }
              }
            }
          }
        },
        "summary": "새로운 챗봇 세션 생성 (추출 전 챗봇)",
        "description": "새로운 챗봇 세션 생성 (추출 전 챗봇).",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/chat/{accountCode}/{repositoryCode}/releases/{releaseId}/nodes/{id}": {
      "post": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "releaseId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "새로 생성된 세션의 uuid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IChatCreateSessionResponse"
                }
              }
            }
          }
        },
        "summary": "새로운 챗봇 세션 생성 (추출된 챗봇)",
        "description": "새로운 챗봇 세션 생성 (추출된 챗봇).",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/chat/{accountCode}/build/get-sessions": {
      "get": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "현 유저의 채팅 세션 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IChatGetSessionsResponse"
                }
              }
            }
          }
        },
        "summary": "유저의 build 채팅 세션 목록을 가져옴",
        "description": "유저의 build 채팅 세션 목록을 가져옴.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/chat/{accountCode}/chatbot/get-sessions": {
      "get": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "현 유저의 채팅 세션 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IChatGetSessionsResponse"
                }
              }
            }
          }
        },
        "summary": "유저의 chatbot 채팅 세션 목록을 가져옴",
        "description": "유저의 chatbot 채팅 세션 목록을 가져옴.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/chat/{accountCode}/{repositoryCode}/get-session": {
      "get": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "chatSessionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "가져올 채팅 세션의 uuid"
            },
            "required": true,
            "description": "가져올 채팅 세션의 uuid"
          },
          {
            "name": "chatSubSessionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "가져올 채팅 세션의 서브 세션 id (없을 수도 있음)"
            },
            "required": false,
            "description": "가져올 채팅 세션의 서브 세션 id (없을 수도 있음)"
          }
        ],
        "responses": {
          "200": {
            "description": "해당 채팅 세션의 상세정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IChatGetSessionResponse"
                }
              }
            }
          }
        },
        "summary": "유저의 특정 세션의 상세 정보를 가져옴 (메세지 목록 포함)",
        "description": "유저의 특정 세션의 상세 정보를 가져옴 (메세지 목록 포함).",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/chat/{accountCode}/{repositoryCode}/send-message": {
      "post": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IChatMessageRequest.ICreate"
                  },
                  {
                    "$ref": "#/components/schemas/IChatActionRequest.ICreate"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "user_message": "#/components/schemas/IChatMessageRequest.ICreate",
                    "user_actions": "#/components/schemas/IChatActionRequest.ICreate"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "응답 메세지의 uuid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IChatResponseId"
                }
              }
            }
          }
        },
        "summary": "채팅 메세지 전송",
        "description": "채팅 메세지 전송.\n해당 요청에 대한 응답은 uuid로 돌려주며 `get-message`를 통해 응답 메세지 생성 상태를 확인할 수 있음.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/chat/{accountCode}/{repositoryCode}/get-message": {
      "get": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "chatMessageId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "생성된 응답 메세지의 uuid"
            },
            "required": true,
            "description": "생성된 응답 메세지의 uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "응답 메세지 상태",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IChatResponseStatusResponse"
                }
              }
            }
          }
        },
        "summary": "채팅 메세지 생성 상태 확인",
        "description": "채팅 메세지 생성 상태 확인.\nagent의 응답이 오래 걸릴 것을 대비하여 사용되며 기본적인 기능들이 완료된 이후에 websocket과 같은 프로토콜로 업데이트 예정.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/chat/{accountCode}/{repositoryCode}/get-presigned-url": {
      "post": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "fileName",
            "in": "query",
            "schema": {
              "type": "string",
              "title": "유저가 업로드하려는 파일의 이름",
              "description": "유저가 업로드하려는 파일의 이름."
            },
            "required": true,
            "title": "유저가 업로드하려는 파일의 이름",
            "description": "유저가 업로드하려는 파일의 이름."
          }
        ],
        "responses": {
          "201": {
            "description": "응답 메세지 상태",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IChatGetPresignedUrlResponse"
                }
              }
            }
          }
        },
        "summary": "workflow 실행에 필요한 파일을 업로드할 S3 presigned url 생성",
        "description": "workflow 실행에 필요한 파일을 업로드할 S3 presigned url 생성.\nNote: 나중에는 repository의 파일 업로드 기능을 사용하던 해서 좀 더 범용적인 방법으로 변경될 예정 (워크플로우 실행을 위한 파일들은 채팅 말고도 필요할 것이기 때문에.) 현재는",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/studio/chat/{accountCode}/{repositoryCode}/commits/{commitId}/chatbot/{workflowId}/autofill/{statementId}": {
      "post": {
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "accountCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "repositoryCode",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "commitId",
            "in": "path",
            "schema": {
              "const": "latest"
            },
            "required": true
          },
          {
            "name": "workflowId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "statementId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IChatAutoFillRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "자동완성된 필드의 값",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IChatAutofillResponse"
                }
              }
            }
          }
        },
        "summary": "workflow의 특정 필드를 LLM에게 요청하여 자동완성을 받음",
        "description": "workflow의 특정 필드를 LLM에게 요청하여 자동완성을 받음.\nNOTE: 나중에 LLM이 더 많은 일을 하며 더 범용적인 인터페이스로 변경될 수도 있지만 현재는 당장의 use case에 맞춰 구현.",
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "IHubMemberElite.ICreate": {
        "type": "object",
        "properties": {
          "member_id": {
            "type": "string",
            "format": "uuid",
            "title": "엘리트 회원으로 승급시킬 회원의 {@link IHubMember.id}",
            "description": "엘리트 회원으로 승급시킬 회원의 {@link IHubMember.id}."
          },
          "reason": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "엘리트 회원으로 승급한 이유",
            "description": "엘리트 회원으로 승급한 이유.\n\n null 일수 있음."
          }
        },
        "required": [
          "member_id",
          "reason"
        ],
        "description": "엘리트 회원의 입력 정보."
      },
      "IHubMemberElite": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "elite",
            "title": "Discriminated Union 타입의 식별자",
            "description": "Discriminated Union 타입의 식별자."
          },
          "member": {
            "$ref": "#/components/schemas/IHubMember.IInvert",
            "title": "엘리트 회원 으로 승급된 회원의 역정보",
            "description": "엘리트 회원 으로 승급된 회원의 역정보."
          },
          "administrator": {
            "$ref": "#/components/schemas/IHubAdministrator.IInvert",
            "title": "승급한 관리자의 역정보",
            "description": "승급한 관리자의 역정보."
          },
          "reason": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "승급 사유",
            "description": "승급 사유.\n\n`null` 이면, 관리자가 승급시 사유를 기입하지 않았음을 뜻한다."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "승급 일시",
            "description": "승급 일시."
          },
          "deleted_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "삭제 일시",
            "description": "삭제 일시."
          }
        },
        "required": [
          "id",
          "type",
          "member",
          "administrator",
          "reason",
          "created_at",
          "deleted_at"
        ],
        "description": "일반 회원 계정중 엘리트 회원.\n\n`IHubMemberElite` 는 {@link IHubMember 고객}이 본 시스템에 엘리트 회원으로 승급시 추가되는 엔티티이다.\n\n참고로 관리자만 엘리트 회원을 승급시킬 수 있다."
      },
      "IHubMember.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "member",
            "title": "Discriminated Union 타입의 식별자",
            "description": "Discriminated Union 타입의 식별자."
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubMemberEmail"
            },
            "minItems": 1,
            "title": "이메일 리스트",
            "description": "이메일 리스트."
          },
          "nickname": {
            "type": "string",
            "title": "닉네임",
            "description": "닉네임."
          },
          "profile_background_color": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "primary"
              },
              {
                "const": "gray"
              },
              {
                "const": "inspired_red"
              },
              {
                "const": "apricot"
              },
              {
                "const": "yellow"
              },
              {
                "const": "green"
              },
              {
                "const": "blue"
              },
              {
                "const": "violet"
              },
              {
                "const": "pink"
              }
            ],
            "title": "프로필 배경 색",
            "description": "프로필 배경 색."
          },
          "account": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioAccount.IInvert"
              }
            ],
            "title": "스튜디오 계정",
            "description": "스튜디오 계정."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "id",
          "type",
          "emails",
          "nickname",
          "profile_background_color",
          "account",
          "created_at"
        ],
        "description": "일반 회원의 역 참조 정보.\n\n본 정보는 관리자 및 판매자의 역 참조 정보에서 사용된다.\n\n- {@link IHubAdministrator.IInvert}\n- {@link IHubSeller.IInvert}"
      },
      "IHubMemberEmail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "value": {
            "type": "string",
            "format": "email",
            "title": "이메일 주소",
            "description": "이메일 주소."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "id",
          "value",
          "created_at"
        ],
        "description": "회원의 이메일 주소.\n\n본 허브 시스템은 한 명의 {@link IHubMember 회원}이 복수의 이메일 계정을 가질 수\n있도록 한다.\n\n시장 참여자들이 기업 단위가 많고, 다시금 여러 기업에 소속 (프리랜서) 되어 활동할\n여지가 있기 때문이다."
      },
      "IStudioAccount.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "code": {
            "type": "string",
            "title": "식별자 코드",
            "description": "식별자 코드."
          },
          "created_at": {
            "type": "string",
            "title": "계정 생성 일시",
            "description": "계정 생성 일시."
          }
        },
        "required": [
          "id",
          "code",
          "created_at"
        ],
        "description": "계정의 역 참조 정보.\n\n계정의 소유자 정보가 없는, 즉 소유자로부터의 역 참조되는 정보."
      },
      "IHubAdministrator.IInvert": {
        "type": "object",
        "properties": {
          "type": {
            "const": "administrator",
            "title": "Discriminated union 타입의 구분자",
            "description": "Discriminated union 타입의 구분자."
          },
          "member": {
            "$ref": "#/components/schemas/IHubMember.IInvert",
            "title": "일반 회원 정보",
            "description": "일반 회원 정보.\n\n관리자 회원으로 가입하기 위해서는, 먼저 일반 회원으로 가입해야 한다."
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer.IInvert",
            "title": "고객 정보",
            "description": "고객 정보.\n\n본 시스템에서는 고객을 접속 단위로 관리한다.\n\n즉, 현재의 관리자 회원에 대한 접속 정보."
          },
          "citizen": {
            "$ref": "#/components/schemas/IHubCitizen",
            "title": "시민 인증 정보",
            "description": "시민 인증 정보.\n\n관리자는 반드시 시민 인증을 완료해야 한다."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "관리자 회원 가입 일시",
            "description": "관리자 회원 가입 일시."
          }
        },
        "required": [
          "type",
          "member",
          "customer",
          "citizen",
          "id",
          "created_at"
        ],
        "description": "관리자의 역 참조 정보.\n\n관리자 정보를 {@link IHubCustomer.member} -> {@link IHubMember.administrator}\n순으로 열거하지 않고, 그 반대로 열거한 자료구조. 관리자를 최상위 객체로 시작하여,\n시민과 일반 회원 및 고객 정보를 역으로 참조해나간다."
      },
      "IHubCustomer.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "channel": {
            "$ref": "#/components/schemas/IHubChannel",
            "title": "귀속 채널 정보",
            "description": "귀속 채널 정보.\n\n어느 채널의 고객인가?"
          },
          "external_user": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubExternalUser"
              }
            ],
            "title": "외부 사용자 정보",
            "description": "외부 사용자 정보.\n\n외부 서비스로부터 접속한 고객의 경우에 해당."
          },
          "href": {
            "type": "string",
            "format": "uri",
            "title": "접속 주소",
            "description": "접속 주소.\n\n{@link window.location.href} 와 동일한 값."
          },
          "referrer": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "string",
                "maxLength": 0
              }
            ],
            "title": "유입 주소",
            "description": "유입 주소.\n\n{@link window.document.referrer} 와 동일한 값."
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ],
            "title": "접속 IP 주소",
            "description": "접속 IP 주소."
          },
          "readonly": {
            "type": "boolean",
            "title": "읽기 전용 여부",
            "description": "읽기 전용 여부."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시, 접속 일시와 동의어",
            "description": "레코드 생성 일시, 접속 일시와 동의어."
          }
        },
        "required": [
          "id",
          "channel",
          "external_user",
          "href",
          "referrer",
          "ip",
          "readonly",
          "created_at"
        ],
        "description": "고객의 역 참조 정보.\n\n본 정보는 관리자 및 판매자의 역 참조 정보에서 사용된다.\n\n- {@link IHubAdministrator.IInvert}\n- {@link IHubSeller.IInvert}"
      },
      "IHubChannel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "기본키"
          },
          "code": {
            "type": "string",
            "description": "삭별자 코드"
          },
          "name": {
            "type": "string",
            "description": "채널 명"
          },
          "exclusive": {
            "type": "boolean",
            "description": "배타성 여부\n\n이 값이 True일 경우 해당 채널은 단절되, 고객의 정보 공유하지 않음."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "레코드 생성일시"
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "exclusive",
          "created_at"
        ],
        "description": "허브 채널 정보.\n\n`IHubChannel` 은 API 중개 시장에서의 유통 채널을 형상화한 개념으로써, 본 시스템에서\n채널의 다름이란, 곧 다른 사이트 내지 어플리케이션이라고 보면 된다. 따라서\nWrtn Generative Hub (https://hub.wrtn.com, 가칭) 또한 하나의 채널이다.\n\n> 기본 코드는 `wrtn`\n\n물론, 현재 Generative Hub 의 채널은 오직 하나이지만, 앞으로의 확장성을 위해 미리\n준비해두는 것. {@link IHubExternalUser} 의 경우처럼, 미래에 있을지도 모를 파트너쉽\n등에 대비해 미리 설계해 둔 개념이다.\n\n참고로 뤼튼이 Generative Hub 외에 다른 브랜드 이름으로 또다른 사이트 (어플리케이션)\n을 런칭하거나, 뤼튼에서 임베드용 (<iframe>) 간이 허브 사이트를 런칭하여 파트너사들에게\n뿌리는 경우 또한, 새로운 채널이 필요하다."
      },
      "IHubExternalUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubCitizen"
              }
            ],
            "title": "시민 인증 정보",
            "description": "시민 인증 정보."
          },
          "application": {
            "type": "string",
            "title": "외부 서비스의 식별자 코드",
            "description": "외부 서비스의 식별자 코드."
          },
          "uid": {
            "type": "string",
            "title": "사용자 식별자 키",
            "description": "사용자 식별자 키."
          },
          "nickname": {
            "type": "string",
            "title": "외부 서비스 상에서의 유저 닉네임",
            "description": "외부 서비스 상에서의 유저 닉네임."
          },
          "data": {
            "title": "외부 서비스로부터의 부가 정보",
            "description": "외부 서비스로부터의 부가 정보."
          },
          "content": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubExternalUserContent"
              }
            ],
            "title": "외부 사용자 정보 상세 정보",
            "description": "외부 사용자 정보 상세 정보.\n\nWRTN SSO에서 받아올경우만 사용."
          },
          "member_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "회원 아이디",
            "description": "회원 아이디.\n\nExternalUser로 회원 가입 또는 로그인하지 아닌 경우, 이 정보는 `null`."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시.\n\n외부 사용자가 본 서비스에 최초로 접속한 일시."
          }
        },
        "required": [
          "id",
          "citizen",
          "application",
          "uid",
          "nickname",
          "data",
          "content",
          "member_id",
          "created_at"
        ],
        "description": "외부 사용자 정보.\n\n`IHubExternalUser` 는 본 시스템이 외부 서비스와 연동하여, 그들의 유저를 본 서비스의\n{@link IHubCustomer 고객}으로 맞아들여야 할 때를 대비한 엔티티이다.\n\n참고로 외부 서비스로부터 접속한 고객은 이 레코드를 반드시 지니며, 두 속성\n{@link application} 과 {@link uid} 를 통하여 외부 서비스 유저를 식별한다.\n만일 외부 서비스로부터 접속한 고객이 본 서비스로부터 {@link IHubCitizen 실명 인증}을\n마치거든, 해당 외부 서비스 유저는 본 서비스에 재접속하여 고객 인증 토큰을 새로이 발급할\n때마다, 실명 인증이 완료된 상태로 시작한다. 이는 {@link IHubMember 회원} 가입시에도 동일.\n\n그리고 {@link IHubExternalUser.ICreate.password} 는 외부 서비스의 시스템에서 해당\n유저에 대해 발급해 준 비밀번호로써 (이른바 사용자 영구 인증 토큰), 실제 사용자\n비밀번호는 결코 아니다. 다만 현재의 외부 시스템 유저와 동일한 {@link application}\n및 {@link uid} 를 입력한 고객에 대하여, 이를 올바른 외부 시스템 유저로 볼 지, 아니면\n위반사항으로 볼 지 판별하기 위함이다.\n\n더하여 외부 서비스로부터 받은 부가 정보를 {@link data} 필드에 JSON 의 형태로써\n기록할 수 있다."
      },
      "IHubCitizen": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "mobile": {
            "type": "string",
            "pattern": "^[0-9]*$",
            "title": "핸드폰 번호",
            "description": "핸드폰 번호."
          },
          "name": {
            "type": "string",
            "title": "실명 또는 그에 준하는 이름",
            "description": "실명 또는 그에 준하는 이름."
          }
        },
        "required": [
          "id",
          "created_at",
          "mobile",
          "name"
        ],
        "description": "시민 인증 정보.\n\n{@link IHubCitizen} 은 사용자의 실명 및 핸드폰 입력 정보를 기록한 엔티티이다.\n\n참고로 한국의 경우 전자상거래 참여자는 실명 인증이 필수이기에, {@link name} \n속성이 중요하다. 하지만 해외의 경우 사정이 다르니, 실제적으로는 {@link mobile} \n속성이 제일 중요하며, 사용자 개개인에 대한 식별 또한 이 {@link mobile} 을 기준으로 \n하고 있다.\n\n물론, 실명 및 핸드폰 인증 정보는 암호화하여 저장하고 있다."
      },
      "IHubExternalUserContent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Primary key",
            "description": "Primary key."
          },
          "jobs": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "title": "사용자 직업 정보 리스트",
            "description": "사용자 직업 정보 리스트.\n{@link IHubExternalUserContent.JobType}"
          },
          "gender": {
            "$ref": "#/components/schemas/IHubExternalUserContent.GenderType",
            "title": "사용자 성별 정보",
            "description": "사용자 성별 정보.\n\n`m` : 남성\n`f` : 여성\n`none` : 성별 미공개"
          },
          "birthYear": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ],
            "title": "사용자 출생년도",
            "description": "사용자 출생년도."
          },
          "interests": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "title": "사용자 관심사 리스트",
            "description": "사용자 관심사 리스트."
          },
          "provider": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "WRTN 사용자 계정 제공자",
            "description": "WRTN 사용자 계정 제공자.\n\nex) \"google\", \"kakao\", \"naver\""
          },
          "purposes": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "title": "사용자 접근 목적",
            "description": "사용자 접근 목적."
          }
        },
        "required": [
          "id",
          "jobs",
          "gender",
          "birthYear",
          "interests",
          "provider",
          "purposes"
        ],
        "description": "외부 사용자 정보 상세 정보.\n\nWRTN SSO 에서 제공 해주는 사용자 정보를 담고 있는 객체."
      },
      "IHubExternalUserContent.GenderType": {
        "oneOf": [
          {
            "const": "m"
          },
          {
            "const": "f"
          },
          {
            "const": "none"
          }
        ]
      },
      "IHubMemberVillain.ICreate": {
        "type": "object",
        "properties": {
          "member_id": {
            "type": "string",
            "format": "uuid",
            "title": "빌런 회원으로 승급시킬 회원의 {@link IHubMember.id}",
            "description": "빌런 회원으로 승급시킬 회원의 {@link IHubMember.id}."
          },
          "reason": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "빌런 회원으로 승급한 이유",
            "description": "빌런 회원으로 승급한 이유.\n\n null 일수 있음."
          }
        },
        "required": [
          "member_id",
          "reason"
        ],
        "description": "빌런 회원의 입력 정보."
      },
      "IHubMemberVillain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "villain",
            "title": "Discriminated Union 타입의 식별자",
            "description": "Discriminated Union 타입의 식별자."
          },
          "member": {
            "$ref": "#/components/schemas/IHubMember.IInvert",
            "title": "빌런 회원 으로 등록된 회원의 역정보",
            "description": "빌런 회원 으로 등록된 회원의 역정보."
          },
          "administrator": {
            "$ref": "#/components/schemas/IHubAdministrator.IInvert",
            "title": "등록한 관리자의 역정보",
            "description": "등록한 관리자의 역정보."
          },
          "reason": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "등록 사유",
            "description": "등록 사유.\n\n`null` 이면, 관리자가 등록시 사유를 기입하지 않았음을 뜻한다."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "등록 일시",
            "description": "등록 일시."
          },
          "deleted_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "삭제 일시",
            "description": "삭제 일시."
          }
        },
        "required": [
          "id",
          "type",
          "member",
          "administrator",
          "reason",
          "created_at",
          "deleted_at"
        ],
        "description": "일반 회원 계정중 빌런 회원.\n\n`IHubMemberVillain` 는 {@link IHubMember 고객}이 본 시스템에 블랙리스트 회원으로 등록시 추가되는 엔티티이다.\n\n참고로 관리자만 빌런 회원으로 등록시킬 수 있다."
      },
      "IAdminCustomerAggregate.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IAdminCustomerAggregate.IRequest.ISearch",
            "title": "검색 정보",
            "description": "검색 정보."
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-member.created_at"
                },
                {
                  "const": "-member.nickname"
                },
                {
                  "const": "+member.created_at"
                },
                {
                  "const": "+member.nickname"
                }
              ]
            },
            "title": "정렬 기준",
            "description": "정렬 기준."
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IAdminCustomerAggregate.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "channel_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "member": {
            "type": "object",
            "properties": {
              "type": {
                "oneOf": [
                  {
                    "const": "members"
                  },
                  {
                    "const": "sellers"
                  }
                ]
              },
              "from": {
                "type": "string",
                "format": "date"
              },
              "to": {
                "type": "string",
                "format": "date"
              },
              "access_type": {
                "oneOf": [
                  {
                    "const": "elite"
                  },
                  {
                    "const": "none"
                  },
                  {
                    "const": "villain"
                  }
                ]
              }
            }
          }
        }
      },
      "IPageIAdminCustomerAggregate.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAdminCustomerAggregate.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IPage.IPagination": {
        "type": "object",
        "properties": {
          "current": {
            "type": "integer",
            "title": "Current page number",
            "description": "Current page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          },
          "records": {
            "type": "integer",
            "title": "Total records in the database",
            "description": "Total records in the database."
          },
          "pages": {
            "type": "integer",
            "title": "Total pages",
            "description": "Total pages.\n\nEqual to {@link records} / {@link limit} with ceiling."
          }
        },
        "required": [
          "current",
          "limit",
          "records",
          "pages"
        ],
        "description": "Page information."
      },
      "IAdminCustomerAggregate.ISummary": {
        "type": "object",
        "properties": {
          "villain": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubMemberVillain"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "villain": "#/components/schemas/IHubMemberVillain"
              }
            },
            "title": "빌런 회원 정보",
            "description": "빌런 회원 정보."
          },
          "elite": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubMemberElite"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "elite": "#/components/schemas/IHubMemberElite"
              }
            },
            "title": "엘리트 회원 정보",
            "description": "엘리트 회원 정보."
          },
          "member": {
            "$ref": "#/components/schemas/IHubMember",
            "title": "일반 회원 정보",
            "description": "일반 회원 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "villain",
          "elite",
          "member",
          "id"
        ],
        "description": "요약 정보."
      },
      "IHubMember": {
        "type": "object",
        "properties": {
          "citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubCitizen"
              }
            ],
            "title": "시민 정보",
            "description": "시민 정보.\n\n본인 인증을 완료한 회원의 경우에 한함."
          },
          "administrator": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubAdministrator"
              }
            ],
            "title": "본 회원이 관리자로도 가입된 경우",
            "description": "본 회원이 관리자로도 가입된 경우."
          },
          "seller": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubSeller"
              }
            ],
            "title": "본 회원이 판매자로도 가입된 경우",
            "description": "본 회원이 판매자로도 가입된 경우."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "member",
            "title": "Discriminated Union 타입의 식별자",
            "description": "Discriminated Union 타입의 식별자."
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubMemberEmail"
            },
            "minItems": 1,
            "title": "이메일 리스트",
            "description": "이메일 리스트."
          },
          "nickname": {
            "type": "string",
            "title": "닉네임",
            "description": "닉네임."
          },
          "profile_background_color": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "primary"
              },
              {
                "const": "gray"
              },
              {
                "const": "inspired_red"
              },
              {
                "const": "apricot"
              },
              {
                "const": "yellow"
              },
              {
                "const": "green"
              },
              {
                "const": "blue"
              },
              {
                "const": "violet"
              },
              {
                "const": "pink"
              }
            ],
            "title": "프로필 배경 색",
            "description": "프로필 배경 색."
          },
          "account": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioAccount.IInvert"
              }
            ],
            "title": "스튜디오 계정",
            "description": "스튜디오 계정."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "citizen",
          "administrator",
          "seller",
          "id",
          "type",
          "emails",
          "nickname",
          "profile_background_color",
          "account",
          "created_at"
        ],
        "description": "일반 회원 계정.\n\n`IHubMember` 는 {@link IHubCustomer 고객}이 본 시스템에 일반 회원으로 가입하는\n경우를 형상화한 엔티티이다.\n\n참고로 {@link IHubMember.seller} 나 {@link IHubMember.administrator} 값이 `null`\n이 아니라면, 이는 해당 회원이 판매자 및 관리자로도 가입하여 활동함을 뜻한다.\n\n반대로 관리자 및 판매자로부터 역으로 회원 및 고객 정보를 역으로 참조하는 구조를\n원한다면, 아래 구조를 대신 사용할 것.\n\n- {@link IHubAdministrator.IInvert}\n- {@link IHubSeller.IInvert}"
      },
      "IHubAdministrator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "관리자 회원 가입 일시",
            "description": "관리자 회원 가입 일시."
          }
        },
        "required": [
          "id",
          "created_at"
        ],
        "description": "관리자.\n\n`IHubAdministrator` 는 문자 그대로 관리자를 뜻하는 엔티티로써, 본 시스템에\n{@link IHubMember 회원}으로 가입하여, {@link IHubSaleAudit 심사} 등의 관리 활동을\n수행하는 이를 가르킨다.\n\n참고로 `IHubAdministrator` 는 {@link IHubExternalUser 외부 유저}나 비회원 활동 등이\n가능한 {@link IHubCustomer} 와는 달리, 오직 {@link IHubMember 회원}으로 가입한\n사람만이 관리 활동을 영위할 수 있다. 그리고 {@link IHubCitizen 실명 인증} 또한 필수."
      },
      "IHubSeller": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "id",
          "created_at"
        ],
        "description": "판매자 정보.\n\n`IHubSeller` 는 문자 그대로 판매자를 뜻하는 엔티티로써, 본 시스템에\n{@link IHubMember 회원}으로 가입하여, {@link IHubSale API 매물}을 등록하며\n{@link IHubOrder 판매} 활동을 영위하는 사람을 뜻한다.\n\n참고로 `IHubSeller` 는 {@link IHubExternalUser 외부 유저}나 비회원 활동 등이\n가능한 {@link IHubCustomer} 와는 달리, 오직 {@link IHubMember 회원}으로 가입한\n사람만이 판매 활동을 영위할 수 있다. 그리고 {@link IHubCitizen 실명 인증} 또한 필수."
      },
      "IHubMember.ILogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "이메일 주소",
            "description": "이메일 주소."
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "pattern": "^[A-Za-z0-9@$!%*#?&^]{8,15}$"
              }
            ],
            "title": "비밀번호",
            "description": "비밀번호."
          }
        },
        "required": [
          "email",
          "password"
        ],
        "description": "로그인 정보."
      },
      "IHubCoupon.ICreate": {
        "type": "object",
        "properties": {
          "criterias": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IHubCouponCriteriaOfChannel.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IHubCouponCriteriaOfSection.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IHubCouponCriteriaOfSeller.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IHubCouponCriteriaOfSale.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IHubCouponCriteriaOfFunnel.ICreate"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "channel": "#/components/schemas/IHubCouponCriteriaOfChannel.ICreate",
                  "section": "#/components/schemas/IHubCouponCriteriaOfSection.ICreate",
                  "seller": "#/components/schemas/IHubCouponCriteriaOfSeller.ICreate",
                  "sale": "#/components/schemas/IHubCouponCriteriaOfSale.ICreate",
                  "funnel": "#/components/schemas/IHubCouponCriteriaOfFunnel.ICreate"
                }
              }
            },
            "title": "할인 쿠폰의 제약 리스트",
            "description": "할인 쿠폰의 제약 리스트."
          },
          "discount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IHubCouponDiscount.IAmount"
              },
              {
                "$ref": "#/components/schemas/IHubCouponDiscount.IPercent"
              }
            ],
            "discriminator": {
              "propertyName": "unit",
              "mapping": {
                "amount": "#/components/schemas/IHubCouponDiscount.IAmount",
                "percent": "#/components/schemas/IHubCouponDiscount.IPercent"
              }
            },
            "title": "할인 정보",
            "description": "할인 정보."
          },
          "restriction": {
            "$ref": "#/components/schemas/IHubCouponRestriction",
            "title": "제약 정보",
            "description": "제약 정보."
          },
          "name": {
            "type": "string",
            "title": "할인 쿠폰의 대표 이름",
            "description": "할인 쿠폰의 대표 이름."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "발급 종료 일시",
            "description": "발급 종료 일시.\n\n이 시점이 지난 이후로 티켓 발급 불가.\n\n다만 기 발행된 티켓은 여전히 그들의 {@link expired_at 만료 도래일}까지 사용 가능."
          }
        },
        "required": [
          "criterias",
          "discount",
          "restriction",
          "name",
          "opened_at",
          "closed_at"
        ],
        "description": "할인 쿠폰 입력 정보."
      },
      "IHubCouponCriteriaOfChannel.ICreate": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCouponCriteriaOfChannel.IChannelTo.ICreate"
            },
            "title": "대상 채널 및 카테고리 리스트",
            "description": "대상 채널 및 카테고리 리스트."
          },
          "type": {
            "const": "channel",
            "title": "조건의 상세 타입",
            "description": "조건의 상세 타입.\n\nDiscriminated union 의 식별자 역할."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "제약 조건이 적용되는 방향",
            "description": "제약 조건이 적용되는 방향.\n\n- include: 포함 조건\n- exclude: 배제 조건"
          }
        },
        "required": [
          "channels",
          "type",
          "direction"
        ],
        "description": "할인 쿠폰의 채널에 대한 조건의 입력 정보."
      },
      "IHubCouponCriteriaOfChannel.IChannelTo.ICreate": {
        "type": "object",
        "properties": {
          "channel_code": {
            "type": "string",
            "title": "대상 채널의 {@link IHubChannel.code}",
            "description": "대상 채널의 {@link IHubChannel.code}."
          },
          "category_ids": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            ],
            "title": "대상 카테고리들의 {@link IHubChannelCategory.id} 리스트",
            "description": "대상 카테고리들의 {@link IHubChannelCategory.id} 리스트.\n\n만일 이 값이 `null` 이라면, 모든 카테고리가 그 대상임."
          }
        },
        "required": [
          "channel_code",
          "category_ids"
        ],
        "description": "대상 채널 및 카테고리의 입력 정보."
      },
      "IHubCouponCriteriaOfSection.ICreate": {
        "type": "object",
        "properties": {
          "section_codes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "title": "타킷 섹션들의 {@link IHubSection.code} 리스트",
            "description": "타킷 섹션들의 {@link IHubSection.code} 리스트."
          },
          "type": {
            "const": "section",
            "title": "조건의 상세 타입",
            "description": "조건의 상세 타입.\n\nDiscriminated union 의 식별자 역할."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "제약 조건이 적용되는 방향",
            "description": "제약 조건이 적용되는 방향.\n\n- include: 포함 조건\n- exclude: 배제 조건"
          }
        },
        "required": [
          "section_codes",
          "type",
          "direction"
        ]
      },
      "IHubCouponCriteriaOfSeller.ICreate": {
        "type": "object",
        "properties": {
          "seller_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "minItems": 1,
            "title": "타킷 판매자들의 {@link IHubSeller.id} 리스트",
            "description": "타킷 판매자들의 {@link IHubSeller.id} 리스트."
          },
          "type": {
            "const": "seller",
            "title": "조건의 상세 타입",
            "description": "조건의 상세 타입.\n\nDiscriminated union 의 식별자 역할."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "제약 조건이 적용되는 방향",
            "description": "제약 조건이 적용되는 방향.\n\n- include: 포함 조건\n- exclude: 배제 조건"
          }
        },
        "required": [
          "seller_ids",
          "type",
          "direction"
        ]
      },
      "IHubCouponCriteriaOfSale.ICreate": {
        "type": "object",
        "properties": {
          "sale_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "minItems": 1,
            "title": "타킷 매물들의 {@link IHubSale.id} 리스트",
            "description": "타킷 매물들의 {@link IHubSale.id} 리스트."
          },
          "type": {
            "const": "sale",
            "title": "조건의 상세 타입",
            "description": "조건의 상세 타입.\n\nDiscriminated union 의 식별자 역할."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "제약 조건이 적용되는 방향",
            "description": "제약 조건이 적용되는 방향.\n\n- include: 포함 조건\n- exclude: 배제 조건"
          }
        },
        "required": [
          "sale_ids",
          "type",
          "direction"
        ]
      },
      "IHubCouponCriteriaOfFunnel.ICreate": {
        "type": "object",
        "properties": {
          "funnels": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IHubCouponCriteriaOfFunnel.IPathFunnel"
                },
                {
                  "$ref": "#/components/schemas/IHubCouponCriteriaOfFunnel.IReferrerFunnel"
                },
                {
                  "$ref": "#/components/schemas/IHubCouponCriteriaOfFunnel.IVariableFunnel"
                }
              ],
              "discriminator": {
                "propertyName": "kind",
                "mapping": {
                  "url": "#/components/schemas/IHubCouponCriteriaOfFunnel.IPathFunnel",
                  "referrer": "#/components/schemas/IHubCouponCriteriaOfFunnel.IReferrerFunnel",
                  "variable": "#/components/schemas/IHubCouponCriteriaOfFunnel.IVariableFunnel"
                }
              }
            },
            "minItems": 1,
            "title": "유입 경로에 대한 개별 조건 리스트",
            "description": "유입 경로에 대한 개별 조건 리스트."
          },
          "type": {
            "const": "funnel",
            "title": "조건의 상세 타입",
            "description": "조건의 상세 타입.\n\nDiscriminated union 의 식별자 역할."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "제약 조건이 적용되는 방향",
            "description": "제약 조건이 적용되는 방향.\n\n- include: 포함 조건\n- exclude: 배제 조건"
          }
        },
        "required": [
          "funnels",
          "type",
          "direction"
        ]
      },
      "IHubCouponCriteriaOfFunnel.IPathFunnel": {
        "type": "object",
        "properties": {
          "kind": {
            "const": "url",
            "title": "유입 경로의 종류",
            "description": "유입 경로의 종류.\n\n- url: 접속한 URL path 주소"
          },
          "value": {
            "type": "string",
            "format": "uri",
            "title": "Path 값",
            "description": "Path 값."
          }
        },
        "required": [
          "kind",
          "value"
        ],
        "description": "Path 값을 통한 유입 경로 제한."
      },
      "IHubCouponCriteriaOfFunnel.IReferrerFunnel": {
        "type": "object",
        "properties": {
          "kind": {
            "const": "referrer",
            "title": "유입 경로의 종류",
            "description": "유입 경로의 종류.\n\n- referrer: 본 사이트 접속 전 유입 referrer 주소."
          },
          "value": {
            "type": "string",
            "format": "uri",
            "title": "유입경로 값",
            "description": "유입경로 값."
          }
        },
        "required": [
          "kind",
          "value"
        ],
        "description": "Referrer 주소 값을 통한 유입 경로 제한."
      },
      "IHubCouponCriteriaOfFunnel.IVariableFunnel": {
        "type": "object",
        "properties": {
          "kind": {
            "const": "variable",
            "title": "유입 경로의 종류",
            "description": "유입 경로의 종류.\n\n- variable: URL query"
          },
          "key": {
            "type": "string",
            "title": "URL query 상 key 값",
            "description": "URL query 상 key 값."
          },
          "value": {
            "type": "string",
            "title": "URL query 상 value 값",
            "description": "URL query 상 value 값."
          }
        },
        "required": [
          "kind",
          "key",
          "value"
        ],
        "description": "변수를 통한 유입 경로 제한."
      },
      "IHubCouponDiscount.IAmount": {
        "type": "object",
        "properties": {
          "unit": {
            "const": "amount",
            "title": "할인 단위: 총액",
            "description": "할인 단위: 총액."
          },
          "value": {
            "type": "number",
            "title": "할인 금액",
            "description": "할인 금액."
          },
          "threshold": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number",
                "exclusiveMinimum": true,
                "minimum": 0
              }
            ],
            "title": "할인을 위한 최소 구매 금액",
            "description": "할인을 위한 최소 구매 금액.\n\n이 값을 설정시, 해당 값을 하회하는 주문 총액에 대하여는 할인 쿠폰 적용 불가."
          }
        },
        "required": [
          "unit",
          "value",
          "threshold"
        ],
        "description": "총액 할인."
      },
      "IHubCouponDiscount.IPercent": {
        "type": "object",
        "properties": {
          "unit": {
            "const": "percent",
            "title": "할인 단위: 퍼센트",
            "description": "할인 단위: 퍼센트."
          },
          "value": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "title": "할인 퍼센트",
            "description": "할인 퍼센트."
          },
          "threshold": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number",
                "exclusiveMinimum": true,
                "minimum": 0
              }
            ],
            "title": "할인을 위한 최소 구매 금액",
            "description": "할인을 위한 최소 구매 금액.\n\n이 값을 설정시, 해당 값을 하회하는 주문 총액에 대하여는 할인 쿠폰 적용 불가."
          },
          "limit": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number",
                "exclusiveMinimum": true,
                "minimum": 0
              }
            ],
            "title": "할인 가능 최대 금액",
            "description": "할인 가능 최대 금액.\n\n이 값을 설정시, 제 아무리 많은 금액을 주문해도, 그 이상 할인되지 아니함."
          }
        },
        "required": [
          "unit",
          "value",
          "threshold",
          "limit"
        ],
        "description": "퍼센트 할인."
      },
      "IHubCouponRestriction": {
        "type": "object",
        "properties": {
          "access": {
            "oneOf": [
              {
                "const": "public"
              },
              {
                "const": "private"
              }
            ],
            "title": "할인 쿠폰을 공개적으로 열람할 수 있는가",
            "description": "할인 쿠폰을 공개적으로 열람할 수 있는가.\n\n- `public`: 주문시 사용 가능한 쿠폰으로 일괄 조회 가능\n- `private`: 일괄 조회 불가\n  - 판매자 혹은 관리자가 임의 부여해주거나\n  - 일회용 링크를 통해서만 발급 가능"
          },
          "exclusive": {
            "type": "boolean",
            "title": "배타성 여부",
            "description": "배타성 여부.\n\n배타적 할인 쿠폰이란, 다른 할인 쿠폰에 대하여 배타적 관계를 가져, 오직 단독\n사용만이 가능한 할인 쿠폰을 가르키는 말이다. 즉, 배타적 할인 쿠폰을 사용하는 경우,\n동일 {@link IHubOrder 주문} 내지 {@link IHubOrderGood 상품}에 대하여, 그 어떠한\n다른 할인 쿠폰도 사용할 수 없게 된다."
          },
          "volume": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ],
            "title": "발급 수량 제한",
            "description": "발급 수량 제한.\n\n발급 수량에 제한이 있는 경우, 이 값을 넘어서는 티켓 발행이 불가능해짐.\n\n즉, 쿠폰에 선착순 N 매 개념이 생긴다는 뜻."
          },
          "volume_per_citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ],
            "title": "1 인당 발급 수량 제한",
            "description": "1 인당 발급 수량 제한.\n\n1 인 단위의 발급 총량 제한으로써, 동일 시민에게의 중복 발급을 제한하기 위하여\n1 을 할당하거나, 아니면 제한을 두지 않고자 `null` 값을 사용하는 게 보통이다.\n\n물론 N 값을 부여하여, 동일 시민에게로의 발행 총량을 제한할 수 있다."
          },
          "expired_in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ],
            "title": "만료 도래일 수",
            "description": "만료 도래일 수.\n\n할인 쿠폰 티켓을 발급받은 후, N 일이 지나면 만료되는 개념.\n\n때문에 고객은 티켓을 발급한 이후로, 가급 N 일 안에 소모해야 함."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "만료 도래 날짜",
            "description": "만료 도래 날짜.\n\n할인 쿠폰 티켓을 발급받은 후, YYYY-MM-DD 가 지나면 만료되는 개념.\n\n{@link expired_in} 과 함께 이중 제약 가능."
          }
        },
        "required": [
          "access",
          "exclusive",
          "volume",
          "volume_per_citizen",
          "expired_in",
          "expired_at"
        ],
        "description": "할인 쿠폰의 제약 조건."
      },
      "IHubCoupon": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "designer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IHubSeller.IInvert"
              },
              {
                "$ref": "#/components/schemas/IHubAdministrator.IInvert"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "seller": "#/components/schemas/IHubSeller.IInvert",
                "administrator": "#/components/schemas/IHubAdministrator.IInvert"
              }
            },
            "title": "할인 쿠폰을 설계한 사람",
            "description": "할인 쿠폰을 설계한 사람.\n\n각각 관리자 및 판매자가 할인 쿠폰을 설계할 수 있다."
          },
          "discount": {
            "$ref": "#/components/schemas/IHubCouponDiscount",
            "title": "할인 정보",
            "description": "할인 정보."
          },
          "restriction": {
            "$ref": "#/components/schemas/IHubCouponRestriction",
            "title": "제약 정보",
            "description": "제약 정보."
          },
          "inventory": {
            "$ref": "#/components/schemas/IHubCouponInventory",
            "title": "재고 정보",
            "description": "재고 정보."
          },
          "criterias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCouponCriteria"
            },
            "title": "할인 쿠폰의 조건 리스트",
            "description": "할인 쿠폰의 조건 리스트."
          },
          "name": {
            "type": "string",
            "title": "할인 쿠폰의 대표 이름",
            "description": "할인 쿠폰의 대표 이름."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "발급 개시 일시",
            "description": "발급 개시 일시."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "발급 종료 일시",
            "description": "발급 종료 일시.\n\n이 시점이 지난 이후로 티켓 발급 불가.\n\n다만 기 발행된 티켓은 여전히 그들의 {@link expired_at 만료 도래일}까지 사용 가능."
          }
        },
        "required": [
          "id",
          "designer",
          "discount",
          "restriction",
          "inventory",
          "criterias",
          "name",
          "created_at",
          "opened_at",
          "closed_at"
        ],
        "description": "할인 쿠폰.\n\n`IHubCoupon` 은 거래소에서의 할인 쿠폰을 형상화한 엔티티이다.\n\n단, `IHubCoupon` 은 그저 할인 쿠폰에 대한 명세 (사양) 정보만을 담고 있을 뿐이다.\n할인 쿠폰에 대한 발급을 의미하는 {@link IHubCouponTickeet} 내지 그것의 지급을\n의미하는 {@link IHubCouponTicketPayment} 와는 다른 개념이니, 이 점 유의하기 바란다.\n\n또한 할인 쿠폰은 {@link IHubOrder 주문} 단위로 적용하되, 각각이 나름의 고유한\n{@link IHubCouponCriteria 제약사항}을 가진다. 예를 들어\n{@link IHubCouponCriteriaOfSeller 판매자 제약}이 걸린 쿠폰은, 오직 해당\n{@link IHubSeller 판매자}가 등록한 {@link IHubSale 매물}에 대해서만 사용할 수\n있거나 또는 사용할 수 없다. 그리고 할인 쿠폰을 사용하기 위한 최소 금액 제한이라던가,\n할인 금액의 최대 한도 등의 제약도 존재한다.\n\n이외에 할인 쿠폰을 공개적으로 발행하냐, 아니면 특정 발급 코드를 아는 사람에게만 줄\n것이냐 등을 설정할 수 있다. 더하여 발급받은 할인 쿠폰에 만료 기한이 있다거나, 오직\n특정 경로를 통하여 유입된 고객에게만 발행한다던가 하는 제약도 있다.\n\n자세한 내용은 아래의 속성 및 하위 엔티티들을 참고하기 바란다."
      },
      "IHubSeller.IInvert": {
        "type": "object",
        "properties": {
          "type": {
            "const": "seller",
            "title": "Discriminated union 타입의 구분자",
            "description": "Discriminated union 타입의 구분자."
          },
          "member": {
            "$ref": "#/components/schemas/IHubMember.IInvert",
            "title": "일반 회원 정보",
            "description": "일반 회원 정보.\n\n판매자 회원으로 가입하기 위해서는, 먼저 일반 회원으로 가입해야 한다."
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer.IInvert",
            "title": "고객 정보",
            "description": "고객 정보.\n\n본 시스템에서는 고객을 접속 단위로 관리한다.\n\n즉, 현재의 판매자 회원에 대한 접속 정보."
          },
          "citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubCitizen"
              }
            ],
            "title": "시민 인증 정보",
            "description": "시민 인증 정보.\n\n판매자는 반드시 시민 인증을 완료해야 한다."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "type",
          "member",
          "customer",
          "citizen",
          "id",
          "created_at"
        ],
        "description": "판매자의 역 참조 정보.\n\n판매자 정보를 {@link IHubCustomer.member} -> {@link IHubMember.seller}\n순으로 열거하지 않고, 그 반대로 열거한 자료구조. 관리자를 최상위 객체로 시작하여,\n시민과 일반 회원 및 고객 정보를 역으로 참조해나간다."
      },
      "IHubCouponDiscount": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IHubCouponDiscount.IAmount"
          },
          {
            "$ref": "#/components/schemas/IHubCouponDiscount.IPercent"
          }
        ],
        "discriminator": {
          "propertyName": "unit",
          "mapping": {
            "amount": "#/components/schemas/IHubCouponDiscount.IAmount",
            "percent": "#/components/schemas/IHubCouponDiscount.IPercent"
          }
        },
        "title": "할인 쿠폰의 할인 정보",
        "description": "할인 쿠폰의 할인 정보.\n\n`IHubCouponDiscount` 는 할인 쿠폰의 금액 및 단위에 대한 정보를 담은 엔티티로써,\n각각 절대 금액 할인과 퍼센트 할인에 대하여 서브 타입으로 분리된다."
      },
      "IHubCouponInventory": {
        "type": "object",
        "properties": {
          "volume": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ],
            "title": "잔여 수량",
            "description": "잔여 수량."
          },
          "volume_per_citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ],
            "title": "인당 잔여 수량",
            "description": "인당 잔여 수량."
          }
        },
        "required": [
          "volume",
          "volume_per_citizen"
        ],
        "description": "할인 쿠폰의 잔여 재고 정보."
      },
      "IHubCouponCriteria": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IHubCouponCriteriaOfChannel"
          },
          {
            "$ref": "#/components/schemas/IHubCouponCriteriaOfSection"
          },
          {
            "$ref": "#/components/schemas/IHubCouponCriteriaOfSeller"
          },
          {
            "$ref": "#/components/schemas/IHubCouponCriteriaOfSale"
          },
          {
            "$ref": "#/components/schemas/IHubCouponCriteriaOfFunnel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "channel": "#/components/schemas/IHubCouponCriteriaOfChannel",
            "section": "#/components/schemas/IHubCouponCriteriaOfSection",
            "seller": "#/components/schemas/IHubCouponCriteriaOfSeller",
            "sale": "#/components/schemas/IHubCouponCriteriaOfSale",
            "funnel": "#/components/schemas/IHubCouponCriteriaOfFunnel"
          }
        },
        "title": "할인 쿠폰의 적용 대상 조건에 대한 유니언 타입",
        "description": "할인 쿠폰의 적용 대상 조건에 대한 유니언 타입.\n\n`IHubCouponCriteria` 는 {@link IHubCoupon 할인 쿠폰}의 적용 대상 조건들에\n대한 유니언 타입 엔티티이다. 할인 쿠폰의 참조 단위에 대하여 제약을 가하고자 하는\n모든 서브타입 엔티티들을 묶었으며, 아래와 같이 `if condition` 을 통하여 서브타입을\n특정할 수 있다. 이를 Discriminated Union 이라고 한다.\n\n```typescript\nif (criteria.type === \"channel\")\n    console.log(criterial.channel);\n```\n\n이외에 참조 단위에 대한 제약은, {@link IHubCouponCriteria.direction} 속성을\n통하여 포함 조건으로 나아갈 지, 반대로 배제 조건으로 나아갈 지 정할 수 있다. 만약 이 값이\n`\"include\"` 이거든, 해당 참조 대상에 대해서만 적용 가능한 쿠폰이 되는 것이고, 반대로\n`\"exclude\"` 이거든, 해당 참조 대상에 대해서는 적용할 수 없는 쿠폰이 되는 것이다."
      },
      "IHubCouponCriteriaOfChannel": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCouponCriteriaOfChannel.IChannelTo"
            },
            "title": "대상 채널 및 카테고리 리스트",
            "description": "대상 채널 및 카테고리 리스트."
          },
          "type": {
            "const": "channel",
            "title": "조건의 상세 타입",
            "description": "조건의 상세 타입.\n\nDiscriminated union 의 식별자 역할."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "제약 조건이 적용되는 방향",
            "description": "제약 조건이 적용되는 방향.\n\n- include: 포함 조건\n- exclude: 배제 조건"
          }
        },
        "required": [
          "channels",
          "type",
          "direction"
        ],
        "description": "할인 쿠폰의 채널에 대한 조건.\n\n`IHubCouponCriteriaOfChannel` 는 {@link IHubCouponCriteriaBase} 의 서브타입\n엔티티로써, 특정 {@link IHubChannel 채널} 혹은 해당 채널의\n{@link IHubChannelCategory 카테고리}에 대하여 조건을 걸 때 사용한다.\n\n만일 hub_coupon_criterias.direction 값이 \"include\" 이거든 해당 채널\n(또는 카테고리)에 대해서만 사용 가능한 쿠폰이, 반대로 \"exclude\" 이거든 사용 불가능한\n쿠폰이 된다. 그리고 한 쿠폰 내에 복수의 hub_coupon_criteria_of_channels 레코드가\n존재한다면, 이 때는 묶음 단위로 조건이 걸린다. 대상 채널 및 카테고리들에 대하여,\n적용 가능 혹은 적용 불가능한 쿠폰이 되는 것."
      },
      "IHubCouponCriteriaOfChannel.IChannelTo": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/IHubChannel",
            "title": "대상 채널 정보",
            "description": "대상 채널 정보."
          },
          "categories": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IHubChannelCategory.IInvert"
                },
                "minItems": 1
              }
            ],
            "title": "대상 카테고리 리스트 정보",
            "description": "대상 카테고리 리스트 정보.\n\n만일 이 값이 `null` 이라면, 모든 카테고리가 그 대상임."
          }
        },
        "required": [
          "channel",
          "categories"
        ],
        "description": "적용 대상 채널 및 카테고리 정보."
      },
      "IHubChannelCategory.IInvert": {
        "type": "object",
        "properties": {
          "parent": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubChannelCategory.IInvert"
              }
            ],
            "title": "부모 카테고리",
            "description": "부모 카테고리."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "기본키"
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "부모 카테고리의 {@link IHubChannelCategory.id}",
            "description": "부모 카테고리의 {@link IHubChannelCategory.id}."
          },
          "name": {
            "type": "string",
            "title": "채널 카테고리 이름",
            "description": "채널 카테고리 이름."
          },
          "background_color": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "inspired_red"
              },
              {
                "const": "apricot"
              },
              {
                "const": "yellow"
              },
              {
                "const": "green"
              },
              {
                "const": "blue"
              },
              {
                "const": "violet"
              },
              {
                "const": "pink"
              },
              {
                "const": "black"
              }
            ],
            "title": "카테고리 배경 색상",
            "description": "카테고리 배경 색상."
          },
          "background_image_url": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "카테고리 배경 이미지",
            "description": "카테고리 배경 이미지."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "parent",
          "id",
          "parent_id",
          "name",
          "background_color",
          "background_image_url",
          "created_at"
        ],
        "description": "채널 카테고리 역정보."
      },
      "IHubCouponCriteriaOfSection": {
        "type": "object",
        "properties": {
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSection"
            },
            "minItems": 1,
            "title": "섹션 리스트",
            "description": "섹션 리스트.\n\n포함 또는 배제할 섹션들의 목록."
          },
          "type": {
            "const": "section",
            "title": "조건의 상세 타입",
            "description": "조건의 상세 타입.\n\nDiscriminated union 의 식별자 역할."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "제약 조건이 적용되는 방향",
            "description": "제약 조건이 적용되는 방향.\n\n- include: 포함 조건\n- exclude: 배제 조건"
          }
        },
        "required": [
          "sections",
          "type",
          "direction"
        ],
        "description": "할인 쿠폰의 섹션에 대한 조건.\n\n`IHubCouponCriteriaOfSection` 는 {@link IHubCouponCriteriaBase} 의 서브타입\n엔티티로써, 특정 {@link IHubSection} 에 대하여 조건을 걸 때 사용한다.\n\n만일 {@link direction} 값이 \"include\" 이거든 해당 섹션에 대해서만 사용 가능한\n쿠폰이, 반대로 \"exclude\" 이거든 사용 불가능한 쿠폰이 된다."
      },
      "IHubSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "기본키"
          },
          "code": {
            "type": "string",
            "description": "삭별자 코드"
          },
          "name": {
            "type": "string",
            "description": "섹션 명"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "레코드 생성 일시"
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "created_at"
        ],
        "description": "섹션 정보.\n\n`IHubSection` 은 시장에서의 섹션 정보를 표현하기 위하여 설계된 엔티티이다.\n\n여기서 말하는 섹션을 마트에 비유하면, \"과일코너\" 나 \"정육코너\" 등 매장 내에서\n공간적으로 분리된 영역을 뜻한다. 현재 뤼튼의 Generative Hub 에 존재하는 섹션은\n오직 \"API 마켓\" 하나 뿐이나, 앞으로의 확장성을 위해 미리 설계해 둔 개념이다.\n\n그리고 하나의 {@link IHubSale 매물}에서 동시 분류가 가능한\n{@link IHubChannelCategory} 와는 달리, 섹션은 하나의 매물에 대해서만 분류가\n가능하다.\n\n> 기본 코드는 `generative`"
      },
      "IHubCouponCriteriaOfSeller": {
        "type": "object",
        "properties": {
          "sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSeller"
            },
            "minItems": 1,
            "title": "판매자 리스트",
            "description": "판매자 리스트.\n\n포함 또는 배제할 판매자들의 목록."
          },
          "type": {
            "const": "seller",
            "title": "조건의 상세 타입",
            "description": "조건의 상세 타입.\n\nDiscriminated union 의 식별자 역할."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "제약 조건이 적용되는 방향",
            "description": "제약 조건이 적용되는 방향.\n\n- include: 포함 조건\n- exclude: 배제 조건"
          }
        },
        "required": [
          "sellers",
          "type",
          "direction"
        ],
        "description": "할인 쿠폰의 판매자에 대한 조건.\n\n`IHubCouponCriteriaOfSeller` 는 {@link IHubCouponCriteriaBase} 의 서브타입\n엔티티로써, 특정 {@link IHubSeller} 에 대하여 조건을 걸 때 사용한다.\n\n만일 {@link direction} 값이 \"include\" 이거든 해당 판매자에 대해서만 사용 가능한\n쿠폰이, 반대로 \"exclude\" 이거든 사용 불가능한 쿠폰이 된다."
      },
      "IHubCouponCriteriaOfSale": {
        "type": "object",
        "properties": {
          "sales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSale.ISummary"
            },
            "minItems": 1,
            "title": "매물 리스트",
            "description": "매물 리스트.\n\n포함 또는 배제할 매물들의 목록."
          },
          "type": {
            "const": "sale",
            "title": "조건의 상세 타입",
            "description": "조건의 상세 타입.\n\nDiscriminated union 의 식별자 역할."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "제약 조건이 적용되는 방향",
            "description": "제약 조건이 적용되는 방향.\n\n- include: 포함 조건\n- exclude: 배제 조건"
          }
        },
        "required": [
          "sales",
          "type",
          "direction"
        ],
        "description": "할인 쿠폰의 매물에 대한 조건.\n\n`IHubCouponCriteriaOfSale` 는 {@link IHubCouponCriteriaBase} 의 서브타입\n엔티티로써, 특정 {@link IHubSale} 에 대하여 조건을 걸 때 사용한다.\n\n만일 {@link direction} 값이 \"include\" 이거든 해당 매물에 대해서만 사용 가능한\n쿠폰이, 반대로 \"exclude\" 이거든 사용 불가능한 쿠폰이 된다."
      },
      "IHubSale.ISummary": {
        "type": "object",
        "properties": {
          "seller": {
            "$ref": "#/components/schemas/IHubSeller.IInvert",
            "title": "본 매물을 작성한 판매자",
            "description": "본 매물을 작성한 판매자."
          },
          "section": {
            "$ref": "#/components/schemas/IHubSection",
            "title": "귀속 섹션",
            "description": "귀속 섹션."
          },
          "audit": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubSaleAudit.IInvert"
              }
            ],
            "title": "심사 정보",
            "description": "심사 정보.\n\n만일 이 값이 `null` 이거나 혹은 내부 속성값 {@link IHubSaleAudit.approved_at} 이\n`null` 인 경우, 고객은 이를 일절 조회하거나 열람/구매할 수 없다. 오직 판매 당사자와\n관리자만이 해당 매물의 존재를 인지 가능."
          },
          "bookmarked_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "북마크로 추가한 시점",
            "description": "북마크로 추가한 시점."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "매물의 ID",
            "description": "매물의 ID."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "스냅샷의 ID",
            "description": "스냅샷의 ID."
          },
          "latest": {
            "type": "boolean",
            "title": "마지막 스냅샷 여부",
            "description": "마지막 스냅샷 여부.\n\n본 스냅샷이 귀속 매물의 가장 마지막 스냅샷인가?\n\n단, 본 매물을 조회하는 유저의 관점에 따라, \"마지막\" 의 기준이 다르다.\n\n- 고객 관점: 가장 마지막에 승인된 매물\n- 판매자/관리자: 가장 마지막에 작성된 매물"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleChannel"
            },
            "title": "채널/카테고리 리스트",
            "description": "채널/카테고리 리스트.\n\n본 매물이 판매되는 채널과 카테고리들의 일람."
          },
          "aggregate": {
            "$ref": "#/components/schemas/IHubSaleAggregate",
            "title": "본 매물 (또는 스냅샷) 에 대한 집계/성과 정보",
            "description": "본 매물 (또는 스냅샷) 에 대한 집계/성과 정보."
          },
          "content": {
            "$ref": "#/components/schemas/IHubSaleContent.IInvert",
            "title": "컨텐츠 정보",
            "description": "컨텐츠 정보.\n\n판매자가 매물을 등록하며 작성한 서술 정보."
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnit.ISummary"
            },
            "minItems": 1,
            "title": "유닛 리스트",
            "description": "유닛 리스트.\n\n현 매물이 취급하는 제품들에 대하여 표현하는 레코드로써, 각각의 제품에 대하여\n설정할 수 있는 {@link IHubSaleUnitOption 옵션} 및, 옵션들을 선택하여\n구성할 수 있는 최종 구성품 {@link IHubSaleUnitStock 스톡}에 대한 정보를\n담고 있다."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그 값 리스트",
            "description": "검색 태그 값 리스트."
          },
          "version": {
            "type": "string",
            "title": "버전명",
            "description": "버전명.\n\n{@link ISwaggerInfo.version} 과 다른 값을 설정할 수 있다.\n\n즉, 서버 스펙 (스웨거 문서) 상 버전명과, 제품상 버전명이 다를 수 있음."
          },
          "version_description": {
            "type": "string",
            "title": "버전 설명",
            "description": "버전 설명."
          },
          "activated_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "스냅샷의 활성화 시각",
            "description": "스냅샷의 활성화 시각.\n\n본 스냅샷이 심사 승인되어, 최초 활성화된 시각."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "현 매물 (스냅샷) 의 API 들이 중단되는 시각",
            "description": "현 매물 (스냅샷) 의 API 들이 중단되는 시각.\n\n거래 대상물이 API 인 본 시스템의 특성상, 판매자가 매물을 판매 중단했따하여\n그것이 곧바로 삭제되어서는 안된다. 최소한의 이용 기간을 보장해주어야, 해당\nAPI 를 사용하는 고객들이 이에 대응할 것이 아니겠는가?\n\n때문에 매물에 대한 판매 중단시, 일정 유예 기간을 두고 사라지도록 하고 있다.\n\n물론, 단 한 번도 판매된 적 없는 매물이거든, 해당 없음."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "paused_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 일시정지 일시",
            "description": "판매 일시정지 일시.\n\n판매자가 모종의 이유로 API 판매를 일시적으로 중단한 상태.\n\n고객은 여전히 리스트 및 상세 페이지에서 해당 매물을 열람할 수 있으되, 해당 매물에는\n\"판매자가 일시 중지된 상품입니다\" 라는 라벨이 붙는다."
          },
          "suspended_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 중단 일시",
            "description": "판매 중단 일시.\n\n판매자가 모종의 이유로 판매를 중단한 상태.\n\n고객은 해당 매물을 리스트 및 상세 페이지에서 일절 조회할 수 업다. 언뜻 보면\nsoft delete 와 비슷해보이나, 판매 당사자와 관리자는 여전히 이를 조회할 수 있고,\n언제든지 판매를 재개할 수 있다는 점이 다르다.\n\n또한 판매자 중단되었다한들, 해당 매물의 기 구매자들은 여전히 해당 API 를 사용할\n수 있다. API 의 중단 시점은 {@link IHubSaleSnapshot.expired_at} 속성을 참고할\n것."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 개시 일시",
            "description": "판매 개시 일시."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 종료 일시",
            "description": "판매 종료 일시.\n\n이 값이 NULL 이거든, 판매가 영원히 계속된다."
          }
        },
        "required": [
          "seller",
          "section",
          "audit",
          "bookmarked_at",
          "id",
          "snapshot_id",
          "latest",
          "channels",
          "aggregate",
          "content",
          "units",
          "tags",
          "version",
          "version_description",
          "activated_at",
          "expired_at",
          "created_at",
          "paused_at",
          "suspended_at",
          "opened_at",
          "closed_at"
        ],
        "description": "매물의 요약 정보."
      },
      "IHubSaleAudit.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "administrator": {
            "$ref": "#/components/schemas/IHubAdministrator.IInvert",
            "title": "심사를 발제한 관리자",
            "description": "심사를 발제한 관리자."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "rejected_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "심사 거절 일시",
            "description": "심사 거절 일시.\n\n가장 마지막 거절 내역의 일시가 기재됨."
          },
          "approved_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "심사 승인 일시",
            "description": "심사 승인 일시."
          }
        },
        "required": [
          "id",
          "administrator",
          "created_at",
          "rejected_at",
          "approved_at"
        ],
        "description": "심사 게시물의 역 참조 정보.\n\n매물로부터 역으로 참조되는 정보로써, 오직 거절 및 승인 일시만이 기록된다."
      },
      "IHubSaleChannel": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubChannelCategory"
            },
            "title": "판매 카테고리 리스트",
            "description": "판매 카테고리 리스트.\n\n만일 본 속성값의 길이가 0 이거든, 해당 매물은 카테고리에 대하여 \"미분류\" 상태인지라,\n귀속 채널의 모든 카테고리에서 판매 가능한 물건이다."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "기본키"
          },
          "code": {
            "type": "string",
            "description": "삭별자 코드"
          },
          "name": {
            "type": "string",
            "description": "채널 명"
          },
          "exclusive": {
            "type": "boolean",
            "description": "배타성 여부\n\n이 값이 True일 경우 해당 채널은 단절되, 고객의 정보 공유하지 않음."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "레코드 생성일시"
          }
        },
        "required": [
          "categories",
          "id",
          "code",
          "name",
          "exclusive",
          "created_at"
        ],
        "description": "매물의 판매 채널/카테고리 정보.\n\n`IHubSaleChannel` 은 매물이 판매되는 채널/카테고리 정보를 형상화한 엔티티이다."
      },
      "IHubChannelCategory": {
        "type": "object",
        "properties": {
          "parent": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubChannelCategory.IInvert"
              }
            ],
            "title": "부모 카테고리의 역정보",
            "description": "부모 카테고리의 역정보."
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubChannelCategory.IHierarchical"
            },
            "title": "자식 카테고리 리스트",
            "description": "자식 카테고리 리스트."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "기본키"
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "부모 카테고리의 {@link IHubChannelCategory.id}",
            "description": "부모 카테고리의 {@link IHubChannelCategory.id}."
          },
          "name": {
            "type": "string",
            "title": "채널 카테고리 이름",
            "description": "채널 카테고리 이름."
          },
          "background_color": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "inspired_red"
              },
              {
                "const": "apricot"
              },
              {
                "const": "yellow"
              },
              {
                "const": "green"
              },
              {
                "const": "blue"
              },
              {
                "const": "violet"
              },
              {
                "const": "pink"
              },
              {
                "const": "black"
              }
            ],
            "title": "카테고리 배경 색상",
            "description": "카테고리 배경 색상."
          },
          "background_image_url": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "카테고리 배경 이미지",
            "description": "카테고리 배경 이미지."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "parent",
          "children",
          "id",
          "parent_id",
          "name",
          "background_color",
          "background_image_url",
          "created_at"
        ],
        "description": "채널 카테고리 정보.\n\n`IHubChannelCategory` 는 특정 채널 내 분류 카테고리를 뜻하는 개념으로써,\n거래소에서 통상적으로 \"카테고리\" 라고 말하는 개념과, 정확히 일치한다.\n\n그리고 `IHubChannelCategory` 오프라인 시장에서의 독립적인 공간정보 격인 \"코너\" 를\n뜻하여, {@link IHubSale 매물}에 대한 동시 분류가 불가능한\n{@link IHubSection} 과는 달리, 하나의 매물이 여러 카테고리에 동시 분류될 수 있다.\n\n예를 들어 소고기와 포도는 섹션 상 각각 과일코너 및 정육코너에 귀속될 수 있으나,\n카테고리에 대해서는 그 어딘가에 귀속되는 일 없이, 각 상품의 특색에 따라 다양한\n카테고리들과 독자적인 M: N 관계를 맺을 수 있는 것.\n\n제품   | 코너     | 분류\n------|----------|--------------\n소고기 | 정육코너 | 냉동식품, 육류, 기호식품\n포도   | 과일코너 | 신선식품, 기호식품\n\n이외에 카테고리는 1: N 재귀구조를 가지니, 아래와 같이 계층적 표현이 가능하다. 또한\n각 {@link IHubChannel 채널}마다 카테고리를 서로 다르게 설정할 수 있으니, 각\n채널마다 자신들이 원하는 카테고리 분류를 마음껏 설정할 수 있다.\n\n- 식료품 > 육류 > 냉동\n- 전자기기 > 노트북 > 15 인치대\n- 잡화류 > 지갑\n\n또한, API 상 여러 카테고리 간 병합 기능을 지원(할 예정이기에), 카테고리를 상시 편집하는\n데에는 별다른 부담이 없을 것이다."
      },
      "IHubChannelCategory.IHierarchical": {
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubChannelCategory.IHierarchical"
            },
            "title": "자식 카테고리 리스트",
            "description": "자식 카테고리 리스트."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "기본키"
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "부모 카테고리의 {@link IHubChannelCategory.id}",
            "description": "부모 카테고리의 {@link IHubChannelCategory.id}."
          },
          "name": {
            "type": "string",
            "title": "채널 카테고리 이름",
            "description": "채널 카테고리 이름."
          },
          "background_color": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "inspired_red"
              },
              {
                "const": "apricot"
              },
              {
                "const": "yellow"
              },
              {
                "const": "green"
              },
              {
                "const": "blue"
              },
              {
                "const": "violet"
              },
              {
                "const": "pink"
              },
              {
                "const": "black"
              }
            ],
            "title": "카테고리 배경 색상",
            "description": "카테고리 배경 색상."
          },
          "background_image_url": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "카테고리 배경 이미지",
            "description": "카테고리 배경 이미지."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "children",
          "id",
          "parent_id",
          "name",
          "background_color",
          "background_image_url",
          "created_at"
        ],
        "description": "계층 정보."
      },
      "IHubSaleAggregate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "매물 ID\n{@link IHubSale.id}"
          },
          "sale_name": {
            "type": "string",
            "description": "매물 이름\n{@link IHubSale.name}"
          },
          "good": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubSaleGoodAggregate"
              }
            ],
            "title": "주문 상품에 대한 집계 정보",
            "description": "주문 상품에 대한 집계 정보."
          },
          "inquiry": {
            "$ref": "#/components/schemas/IHubSaleInquiryAggregate",
            "title": "질의문에 대한 집계 정보",
            "description": "질의문에 대한 집계 정보."
          },
          "issue": {
            "$ref": "#/components/schemas/IHubSaleIssueAggregate",
            "title": "이슈에 대한 집계 정보",
            "description": "이슈에 대한 집계 정보."
          },
          "view": {
            "$ref": "#/components/schemas/IHubSaleViewCountAggregate",
            "title": "매물 조회 통계",
            "description": "매물 조회 통계."
          },
          "fork": {
            "$ref": "#/components/schemas/IHubSaleForkAggregate",
            "description": "매물에 대한 다운로드 통계"
          },
          "bookmark": {
            "$ref": "#/components/schemas/IHubSaleBookmarkAggregate",
            "description": "매물에 대한 북마크 통계"
          }
        },
        "required": [
          "id",
          "sale_name",
          "good",
          "inquiry",
          "issue",
          "view",
          "fork",
          "bookmark"
        ],
        "description": "매물에 대한 집계 정보."
      },
      "IHubSaleGoodAggregate": {
        "type": "object",
        "properties": {
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              }
            ],
            "title": "날짜",
            "description": "날짜."
          },
          "latency": {
            "type": "number",
            "title": "상품 지연 시간",
            "description": "상품 지연 시간."
          },
          "knock_count": {
            "type": "integer",
            "title": "두드림 횟수",
            "description": "두드림 횟수.\n\n{@link IHubOrderGood 상품}으로써 {@link IHubOrder 주문 신청}은 하였으되,\n아직 {@link IHubOrder.published_at publish} 되지 아니한 건수까지 포함한 수.\n\n  - (not published) = (knock) - (publish)"
          },
          "publish_count": {
            "type": "integer",
            "title": "판매 횟수",
            "description": "판매 횟수.\n\n매물이 {@link IHubOrderGood 주문 상품}으로써 최종 판매 확정된 횟수."
          },
          "failed_count": {
            "type": "integer",
            "title": "실패 건수",
            "description": "실패 건수."
          },
          "success_count": {
            "type": "integer",
            "title": "성공 건수",
            "description": "성공 건수."
          },
          "total_call_count": {
            "type": "integer",
            "title": "API 호출 횟수",
            "description": "API 호출 횟수."
          },
          "fixed": {
            "type": "number",
            "minimum": 0,
            "title": "고정비 매출 총액",
            "description": "고정비 매출 총액."
          },
          "variable": {
            "type": "number",
            "minimum": 0,
            "title": "변동비 매출 총액",
            "description": "변동비 매출 총액."
          }
        },
        "required": [
          "date",
          "latency",
          "knock_count",
          "publish_count",
          "failed_count",
          "success_count",
          "total_call_count",
          "fixed",
          "variable"
        ],
        "description": "매물 관련 주문 상품에 대한 집계 정보."
      },
      "IHubSaleInquiryAggregate": {
        "type": "object",
        "properties": {
          "question": {
            "$ref": "#/components/schemas/IHubSaleInquiryAggregate.IQuestion",
            "title": "질문 집계 정보",
            "description": "질문 집계 정보."
          },
          "review": {
            "$ref": "#/components/schemas/IHubSaleInquiryAggregate.IReview",
            "title": "리뷰 집계 정보",
            "description": "리뷰 집계 정보."
          }
        },
        "required": [
          "question",
          "review"
        ],
        "description": "매물 관련 질의에 대한 집계 정보."
      },
      "IHubSaleInquiryAggregate.IQuestion": {
        "type": "object",
        "properties": {
          "hit": {
            "type": "integer",
            "title": "조회수",
            "description": "조회수."
          },
          "count": {
            "type": "integer",
            "title": "질문글 개수",
            "description": "질문글 개수."
          },
          "answer_count": {
            "type": "integer",
            "title": "답변글 개수",
            "description": "답변글 개수."
          }
        },
        "required": [
          "hit",
          "count",
          "answer_count"
        ],
        "description": "질문 집계 정보."
      },
      "IHubSaleInquiryAggregate.IReview": {
        "type": "object",
        "properties": {
          "hit": {
            "type": "integer",
            "title": "조회수",
            "description": "조회수."
          },
          "count": {
            "type": "integer",
            "title": "리뷰글 개수",
            "description": "리뷰글 개수."
          },
          "answer_count": {
            "type": "integer",
            "title": "답변글 개수",
            "description": "답변글 개수."
          },
          "statistics": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubSaleInquiryAggregate.IStatistics"
              }
            ],
            "title": "평점 통계정보",
            "description": "평점 통계정보."
          },
          "intervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleInquiryAggregate.IInterval"
            },
            "minItems": 0,
            "maxItems": 11,
            "title": "평점 구간별 통계정보",
            "description": "평점 구간별 통계정보."
          }
        },
        "required": [
          "hit",
          "count",
          "answer_count",
          "statistics",
          "intervals"
        ],
        "description": "리뷰 집계 정보."
      },
      "IHubSaleInquiryAggregate.IStatistics": {
        "type": "object",
        "properties": {
          "average": {
            "type": "number",
            "title": "평균",
            "description": "평균."
          },
          "stdev": {
            "type": "number",
            "title": "표준편차",
            "description": "표준편차."
          }
        },
        "required": [
          "average",
          "stdev"
        ],
        "description": "평점 통계정보."
      },
      "IHubSaleInquiryAggregate.IInterval": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "title": "구간",
            "description": "구간."
          },
          "count": {
            "type": "number",
            "title": "개수",
            "description": "개수."
          }
        },
        "required": [
          "score",
          "count"
        ],
        "description": "평점 구간별 통계정보."
      },
      "IHubSaleIssueAggregate": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "title": "이슈 게시물 개수",
            "description": "이슈 게시물 개수."
          },
          "closed_count": {
            "type": "number",
            "title": "해결된 이슈 개수",
            "description": "해결된 이슈 개수."
          },
          "opened_count": {
            "type": "number",
            "title": "오픈된 이슈 개수",
            "description": "오픈된 이슈 개수."
          },
          "fee": {
            "$ref": "#/components/schemas/IHubSaleIssueAggregate.IFee",
            "title": "과금액에 대한 통계 정보",
            "description": "과금액에 대한 통계 정보."
          }
        },
        "required": [
          "count",
          "closed_count",
          "opened_count",
          "fee"
        ],
        "description": "매물 관련 이슈에 대한 집계 정보."
      },
      "IHubSaleIssueAggregate.IFee": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "title": "과금 제시 건수",
            "description": "과금 제시 건수."
          },
          "approved_count": {
            "type": "number",
            "title": "과금 수락 건수",
            "description": "과금 수락 건수."
          },
          "payment": {
            "type": "number",
            "title": "과금액 지불 총계",
            "description": "과금액 지불 총계."
          }
        },
        "required": [
          "count",
          "approved_count",
          "payment"
        ],
        "description": "과금액에 대한 통계 정보."
      },
      "IHubSaleViewCountAggregate": {
        "type": "object",
        "properties": {
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              }
            ],
            "title": "날짜",
            "description": "날짜."
          },
          "view_count": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number",
                "minimum": 0
              }
            ],
            "title": "조회 횟수",
            "description": "조회 횟수."
          },
          "viewer_count": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number",
                "minimum": 0
              }
            ],
            "title": "조회자 수",
            "description": "조회자 수."
          },
          "total_view_count": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number",
                "minimum": 0
              }
            ],
            "title": "총 조회 횟수",
            "description": "총 조회 횟수."
          }
        },
        "required": [
          "date",
          "view_count",
          "viewer_count",
          "total_view_count"
        ],
        "description": "매물 조회 횟수에 대한 집계 정보."
      },
      "IHubSaleForkAggregate": {
        "type": "object",
        "properties": {
          "fork_count": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number",
                "minimum": 0
              }
            ]
          },
          "total_fork_count": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number",
                "minimum": 0
              }
            ]
          }
        },
        "required": [
          "fork_count",
          "total_fork_count"
        ],
        "description": "해당 매물 다운로드 집계 정보."
      },
      "IHubSaleBookmarkAggregate": {
        "type": "object",
        "properties": {
          "bookmark_count": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number",
                "minimum": 0
              }
            ],
            "title": "북마크 횟수",
            "description": "북마크 횟수."
          },
          "total_bookmark_count": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "number",
                "minimum": 0
              }
            ],
            "title": "총 북마크 횟수",
            "description": "총 북마크 횟수."
          }
        },
        "required": [
          "bookmark_count",
          "total_bookmark_count"
        ]
      },
      "IHubSaleContent.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "title": {
            "type": "string",
            "title": "제목",
            "description": "제목."
          },
          "summary": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "간단 설명",
            "description": "간단 설명."
          },
          "icons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile"
            },
            "title": "제품 대표 이미지 리스트",
            "description": "제품 대표 이미지 리스트."
          }
        },
        "required": [
          "id",
          "title",
          "summary",
          "icons"
        ]
      },
      "IAttachmentFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of attachment file",
            "description": "Creation time of attachment file."
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "File name, except extension",
            "description": "File name, except extension.\n\nPossible to make empy string like `.gitignore` case."
          },
          "extension": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "minLength": 1,
                "maxLength": 8
              }
            ],
            "title": "Extension",
            "description": "Extension.\n\nPossible to omit like `README` case."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "title": "URL path of the real file",
            "description": "URL path of the real file."
          }
        },
        "required": [
          "id",
          "created_at",
          "name",
          "extension",
          "url"
        ],
        "description": "Attachment File.\n\nEvery attachment files that are managed in current system.\n\nFor reference, it is possible to omit one of file {@link name}\nor {@link extension} like `.gitignore` or `README` case, but not\npossible to omit both of them."
      },
      "IHubSaleUnit.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "name": {
            "type": "string",
            "title": "유닛의 대표 이름",
            "description": "유닛의 대표 이름."
          },
          "primary": {
            "type": "boolean",
            "title": "주 유닛 여부",
            "description": "주 유닛 여부.\n\n단순 표기상 속성으로, 라벨링 이상의 의미는 없다."
          },
          "required": {
            "type": "boolean",
            "title": "필수 유닛 여부",
            "description": "필수 유닛 여부.\n\n만일 본 유닛이 필수라면, 고객이 이를 배제하고 구매할 수 없다."
          },
          "purposes": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.Purpose"
                },
                "uniqueItems": true
              }
            ],
            "title": "릴리즈된 유닛의 추출목적",
            "description": "릴리즈된 유닛의 추출목적.\n\n{@link IStudioRepositoryReleaseNode.Purpose}를 참고하면 된다."
          },
          "connector_icons": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                },
                "uniqueItems": true
              }
            ],
            "title": "커넥터 아이콘 리스트",
            "description": "커넥터 아이콘 리스트.\n\n커넥터 아이콘은, 본 매물이 연동되어 있는 외부 서비스들의 아이콘을 의미한다."
          },
          "migrated": {
            "type": "boolean",
            "title": "Studio v1.0 으로부터 이전된 툴인지 여부",
            "description": "Studio v1.0 으로부터 이전된 툴인지 여부."
          }
        },
        "required": [
          "id",
          "name",
          "primary",
          "required",
          "purposes",
          "connector_icons",
          "migrated"
        ],
        "description": "매물 유닛의 요약 정보."
      },
      "IStudioRepositoryReleaseNode.Purpose": {
        "oneOf": [
          {
            "const": "app"
          },
          {
            "const": "agent"
          }
        ],
        "title": "추출 목적",
        "description": "추출 목적.\n\napp: 앱 웹사이트 형태로 추출.\n\nagent: 챗봇 웹사이트 형태로 추출."
      },
      "IHubCouponCriteriaOfFunnel": {
        "type": "object",
        "properties": {
          "funnels": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IHubCouponCriteriaOfFunnel.IPathFunnel"
                },
                {
                  "$ref": "#/components/schemas/IHubCouponCriteriaOfFunnel.IReferrerFunnel"
                },
                {
                  "$ref": "#/components/schemas/IHubCouponCriteriaOfFunnel.IVariableFunnel"
                }
              ],
              "discriminator": {
                "propertyName": "kind",
                "mapping": {
                  "url": "#/components/schemas/IHubCouponCriteriaOfFunnel.IPathFunnel",
                  "referrer": "#/components/schemas/IHubCouponCriteriaOfFunnel.IReferrerFunnel",
                  "variable": "#/components/schemas/IHubCouponCriteriaOfFunnel.IVariableFunnel"
                }
              }
            },
            "minItems": 1,
            "title": "유입 경로에 대한 개별 조건 리스트",
            "description": "유입 경로에 대한 개별 조건 리스트."
          },
          "type": {
            "const": "funnel",
            "title": "조건의 상세 타입",
            "description": "조건의 상세 타입.\n\nDiscriminated union 의 식별자 역할."
          },
          "direction": {
            "oneOf": [
              {
                "const": "include"
              },
              {
                "const": "exclude"
              }
            ],
            "title": "제약 조건이 적용되는 방향",
            "description": "제약 조건이 적용되는 방향.\n\n- include: 포함 조건\n- exclude: 배제 조건"
          }
        },
        "required": [
          "funnels",
          "type",
          "direction"
        ],
        "description": "할인 쿠폰의 유입 경로 제한.\n\n{@link IHubCouponCriteriaOfFunnel} 은 {@link IHubCouponCriteria} 의 서브타입\n엔티티로써, {@link IHubCoupon 할인 쿠폰}을 특정한 경로에서 유입된 고객에게만\n발급 또는 배제하고자 할 때 사용한다.\n\n그리고 유입 경로 제한은 다음과 같이 3 가지 방식으로 가능하다. 첫째는\n{@link IHubCustomer.referrer} 이며, 이외에 고객의 접속 주소를 기록한\n{@link IHubCustomer.href} 를 파싱함으로써, 특정 URL 내지 변수 단위로 제약이 가능하다."
      },
      "IHubCoupon.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubCoupon.IRequest.ISearch",
            "title": "검색 정보",
            "description": "검색 정보."
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-coupon.name"
                },
                {
                  "const": "-coupon.value"
                },
                {
                  "const": "-coupon.unit"
                },
                {
                  "const": "-coupon.created_at"
                },
                {
                  "const": "-coupon.opened_at"
                },
                {
                  "const": "-coupon.closed_at"
                },
                {
                  "const": "+coupon.name"
                },
                {
                  "const": "+coupon.value"
                },
                {
                  "const": "+coupon.unit"
                },
                {
                  "const": "+coupon.created_at"
                },
                {
                  "const": "+coupon.opened_at"
                },
                {
                  "const": "+coupon.closed_at"
                }
              ]
            },
            "title": "정렬 기준",
            "description": "정렬 기준."
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 요청 정보."
      },
      "IHubCoupon.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "할인 쿠폰의 이름",
            "description": "할인 쿠폰의 이름."
          }
        },
        "description": "검색 정보."
      },
      "IPageIHubCoupon": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCoupon"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubDepositDonation.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubDepositDonation.IRequest.ISearch",
            "description": "검색 조건"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "-value"
                },
                {
                  "const": "+created_at"
                },
                {
                  "const": "+value"
                }
              ]
            },
            "description": "정렬 조건"
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "예치금 공여 내역 조회 및 페이지 정보"
      },
      "IHubDepositDonation.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string",
            "pattern": "^[0-9]*$"
          },
          "minimum": {
            "type": "number",
            "minimum": 0
          },
          "maximum": {
            "type": "number",
            "minimum": 0
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IPageIHubDepositDonation": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubDepositDonation"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubDepositDonation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "기본키"
          },
          "administrator": {
            "$ref": "#/components/schemas/IHubAdministrator.IInvert",
            "title": "예치금 공여를 관리한 관리자 역정보",
            "description": "예치금 공여를 관리한 관리자 역정보."
          },
          "citizen": {
            "$ref": "#/components/schemas/IHubCitizen",
            "description": "예치금 공여를 받은 시민의 {@link IHubCitizen}"
          },
          "value": {
            "type": "number",
            "minimum": 0,
            "title": "예치금의 입출금 금액",
            "description": "예치금의 입출금 금액.\n\n반드시 양의 수를 가지며, 입출금 여부는 {@link IHubDeposit.direction} 을 보면 된다.\n\n입출금에 대한 수 치를 각각 양/음수로 표현하고 싶다면, 이 또한 본 필드값에 귀속 {@link IHubDeposit.direction} 값을 곱 하면 된다."
          },
          "reason": {
            "type": "string",
            "description": "예치금 공여 사유"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "레코드 생성 일시"
          }
        },
        "required": [
          "id",
          "administrator",
          "citizen",
          "value",
          "reason",
          "created_at"
        ],
        "description": "예치금 공여.\n{@link IHubDepositDonation} 는 관리자가 특정 고객 시민에게 예치금을\n직접 공여하는 경우를 형상화한 엔티티이다.\n\n고객이 예치금을 우리의 결제 시스템을 통하지 않고,\n대면으로 직접 전달해주는 경우를 상정하고 설계하였다.\n\n경우에 따라서는 특정 기업과 후불 요금제 계약을 맺고,\n그 기업에게 매달 적당한 수준의 예치금을 부여하는 경 우 또한 생각해 볼 수 있다."
      },
      "IHubDepositDonation.ICreate": {
        "type": "object",
        "properties": {
          "citizen_id": {
            "type": "string",
            "format": "uuid",
            "description": "예치금 공여를 받을 시민의 ID"
          },
          "value": {
            "type": "number",
            "minimum": 0,
            "title": "예치금의 입출금 금액",
            "description": "예치금의 입출금 금액.\n\n반드시 양의 수를 가지며, 입출금 여부는 {@link IHubDeposit.direction} 을 보면 된다.\n\n입출금에 대한 수 치를 각각 양/음수로 표현하고 싶다면, 이 또한 본 필드값에 귀속 {@link IHubDeposit.direction} 값을 곱 하면 된다."
          },
          "reason": {
            "type": "string",
            "description": "예치금 공여 사유"
          }
        },
        "required": [
          "citizen_id",
          "value",
          "reason"
        ],
        "description": "예치금 공여 생성 정보"
      },
      "IHubDeposit.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubDeposit.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-deposit.source"
                },
                {
                  "const": "-deposit.code"
                },
                {
                  "const": "-deposit.direction"
                },
                {
                  "const": "+deposit.source"
                },
                {
                  "const": "+deposit.code"
                },
                {
                  "const": "+deposit.direction"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "예치금 목록 조회 및 페이지 정보"
      },
      "IHubDeposit.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "direction": {
            "oneOf": [
              {
                "const": -1
              },
              {
                "const": 1
              }
            ]
          }
        }
      },
      "IPageIHubDeposit": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubDeposit"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubDeposit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "기본"
          },
          "code": {
            "type": "string",
            "description": "식별자 코드"
          },
          "source": {
            "type": "string",
            "title": "예치금의 입출금을 일으키는 원천 테이블",
            "description": "예치금의 입출금을 일으키는 원천 테이블."
          },
          "direction": {
            "oneOf": [
              {
                "const": -1
              },
              {
                "const": 1
              }
            ],
            "description": "예치의 입출금 방향\n\n1: 충전 -1: 차감"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "레코드 생성"
          }
        },
        "required": [
          "id",
          "code",
          "source",
          "direction",
          "created_at"
        ],
        "description": "거래소에서의 예치금 입출금에 대한 명세 사양을 형상화한 엔티티이다.\n\n{@link IHubDeposit} 는 예치금의 입출금 내역을 의미하는 {@link IHubDepositHistory} 가 아니며,\n그저 예치금이 입출금되는 시나리오에 대한 스펙을 명세한 메타데이터일 뿐이다.\n참고로 본 gen-hub 는 거래 대상물인 API 특성상, 고객이 재화의 구매 시점 (API 호출 시점)\n에 맞추어 현 금을 즉시로 지불하는 것이 불가능하다.\n\n그 대신 본 시스템은 고객에게 예치금을 충전해두고, API 호출 시마다 이를 차감하는 방식으로 한다."
      },
      "IHubDeposit.ICreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "식별자 코드"
          },
          "source": {
            "type": "string",
            "title": "예치금의 입출금을 일으키는 원천 테이블",
            "description": "예치금의 입출금을 일으키는 원천 테이블."
          },
          "direction": {
            "oneOf": [
              {
                "const": -1
              },
              {
                "const": 1
              }
            ],
            "description": "예치의 입출금 방향\n\n1: 충전 -1: 차감"
          }
        },
        "required": [
          "code",
          "source",
          "direction"
        ],
        "description": "예치금 생성 정보."
      },
      "IHubOrderGoodIssueComment.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IBbsArticleComment.IRequest.ISearch",
            "title": "검색 정보",
            "description": "검색 정보."
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "+created_at"
                }
              ]
            },
            "title": "정렬 기준",
            "description": "정렬 기준."
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IBbsArticleComment.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          }
        }
      },
      "IPageIHubOrderGoodIssueComment": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubOrderGoodIssueComment"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubOrderGoodIssueComment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본키",
            "description": "기본키."
          },
          "writer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IHubCustomer"
              },
              {
                "$ref": "#/components/schemas/IHubSeller.IInvert"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "customer": "#/components/schemas/IHubCustomer",
                "seller": "#/components/schemas/IHubSeller.IInvert"
              }
            },
            "title": "작성자",
            "description": "작성자.\n\n{@link IHubCustomer} 또는 {@link IHubSeller} 작성합니다."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticleComment.ISnapshot"
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "id",
          "writer",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "구매 상품 관련 이슈 게시글 댓글.\n\n{@link IBbsArticleComment} 의 서브타입 엔티티로써, 주문 상품에 대하여 작성된 이슈에 관하여, 고객과 판매자가 상호 소통할 때 사용한다.\n\n참고로 이슈가 종료된 이후로도, 댓글은 계속 작성할 수 있다."
      },
      "IHubCustomer": {
        "type": "object",
        "properties": {
          "type": {
            "const": "customer",
            "title": "Discriminated union 타입의 구분자",
            "description": "Discriminated union 타입의 구분자."
          },
          "member": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubMember"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "member": "#/components/schemas/IHubMember"
              }
            },
            "title": "회원 정보",
            "description": "회원 정보.\n\n회원 가입 또는 로그인하지 아니한 경우, 이 정보는 `null`."
          },
          "citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubCitizen"
              }
            ],
            "title": "시민 정보",
            "description": "시민 정보.\n\n고객이 본인 인증을 행하였거나, 아니면 과거 그리하였거나."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "channel": {
            "$ref": "#/components/schemas/IHubChannel",
            "title": "귀속 채널 정보",
            "description": "귀속 채널 정보.\n\n어느 채널의 고객인가?"
          },
          "external_user": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubExternalUser"
              }
            ],
            "title": "외부 사용자 정보",
            "description": "외부 사용자 정보.\n\n외부 서비스로부터 접속한 고객의 경우에 해당."
          },
          "href": {
            "type": "string",
            "format": "uri",
            "title": "접속 주소",
            "description": "접속 주소.\n\n{@link window.location.href} 와 동일한 값."
          },
          "referrer": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "string",
                "maxLength": 0
              }
            ],
            "title": "유입 주소",
            "description": "유입 주소.\n\n{@link window.document.referrer} 와 동일한 값."
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ],
            "title": "접속 IP 주소",
            "description": "접속 IP 주소."
          },
          "readonly": {
            "type": "boolean",
            "title": "읽기 전용 여부",
            "description": "읽기 전용 여부."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시, 접속 일시와 동의어",
            "description": "레코드 생성 일시, 접속 일시와 동의어."
          }
        },
        "required": [
          "type",
          "member",
          "citizen",
          "id",
          "channel",
          "external_user",
          "href",
          "referrer",
          "ip",
          "readonly",
          "created_at"
        ],
        "description": "고객 정보, but 사람이 아닌 접속 기준.\n\n`IHubCustomer` 는 문자 그대로 시장에 고객으로써 참여한 이의 정보를 형상화한\n엔티티이다. `IHubCustomer` 는 설령 동일 인물이더라도, 매 접속시마다 새 레코드를\n발급하고 있다.\n\n이는 고객의 유입 경로를 상세하게 추적하기 위함이 첫 번째 목적이고, 동일 인물이\n비회원으로 들어와 열심히 {@link IHubSale 매물}들을\n{@link IHubCartCommodity 장바구니}에 담은 후, 결제하는 순간에라야\n{@link IHubCitizen 실명 인증} 내지 {@link IHubMember 회원가입/로그인}하는 경우를\n위함이 두 번째이다. 마지막으로 동일 인물이 {@link IHubExternalUser 외부 서비스}로도\n접속하여 구매하고, 여러 개의 계정을 만들어서 구매하고, 비회원이다가 실명 인증만 한 채로\n구매하고, 때로는 회원가입하여 {@link IHubSeller 판매자}나\n{@link IHubAdministrator 관리자}로써 활동하는 등, 한 인물이 다양한 방식으로 거래소에서\n행하는 활동을 정확하게 추적하기 위함이다.\n\n따라서 `IHubCustomer` 는 동일한 {@link IHubCitizen} 이나 {@link IHubMember} 및\n{@link IHubExternalUser} 를 가지는 레코드가, 얼마든지 복수로 존재할 수 있다. 또한\n고객이 실명 인증 이후에 회원 가입을 하거나, 외부 서비스 유저이다가 자사 서비스에\n가입하는 이유 등이 발생하거든, 관련 레코드가 모두 일괄 변경된다. 때문에 고객에 대한\n식별 및 추적이 매우 체계적으로 이루어질 수 있는 것."
      },
      "IBbsArticleComment.ISnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
          },
          "format": {
            "$ref": "#/components/schemas/IBbsArticleComment.Format",
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "body": {
            "type": "string",
            "title": "Content body of comment",
            "description": "Content body of comment."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "body",
          "files"
        ],
        "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment}, designed to keep evidence\nand prevent fraud."
      },
      "IBbsArticleComment.Format": {
        "oneOf": [
          {
            "const": "txt"
          },
          {
            "const": "md"
          },
          {
            "const": "html"
          }
        ]
      },
      "IAttachmentFile.ICreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "File name, except extension",
            "description": "File name, except extension.\n\nPossible to make empy string like `.gitignore` case."
          },
          "extension": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "minLength": 1,
                "maxLength": 8
              }
            ],
            "title": "Extension",
            "description": "Extension.\n\nPossible to omit like `README` case."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "title": "URL path of the real file",
            "description": "URL path of the real file."
          }
        },
        "required": [
          "name",
          "extension",
          "url"
        ]
      },
      "IHubOrderGoodIssue.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubOrderGoodIssue.IRequest.ISearch",
            "title": "검색 정보",
            "description": "검색 정보."
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "+created_at"
                },
                {
                  "const": "-title"
                },
                {
                  "const": "-updated_at"
                },
                {
                  "const": "-nickname"
                },
                {
                  "const": "-fee_amount"
                },
                {
                  "const": "-fee_count"
                },
                {
                  "const": "+title"
                },
                {
                  "const": "+updated_at"
                },
                {
                  "const": "+nickname"
                },
                {
                  "const": "+fee_amount"
                },
                {
                  "const": "+fee_count"
                }
              ]
            },
            "title": "정렬 기준",
            "description": "정렬 기준."
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "이슈 게시글 검색 및 페이지 정보."
      },
      "IHubOrderGoodIssue.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "title_or_content": {
            "type": "string"
          }
        },
        "description": "검색 정보."
      },
      "IPageIHubOrderGoodIssue.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubOrderGoodIssue.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubOrderGoodIssue.ISummary": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IHubCustomer"
              },
              {
                "$ref": "#/components/schemas/IHubSeller.IInvert"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "customer": "#/components/schemas/IHubCustomer",
                "seller": "#/components/schemas/IHubSeller.IInvert"
              }
            }
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "title": {
            "type": "string",
            "title": "Title of the last snapshot",
            "description": "Title of the last snapshot."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the article",
            "description": "Creation time of the article."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modification time of the article",
            "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
          }
        },
        "required": [
          "writer",
          "id",
          "title",
          "created_at",
          "updated_at"
        ]
      },
      "IHubOrderGoodIssue": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IHubCustomer"
              },
              {
                "$ref": "#/components/schemas/IHubSeller.IInvert"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "customer": "#/components/schemas/IHubCustomer",
                "seller": "#/components/schemas/IHubSeller.IInvert"
              }
            },
            "title": "작성자",
            "description": "작성자.\n\n{@link IHubCustomer} 또는 {@link IHubSeller}가 작성 합니다."
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubOrderGoodIssueFee"
            },
            "title": "수임료 제시 리스트",
            "description": "수임료 제시 리스트."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticle.ISnapshot"
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "writer",
          "fees",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "구매 상품 관련 이슈 게시글.\n\n{@link IHubOrderGoodIssue}는 고객이 주문하고 결제 완료하여 구성된 상품에 대하여, 고객 및 판매자 양측이 상 호간에 이슈를 제기할 수 있는 게시판이다.\n\n고객과 판매자는 상품에 대하여, 주제 단위별로 이슈 게시글을 작성하고, 그 안에서 댓글로 토의를 이어나가면된다.\n\n또한, 이슈의 종류 중에는 고객이 판매자에게 커스텀 제작이나 개조 등의 추가 작업을 요청할 수도 있는 법이다. 이 경우, 판매자는 고객에게 수임료를 부과, 추가 작업에 대한 정당한 비용 청구가 가능하다.\n\n마지막으로, 이슈를 작성한 고객 또는 판매자는, 이슈를 완결한 후 이를 종료 (closed_at) 처리할 수 있다.\n단, 이슈를 종료한 이후에도, 해당 이슈에 댓글을 계속 작성하는 것이 가능하며, 판매자가 수임료를 부과하는 것 또 한 동일하게 가능하다."
      },
      "IHubOrderGoodIssueFee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본키",
            "description": "기본키."
          },
          "value": {
            "type": "number",
            "minimum": 0,
            "title": "수임료 금액",
            "description": "수임료 금액."
          },
          "accept": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubOrderGoodIssueFeeAccept"
              }
            ],
            "description": "{@link IHubOrderGoodIssueFeeAccept}\n수임료를 수락한 경우에만 값이 존재한다."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "수임료를 청구한 시각",
            "description": "수임료를 청구한 시각."
          }
        },
        "required": [
          "id",
          "value",
          "accept",
          "created_at"
        ],
        "description": "이슈 해결을 위한 수임료 제시.\n\n{@link IHubOrderGoodIssueFee}는  판매자가 고객이 주문한 상품에 대한 이슈를 해결해주며, 고객에게 제시하는 수임료를 의미한다.\n주로 고객이 이슈를 통하여 커스텀 제작이나 개조 등의 추가 작업을 요청하는 경우에 발생한다.\n\n고객은 이에 응하여 수임료를 지불할 수도 있고, 거절할 수도 있으며, 경우에 따라서는 가격을 갂아달라 네고를 할 수도 있다.\n만약 판매자가 이에 응하여 가격을 조정하려거든, 현 레코드를 삭제하고 새 수임료 레코드를 다시 발행하면 된다."
      },
      "IHubOrderGoodIssueFeeAccept": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "기본키"
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "description": "{@link IHubCustomer}\n\n수임료를 청구받은 고객."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성일시",
            "description": "레코드 생성일시."
          },
          "published_at": {
            "type": "string",
            "format": "date-time",
            "title": "수임료 수락의 효력 개시 일시",
            "description": "수임료 수락의 효력 개시 일시."
          },
          "canceled_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "수임료의 취소 일시",
            "description": "수임료의 취소 일시.\n\n효력이 발효한 이후 취소 불가능."
          }
        },
        "required": [
          "id",
          "customer",
          "created_at",
          "published_at"
        ],
        "description": "판매자가 부과한 이슈 수임료를, 고객이 받아들여 수락하는 행위를 형상화한 엔티티이다.\n\n참고로 수임료를 고객이 수락한 순간과, 이에 대한 효력이 발휘되는 시점을 다르게 할 수 있다.\n\n즉, 현 시점에서 수임료를 수락하여 예치금이 인출되기는 하되, 이에 대한 효력을 뒤로 미루어, 판매자가 작업에 대한 착수를 미 래에 하게끔 한다던가,\n여지를 두어 향후 번복을 한다던가 하는게 가능하다."
      },
      "IBbsArticle.ISnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
          },
          "format": {
            "$ref": "#/components/schemas/IBbsArticle.Format",
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle}, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
      },
      "IBbsArticle.Format": {
        "oneOf": [
          {
            "const": "txt"
          },
          {
            "const": "md"
          },
          {
            "const": "html"
          }
        ]
      },
      "IPage.IRequest": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "Page request data"
      },
      "IPageIHubSaleSnapshot.IInvert": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleSnapshot.IInvert"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubSaleSnapshot.IInvert": {
        "type": "object",
        "properties": {
          "section": {
            "$ref": "#/components/schemas/IHubSection",
            "title": "귀속 섹션 정보",
            "description": "귀속 섹션 정보."
          },
          "seller": {
            "$ref": "#/components/schemas/IHubSeller.IInvert",
            "title": "매물을 등록한 판매자",
            "description": "매물을 등록한 판매자."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "매물의 ID",
            "description": "매물의 ID."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "스냅샷의 ID",
            "description": "스냅샷의 ID."
          },
          "latest": {
            "type": "boolean",
            "title": "마지막 스냅샷 여부",
            "description": "마지막 스냅샷 여부.\n\n본 스냅샷이 귀속 매물의 가장 마지막 스냅샷인가?\n\n단, 본 매물을 조회하는 유저의 관점에 따라, \"마지막\" 의 기준이 다르다.\n\n- 고객 관점: 가장 마지막에 승인된 매물\n- 판매자/관리자: 가장 마지막에 작성된 매물"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleChannel"
            },
            "title": "채널/카테고리 리스트",
            "description": "채널/카테고리 리스트.\n\n본 매물이 판매되는 채널과 카테고리들의 일람."
          },
          "aggregate": {
            "$ref": "#/components/schemas/IHubSaleAggregate",
            "title": "본 매물 (또는 스냅샷) 에 대한 집계/성과 정보",
            "description": "본 매물 (또는 스냅샷) 에 대한 집계/성과 정보."
          },
          "content": {
            "$ref": "#/components/schemas/IHubSaleContent.IInvert",
            "title": "컨텐츠 정보",
            "description": "컨텐츠 정보.\n\n판매자가 매물을 등록하며 작성한 서술 정보."
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnit.IInvert"
            },
            "minItems": 1,
            "title": "유닛 리스트",
            "description": "유닛 리스트.\n\n현 매물이 취급하는 제품들에 대하여 표현하는 레코드로써, 각각의 제품에 대하여\n설정할 수 있는 {@link IHubSaleUnitOption 옵션} 및, 옵션들을 선택하여\n구성할 수 있는 최종 구성품 {@link IHubSaleUnitStock 스톡}에 대한 정보를\n담고 있다."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그 값 리스트",
            "description": "검색 태그 값 리스트."
          },
          "version": {
            "type": "string",
            "title": "버전명",
            "description": "버전명.\n\n{@link ISwaggerInfo.version} 과 다른 값을 설정할 수 있다.\n\n즉, 서버 스펙 (스웨거 문서) 상 버전명과, 제품상 버전명이 다를 수 있음."
          },
          "version_description": {
            "type": "string",
            "title": "버전 설명",
            "description": "버전 설명."
          },
          "activated_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "스냅샷의 활성화 시각",
            "description": "스냅샷의 활성화 시각.\n\n본 스냅샷이 심사 승인되어, 최초 활성화된 시각."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "현 매물 (스냅샷) 의 API 들이 중단되는 시각",
            "description": "현 매물 (스냅샷) 의 API 들이 중단되는 시각.\n\n거래 대상물이 API 인 본 시스템의 특성상, 판매자가 매물을 판매 중단했따하여\n그것이 곧바로 삭제되어서는 안된다. 최소한의 이용 기간을 보장해주어야, 해당\nAPI 를 사용하는 고객들이 이에 대응할 것이 아니겠는가?\n\n때문에 매물에 대한 판매 중단시, 일정 유예 기간을 두고 사라지도록 하고 있다.\n\n물론, 단 한 번도 판매된 적 없는 매물이거든, 해당 없음."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "paused_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 일시정지 일시",
            "description": "판매 일시정지 일시.\n\n판매자가 모종의 이유로 API 판매를 일시적으로 중단한 상태.\n\n고객은 여전히 리스트 및 상세 페이지에서 해당 매물을 열람할 수 있으되, 해당 매물에는\n\"판매자가 일시 중지된 상품입니다\" 라는 라벨이 붙는다."
          },
          "suspended_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 중단 일시",
            "description": "판매 중단 일시.\n\n판매자가 모종의 이유로 판매를 중단한 상태.\n\n고객은 해당 매물을 리스트 및 상세 페이지에서 일절 조회할 수 업다. 언뜻 보면\nsoft delete 와 비슷해보이나, 판매 당사자와 관리자는 여전히 이를 조회할 수 있고,\n언제든지 판매를 재개할 수 있다는 점이 다르다.\n\n또한 판매자 중단되었다한들, 해당 매물의 기 구매자들은 여전히 해당 API 를 사용할\n수 있다. API 의 중단 시점은 {@link IHubSaleSnapshot.expired_at} 속성을 참고할\n것."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 개시 일시",
            "description": "판매 개시 일시."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 종료 일시",
            "description": "판매 종료 일시.\n\n이 값이 NULL 이거든, 판매가 영원히 계속된다."
          }
        },
        "required": [
          "section",
          "seller",
          "id",
          "snapshot_id",
          "latest",
          "channels",
          "aggregate",
          "content",
          "units",
          "tags",
          "version",
          "version_description",
          "activated_at",
          "expired_at",
          "created_at",
          "paused_at",
          "suspended_at",
          "opened_at",
          "closed_at"
        ],
        "description": "매물 스냅샷의 역 참조 정보.\n\n`IHubSaleSnapshot.IInvert` 는 {@link IHubCartCommodity} 관점에서 바라본\n매물 스냅샷의 역 참조 정보를 형상화한 자료구조 인터페이스이며,\n따라서 DB 개념 상, {@link IHubCartCommodityStock} 에 대응되는 구조이다\n\n따라서 `IHubSaleSnapshot.IInvert` 는 매물 스냅샷의 모든 {@link IHubSaleUnit}\n와 {@link IHubSaleUnitStock} 및 {@link IHubSaleUnitStockPrice} 레코드를 가지는\n게 아니라, 단지 그 중에 {@link IHubCartCommodity 장바구니에 담긴} 요소들만을 가지고\n있을 뿐이다."
      },
      "IHubSaleUnit.IInvert": {
        "type": "object",
        "properties": {
          "stock": {
            "$ref": "#/components/schemas/IHubSaleUnitStock.IInvert",
            "title": "구매한(할) 스톡",
            "description": "구매한(할) 스톡."
          },
          "release": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioRepositoryRelease.IForSale"
              }
            ],
            "title": "귀속 릴리즈 정보",
            "description": "귀속 릴리즈 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "name": {
            "type": "string",
            "title": "유닛의 대표 이름",
            "description": "유닛의 대표 이름."
          },
          "primary": {
            "type": "boolean",
            "title": "주 유닛 여부",
            "description": "주 유닛 여부.\n\n단순 표기상 속성으로, 라벨링 이상의 의미는 없다."
          },
          "required": {
            "type": "boolean",
            "title": "필수 유닛 여부",
            "description": "필수 유닛 여부.\n\n만일 본 유닛이 필수라면, 고객이 이를 배제하고 구매할 수 없다."
          },
          "purposes": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.Purpose"
                },
                "uniqueItems": true
              }
            ],
            "title": "릴리즈된 유닛의 추출목적",
            "description": "릴리즈된 유닛의 추출목적.\n\n{@link IStudioRepositoryReleaseNode.Purpose}를 참고하면 된다."
          },
          "connector_icons": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                },
                "uniqueItems": true
              }
            ],
            "title": "커넥터 아이콘 리스트",
            "description": "커넥터 아이콘 리스트.\n\n커넥터 아이콘은, 본 매물이 연동되어 있는 외부 서비스들의 아이콘을 의미한다."
          },
          "migrated": {
            "type": "boolean",
            "title": "Studio v1.0 으로부터 이전된 툴인지 여부",
            "description": "Studio v1.0 으로부터 이전된 툴인지 여부."
          }
        },
        "required": [
          "stock",
          "release",
          "id",
          "name",
          "primary",
          "required",
          "purposes",
          "connector_icons",
          "migrated"
        ],
        "description": "매물 유닛의 역 참조 정보.\n\n`IHubSaleUnit.IInvert` 는 {@link IHubCartCommodity} 관점에 바라본\n매물 유닛의 역 참조 정보를 형상화한 자료구조 인터페이스이며,\n따라서 DB 개념상, {@link IHubCartCommodityStock} 에 대응되는 구조이다.\n\n따라서 `IHubSaleUnit.IInvert` 는 매물 유닛의 모든 {@link IHubSaleUnitStock}\n레코드를 가지는 게 아니라, 단지 그 중에 {@link IHubCartCommodity 장바구니에 담긴}\n요소들만을 가지고 있을 뿐이다."
      },
      "IHubSaleUnitStock.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "name": {
            "type": "string",
            "title": "스톡의 대표 이름",
            "description": "스톡의 대표 이름."
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnitStockChoice.IInvert"
            },
            "title": "본 스톡의 선택 정보",
            "description": "본 스톡의 선택 정보.\n\n고객이 각각 어떠한 옵션과 후보값을 선택하여 구성되었는가."
          },
          "price": {
            "$ref": "#/components/schemas/IHubSaleUnitStockPrice.IInvert",
            "title": "본 스톡의 가격 정보",
            "description": "본 스톡의 가격 정보."
          }
        },
        "required": [
          "id",
          "name",
          "choices",
          "price"
        ],
        "description": "스톡의 주문 상 역 참조 정보."
      },
      "IHubSaleUnitStockChoice.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "option": {
            "$ref": "#/components/schemas/IHubSaleUnitOption.IInvert",
            "title": "귀속 옵션 정보",
            "description": "귀속 옵션 정보."
          },
          "candidate": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubSaleUnitOptionCandidate"
              }
            ],
            "title": "고객이 선택한 후보값 정보",
            "description": "고객이 선택한 후보값 정보."
          },
          "value": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ],
            "title": "고객의 서술 정보",
            "description": "고객의 서술 정보."
          }
        },
        "required": [
          "id",
          "option",
          "candidate",
          "value"
        ],
        "description": "최종 구성품 선택의 역 참조 정보."
      },
      "IHubSaleUnitOption.IInvert": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IHubSaleUnitSelectableOption.IInvert"
          },
          {
            "$ref": "#/components/schemas/IHubSaleUnitDescriptiveOption.IInvert"
          }
        ],
        "title": "옵션의 역 참조 정보",
        "description": "옵션의 역 참조 정보."
      },
      "IHubSaleUnitSelectableOption.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "select",
            "title": "옵션의 타입",
            "description": "옵션의 타입."
          },
          "variable": {
            "type": "boolean",
            "title": "가변형 여부",
            "description": "가변형 여부.\n\n이 속성값이 `true` 이거든, 본 옵션은 고객이\n{@link IHubSaleUnitOptionCandidate 후보값}으로 무엇을 선택하냐에 따라,\n구매하게 되는 {@link IHubSaleUnitStock 최종 구성품}이 달라진다.\n\n반대로 이 값이 `false` 이거든, 고객이 {@link IHubSaleUnitOptionCandidate 후보값}으로\n그 무엇을 선택하던, 이는 {@link IHubSaleUnitStock 최종 구성품}에 영향을 주지 아니한다.\n그저 판매자가 참고하는 단순 정보에 불과할 뿐,"
          },
          "name": {
            "type": "string",
            "title": "옵션의 대표 이름",
            "description": "옵션의 대표 이름."
          }
        },
        "required": [
          "id",
          "type",
          "variable",
          "name"
        ]
      },
      "IHubSaleUnitDescriptiveOption.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "oneOf": [
              {
                "const": "string"
              },
              {
                "const": "number"
              },
              {
                "const": "boolean"
              }
            ],
            "title": "서술형 옵션의 타입",
            "description": "서술형 옵션의 타입.\n\n어떠한 형식이 입력되어야 하는가."
          },
          "name": {
            "type": "string",
            "title": "서술형 옵션의 대표 이름",
            "description": "서술형 옵션의 대표 이름."
          }
        },
        "required": [
          "id",
          "type",
          "name"
        ],
        "description": "서술형 옵션의 역 참조 정보."
      },
      "IHubSaleUnitOptionCandidate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "name": {
            "type": "string",
            "title": "후보값의 대표 이름",
            "description": "후보값의 대표 이름."
          }
        },
        "required": [
          "id",
          "name"
        ],
        "description": "옵션 내 선택 가능 후보 값.\n\n`IHubSaleUnitOptionCandidate` 는\n{@link IHubSaleUnitSelectableOption \"select\" 타입의 옵션}에서 선택할 수 있는,\n개개별별 후보값을 형상화한 엔티티이다.\n\n- 사례\n  - 옵션) RAM: 8GB, 16GB, 32GB\n  - 옵션) GPU: RTX 3060, RTX 4080, TESLA\n  - 옵션) 라이선스 종류: 개인용, 상업용, 교육용\n\n다만 귀속 옵션의 타입이 \"select\" 가 아니라면 ({@link IHubSaleUnitDescriptiveOption}),\n본 엔티티는 필요 없다."
      },
      "IHubSaleUnitStockPrice.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "threshold": {
            "type": "integer",
            "title": "역치, 고정 금액 {@link fixed} 내 무료 API 호출 가능 수량",
            "description": "역치, 고정 금액 {@link fixed} 내 무료 API 호출 가능 수량."
          },
          "fixed": {
            "$ref": "#/components/schemas/IHubOrderPrice.ISummary",
            "title": "고정비",
            "description": "고정비."
          },
          "variable": {
            "$ref": "#/components/schemas/IHubOrderPrice.ISummary",
            "title": "변동비",
            "description": "변동비."
          }
        },
        "required": [
          "id",
          "threshold",
          "fixed",
          "variable"
        ],
        "description": "스톡 가격의 주문 상 역 참조 정보."
      },
      "IHubOrderPrice.ISummary": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "minimum": 0,
            "title": "명목상 지불 총액",
            "description": "명목상 지불 총액."
          },
          "deposit": {
            "type": "number",
            "minimum": 0,
            "title": "고정비 예치금 지불액",
            "description": "고정비 예치금 지불액."
          },
          "ticket": {
            "type": "number",
            "minimum": 0,
            "title": "고정비 할인 쿠폰 티켓 지불액",
            "description": "고정비 할인 쿠폰 티켓 지불액."
          }
        },
        "required": [
          "value",
          "deposit",
          "ticket"
        ],
        "description": "주문 가격 중 고정비 부문의 요약 정보."
      },
      "IStudioRepositoryRelease.IForSale": {
        "type": "object",
        "properties": {
          "repository": {
            "$ref": "#/components/schemas/IStudioRepository.IStandalone"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryReleaseNode"
            },
            "minItems": 1,
            "title": "배포본을 구성하는 개별 노드 (함수) 리스트",
            "description": "배포본을 구성하는 개별 노드 (함수) 리스트."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "릴리즈를 행한 고객 정보",
            "description": "릴리즈를 행한 고객 정보."
          },
          "commit": {
            "$ref": "#/components/schemas/IStudioRepositoryCommit",
            "title": "릴리즈 대상 커밋",
            "description": "릴리즈 대상 커밋."
          },
          "components": {
            "$ref": "#/components/schemas/ISwaggerComponents",
            "title": "네임드 타입 컬렉션",
            "description": "네임드 타입 컬렉션."
          },
          "document": {
            "$ref": "#/components/schemas/IStudioRepositoryReleaseDocument",
            "title": "릴리즈에 대한 문서화",
            "description": "릴리즈에 대한 문서화."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그 리스트",
            "description": "검색 태그 리스트."
          },
          "version": {
            "type": "string",
            "title": "버전명",
            "description": "버전명."
          },
          "program_url": {
            "type": "string",
            "format": "uri",
            "title": "빌드된 프로그램의 URL",
            "description": "빌드된 프로그램의 URL."
          },
          "debug_url": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "디버그용 URL",
            "description": "디버그용 URL."
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubChannelCategory"
            },
            "title": "분류 카테고리 리스트",
            "description": "분류 카테고리 리스트."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "릴리즈 레코드 생성 일시",
            "description": "릴리즈 레코드 생성 일시."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "배포 시작 일시",
            "description": "배포 시작 일시."
          }
        },
        "required": [
          "repository",
          "nodes",
          "id",
          "customer",
          "commit",
          "components",
          "document",
          "tags",
          "version",
          "program_url",
          "debug_url",
          "categories",
          "created_at",
          "opened_at"
        ]
      },
      "IStudioRepository.IStandalone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "account": {
            "$ref": "#/components/schemas/IStudioAccount.ISummary",
            "title": "귀속 계정 정보",
            "description": "귀속 계정 정보."
          },
          "code": {
            "type": "string",
            "title": "저장소의 식별자 코드",
            "description": "저장소의 식별자 코드."
          },
          "disclosure": {
            "$ref": "#/components/schemas/IStudioRepository.Disclosure",
            "title": "저장소의 공개 수준",
            "description": "저장소의 공개 수준.\n\n- `public`: 모든 회원이 열람 가능한 공개 저장소.\n- `protected`: 직원들만 열람 가능한 보호 저장소.\n- `private`: 권한을 부여받은 이들만 열람 가능한 비공개 저장소."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "저장소 제목",
            "description": "저장소 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "저장소에 대한 상세 설명",
            "description": "저장소에 대한 상세 설명."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그값 리스트",
            "description": "검색 태그값 리스트."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "저장소 생성 일시",
            "description": "저장소 생성 일시."
          }
        },
        "required": [
          "id",
          "account",
          "code",
          "disclosure",
          "title",
          "description",
          "tags",
          "created_at"
        ],
        "description": "저장소 단독 정보."
      },
      "IStudioAccount.ISummary": {
        "type": "object",
        "properties": {
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IHubMember"
              },
              {
                "$ref": "#/components/schemas/IStudioEnterprise.IInvertFromAccount"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "member": "#/components/schemas/IHubMember",
                "enterprise": "#/components/schemas/IStudioEnterprise.IInvertFromAccount"
              }
            },
            "title": "소유자 정보",
            "description": "소유자 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "code": {
            "type": "string",
            "title": "식별자 코드",
            "description": "식별자 코드."
          },
          "created_at": {
            "type": "string",
            "title": "계정 생성 일시",
            "description": "계정 생성 일시."
          }
        },
        "required": [
          "owner",
          "id",
          "code",
          "created_at"
        ],
        "description": "계정의 요약 정보."
      },
      "IStudioEnterprise.IInvertFromAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "enterprise",
            "title": "Discriminated Union 타입의 식별자",
            "description": "Discriminated Union 타입의 식별자."
          },
          "name": {
            "type": "string",
            "title": "기업명",
            "description": "기업명."
          },
          "created_at": {
            "type": "string",
            "title": "계정 생성 일시",
            "description": "계정 생성 일시."
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "created_at"
        ],
        "description": "기업의 역참조 정보 from 계정."
      },
      "IStudioRepository.Disclosure": {
        "oneOf": [
          {
            "const": "public"
          },
          {
            "const": "private"
          },
          {
            "const": "protected"
          }
        ],
        "title": "저장소의 공개 수준",
        "description": "저장소의 공개 수준.\n\n- `public`: 모든 회원이 열람 가능한 공개 저장소.\n- `protected`: 직원들만 열람 가능한 보호 저장소.\n- `private`: 권한을 부여받은 이들만 열람 가능한 비공개 저장소."
      },
      "IStudioRepositoryReleaseNode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "release_id": {
            "type": "string",
            "format": "uuid",
            "title": "부모 릴리즈의 {@link IStudioRepositoryRelease.id}",
            "description": "부모 릴리즈의 {@link IStudioRepositoryRelease.id}."
          },
          "type": {
            "const": "release",
            "title": "Discriminator of connectors",
            "description": "Discriminator of connectors."
          },
          "bucket": {
            "$ref": "#/components/schemas/IStudioRepositoryBucket.ISummary",
            "title": "대상 버킷의 참조 정보",
            "description": "대상 버킷의 참조 정보."
          },
          "accessor": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "릴리즈 대상 노드 (함수) 의 접근자",
            "description": "릴리즈 대상 노드 (함수) 의 접근자."
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.IParameter"
            },
            "title": "함수의 파라미터에 대한 타입 정보 리스트",
            "description": "함수의 파라미터에 대한 타입 정보 리스트."
          },
          "output": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IString"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.ITuple"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IOneOf"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INull"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IUnknown"
              }
            ],
            "title": "리턴 타입 정보",
            "description": "리턴 타입 정보.\n\n리턴 타입이 `void` (또는 `Promise<void>`) 인 경우에는 `null`."
          },
          "async": {
            "type": "boolean",
            "title": "비동기 함수 여부",
            "description": "비동기 함수 여부."
          },
          "purpose": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "app"
              },
              {
                "const": "agent"
              }
            ],
            "title": "릴리즈 추출 목적",
            "description": "릴리즈 추출 목적."
          },
          "summary": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "요약 설명문",
            "description": "요약 설명문."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "상세 설명문",
            "description": "상세 설명문."
          }
        },
        "required": [
          "id",
          "release_id",
          "type",
          "bucket",
          "accessor",
          "parameters",
          "output",
          "async",
          "purpose",
          "summary",
          "description"
        ],
        "description": "저장소의 배포 프로그램을 구성하는 개별 노드에 대한 정보.\n\n`IStudioRepositoryReleaseNode` 는 저장소에서 배포한 프로그램 내,\n사용자가 지정하여 배출 (`export`) 한 프로그래밍 노드들을 형상화한 엔티티이다.\n\n참고로 배출 가능한 노드의 종류로는 사용자 정의 함수와, 워크플로우 문서가 있다.\n물론 {@link IStudioWorkflow 워크플로우 문서} 또한 빌드 결과물이 단일 함수로\n귀결되기에, 결국 노드란 곧 본 저장소로부터 배출된 \"재사용 가능한 함수\" 를 뜻한다.\n\n또한, 배출된 노드는 각각이 고유한 Rest API 상 endpoint 를 가진다. 따라서\n저장소의 각 노드는 다른 프로그램에서 `import` 하여 사용할 수도 있지만,\nRest API 를 통하여 외부에서 호출하는 것도 가능하다. 그리고 이를\nGenerative Hub 의 {@link IHubSale 매물}로 등록, 판매하는 것도 가능하다."
      },
      "IStudioRepositoryBucket.ISummary": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IStudioRepositoryDirectory.ISummary"
          },
          {
            "$ref": "#/components/schemas/IStudioRepositoryFile.ISummary"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflow.ISummary"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "directory": "#/components/schemas/IStudioRepositoryDirectory.ISummary",
            "file": "#/components/schemas/IStudioRepositoryFile.ISummary",
            "workflow": "#/components/schemas/IStudioWorkflow.ISummary"
          }
        },
        "title": "저장소 버킷의 요약 정보",
        "description": "저장소 버킷의 요약 정보."
      },
      "IStudioRepositoryDirectory.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "Snapshot ID",
            "description": "Snapshot ID."
          },
          "type": {
            "const": "directory",
            "title": "버킷의 유형",
            "description": "버킷의 유형."
          },
          "commit_id": {
            "type": "string",
            "format": "uuid",
            "title": "최종 수정된 스냅샷의 귀속 커밋 ID",
            "description": "최종 수정된 스냅샷의 귀속 커밋 ID."
          },
          "migration": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioRepositoryBucketMigration"
              }
            ],
            "title": "Studio1.0 에서 마이그레이션 된 정보",
            "description": "Studio1.0 에서 마이그레이션 된 정보."
          },
          "path": {
            "type": "string",
            "title": "버킷의 전체 경로",
            "description": "버킷의 전체 경로."
          },
          "location": {
            "type": "string",
            "title": "버킷의 귀속 폴더 경로",
            "description": "버킷의 귀속 폴더 경로."
          },
          "name": {
            "type": "string",
            "title": "버킷의 파일 이름",
            "description": "버킷의 파일 이름."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "버킷의 최초 생성 일시",
            "description": "버킷의 최초 생성 일시.\n\n즉, 해당 버킷을 최초 생성한 커밋의 일시와 동일."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "버킷의 최종 수정 일시",
            "description": "버킷의 최종 수정 일시.\n\n즉, 해당 버킷을 최종 수정한 커밋의 일시와 동일."
          }
        },
        "required": [
          "id",
          "snapshot_id",
          "type",
          "commit_id",
          "migration",
          "path",
          "location",
          "name",
          "created_at",
          "updated_at"
        ],
        "description": "저장소 내 폴더의 요약 정보."
      },
      "IStudioRepositoryBucketMigration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "uid": {
            "type": "string",
            "title": "Studio1.0 툴 & 챗봇을 만든 WRTN 유저의 ID",
            "description": "Studio1.0 툴 & 챗봇을 만든 WRTN 유저의 ID."
          },
          "tool_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "Studio1.0 툴 ID",
            "description": "Studio1.0 툴 ID."
          },
          "chat_bot_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "Studio1.0 챗봇 ID",
            "description": "Studio1.0 챗봇 ID."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "id",
          "uid",
          "tool_id",
          "chat_bot_id",
          "created_at"
        ],
        "description": "Studio1.0 툴 & 챗봇을 만든 WRTN 유저의 버킷 마이그레이션 정보."
      },
      "IStudioRepositoryFile.ISummary": {
        "type": "object",
        "properties": {
          "extension": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 8
              }
            ],
            "title": "파일의 확장자",
            "description": "파일의 확장자."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "title": "파일이 실제 위치하는 URL 주소",
            "description": "파일이 실제 위치하는 URL 주소."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "Snapshot ID",
            "description": "Snapshot ID."
          },
          "type": {
            "const": "file",
            "title": "버킷의 유형",
            "description": "버킷의 유형."
          },
          "commit_id": {
            "type": "string",
            "format": "uuid",
            "title": "최종 수정된 스냅샷의 귀속 커밋 ID",
            "description": "최종 수정된 스냅샷의 귀속 커밋 ID."
          },
          "migration": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioRepositoryBucketMigration"
              }
            ],
            "title": "Studio1.0 에서 마이그레이션 된 정보",
            "description": "Studio1.0 에서 마이그레이션 된 정보."
          },
          "path": {
            "type": "string",
            "title": "버킷의 전체 경로",
            "description": "버킷의 전체 경로."
          },
          "location": {
            "type": "string",
            "title": "버킷의 귀속 폴더 경로",
            "description": "버킷의 귀속 폴더 경로."
          },
          "name": {
            "type": "string",
            "title": "버킷의 파일 이름",
            "description": "버킷의 파일 이름."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "버킷의 최초 생성 일시",
            "description": "버킷의 최초 생성 일시.\n\n즉, 해당 버킷을 최초 생성한 커밋의 일시와 동일."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "버킷의 최종 수정 일시",
            "description": "버킷의 최종 수정 일시.\n\n즉, 해당 버킷을 최종 수정한 커밋의 일시와 동일."
          }
        },
        "required": [
          "extension",
          "url",
          "id",
          "snapshot_id",
          "type",
          "commit_id",
          "migration",
          "path",
          "location",
          "name",
          "created_at",
          "updated_at"
        ],
        "description": "저장소 파일의 요약 정보.\n\n파일은 그 특성상, 상세 정보와 요약본에 차이가 없다."
      },
      "IStudioWorkflow.ISummary": {
        "type": "object",
        "properties": {
          "extension": {
            "const": "workflow",
            "title": "확장자는 \"workflow\" 로 고정",
            "description": "확장자는 \"workflow\" 로 고정."
          },
          "valid": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ],
            "title": "유효성 여부",
            "description": "유효성 여부.\n\n워크플로우가 실행 가능한 지 여부를 나타낸다.\n\n최소 compile 이나 execute 함수를 실행해야 그 유효성을 확인할 수 있으며,\n그 전까지 본 속성의 값은 `null` 이다.\n\n물론, 릴리즈된 워크플로우라면, 이 값은 무조건 `true` 일 수 밖에 없다."
          },
          "icon": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "대표 아이콘의 URL",
            "description": "대표 아이콘의 URL."
          },
          "thumbnail": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "워크플로우 썸네일 이미지",
            "description": "워크플로우 썸네일 이미지.\n\n워크플로우 에디터 상 미니맵 혹은 축소 버전 이미지에 해당한다."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "워크플로우 제목",
            "description": "워크플로우 제목."
          },
          "summary": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "워크플로우 함수에 대한 요약 설명",
            "description": "워크플로우 함수에 대한 요약 설명."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "워크플로우 함수에 대한 상세 설명",
            "description": "워크플로우 함수에 대한 상세 설명."
          },
          "connector_icons": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "title": "사용된 커넥터들의 아이콘 리스트",
            "description": "사용된 커넥터들의 아이콘 리스트."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "Snapshot ID",
            "description": "Snapshot ID."
          },
          "type": {
            "const": "workflow",
            "title": "버킷의 유형",
            "description": "버킷의 유형."
          },
          "commit_id": {
            "type": "string",
            "format": "uuid",
            "title": "최종 수정된 스냅샷의 귀속 커밋 ID",
            "description": "최종 수정된 스냅샷의 귀속 커밋 ID."
          },
          "migration": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioRepositoryBucketMigration"
              }
            ],
            "title": "Studio1.0 에서 마이그레이션 된 정보",
            "description": "Studio1.0 에서 마이그레이션 된 정보."
          },
          "path": {
            "type": "string",
            "title": "버킷의 전체 경로",
            "description": "버킷의 전체 경로."
          },
          "location": {
            "type": "string",
            "title": "버킷의 귀속 폴더 경로",
            "description": "버킷의 귀속 폴더 경로."
          },
          "name": {
            "type": "string",
            "title": "버킷의 파일 이름",
            "description": "버킷의 파일 이름."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "버킷의 최초 생성 일시",
            "description": "버킷의 최초 생성 일시.\n\n즉, 해당 버킷을 최초 생성한 커밋의 일시와 동일."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "버킷의 최종 수정 일시",
            "description": "버킷의 최종 수정 일시.\n\n즉, 해당 버킷을 최종 수정한 커밋의 일시와 동일."
          }
        },
        "required": [
          "extension",
          "valid",
          "icon",
          "thumbnail",
          "title",
          "summary",
          "description",
          "connector_icons",
          "id",
          "snapshot_id",
          "type",
          "commit_id",
          "migration",
          "path",
          "location",
          "name",
          "created_at",
          "updated_at"
        ],
        "description": "워크플로우의  요약 정보."
      },
      "IStudioRepositoryReleaseNode.IParameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "파라미터 이름",
            "description": "파라미터 이름."
          },
          "required": {
            "type": "boolean",
            "title": "필수 여부",
            "description": "필수 여부."
          },
          "schema": {
            "$ref": "#/components/schemas/ISwaggerSchema",
            "title": "파라미터 타입 정보",
            "description": "파라미터 타입 정보."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "파라미터의 제목",
            "description": "파라미터의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "파라미터에 대한 상세 설명",
            "description": "파라미터에 대한 상세 설명."
          }
        },
        "required": [
          "name",
          "required",
          "schema",
          "title",
          "description"
        ],
        "description": "파라미터 정보."
      },
      "ISwaggerSchema": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ISwaggerSchema.IConstant"
          },
          {
            "$ref": "#/components/schemas/ISwaggerSchema.IBoolean"
          },
          {
            "$ref": "#/components/schemas/ISwaggerSchema.IInteger"
          },
          {
            "$ref": "#/components/schemas/ISwaggerSchema.INumber"
          },
          {
            "$ref": "#/components/schemas/ISwaggerSchema.IString"
          },
          {
            "$ref": "#/components/schemas/ISwaggerSchema.IArray"
          },
          {
            "$ref": "#/components/schemas/ISwaggerSchema.ITuple"
          },
          {
            "$ref": "#/components/schemas/ISwaggerSchema.IObject"
          },
          {
            "$ref": "#/components/schemas/ISwaggerSchema.IReferencestring"
          },
          {
            "$ref": "#/components/schemas/ISwaggerSchema.IOneOf"
          },
          {
            "$ref": "#/components/schemas/ISwaggerSchema.INull"
          },
          {
            "$ref": "#/components/schemas/ISwaggerSchema.IUnknown"
          }
        ],
        "title": "Type schema info",
        "description": "Type schema info.\n\n`ISwaggerSchema` is a type schema info of the OpenAPI v3.1 specification,\nbut a little shrinked and removed ambiguous and duplicated expressions of\nOpenAPI v3.1 fopr the convenience and clarity.\n\n- Decompose mixed type: {@link OpenApiV3_1.IJsonSchema.IMixed}\n- Resolve nullable property: {@link OpenApiV3_1.IJsonSchema.__ISignificant.nullable}\n- Array type utilizes only single {@link OpenAPI.IJsonSchema.IArray.items}\n- Tuple type utilizes only {@link OpenApi.IJsonSchema.ITuple.prefixItems}\n- Merge {@link OpenApiV3_1.IJsonSchema.IAnyOf} to {@link OpenApi.IJsonSchema.IOneOf}\n- Merge {@link OpenApiV3_1.IJsonSchema.IRecursiveReference} to {@link OpenApi.IJsonSchema.IReference}\n- Merge {@link OpenApiV3_1.IJsonSchema.IAllOf} to {@link OpenApi.IJsonSchema.IObject}\n\nAlso, `ISwaggerSchema` extended some plugin properties for LLM\n(Large Language Model, OpenAI) function calling purpose. Below is the list of\nplugin properties newly added from {@link OpenApi.IJsonSchema} to `ISwaggerSchema`.\n\n- {@link ISwaggerSchema.IString.x -wrtn-secret-key}\n- {@link ISwaggerSchema.IString.x -wrtn-secret-scopes}\n- {@link ISwaggerSchema.__IPlugin.x -wrtn-placeholder}\n- {@link ISwaggerSchema.__IPlugin.x -wrtn-prerequisite}"
      },
      "ISwaggerSchema.IConstant": {
        "type": "object",
        "properties": {
          "const": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ],
            "title": "The constant value",
            "description": "The constant value."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "const"
        ],
        "description": "Constant value type."
      },
      "methodgetpostpatchputdeletepathstringjmesPathstring": {
        "type": "object",
        "properties": {
          "method": {
            "oneOf": [
              {
                "const": "get"
              },
              {
                "const": "post"
              },
              {
                "const": "patch"
              },
              {
                "const": "put"
              },
              {
                "const": "delete"
              }
            ],
            "title": "HTTP method to call the endpoint",
            "description": "HTTP method to call the endpoint."
          },
          "path": {
            "type": "string",
            "title": "Path of the endpoint",
            "description": "Path of the endpoint."
          },
          "jmesPath": {
            "type": "string",
            "title": "Function returning transformed values using JMESPath expression",
            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
          }
        },
        "required": [
          "method",
          "path",
          "jmesPath"
        ]
      },
      "methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined": {
        "type": "object",
        "properties": {
          "method": {
            "oneOf": [
              {
                "const": "get"
              },
              {
                "const": "post"
              },
              {
                "const": "patch"
              },
              {
                "const": "put"
              },
              {
                "const": "delete"
              }
            ],
            "title": "HTTP method to call the endpoint",
            "description": "HTTP method to call the endpoint."
          },
          "path": {
            "type": "string",
            "title": "Path of the endpoint",
            "description": "Path of the endpoint."
          },
          "label": {
            "type": "string",
            "title": "Transform function returning label",
            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
          },
          "value": {
            "type": "string",
            "title": "Transform function returning target value",
            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
          },
          "array": {
            "type": "string",
            "title": "Transform function returning array instance",
            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
          }
        },
        "required": [
          "method",
          "path",
          "label",
          "value"
        ]
      },
      "ISwaggerSchema.IBoolean": {
        "type": "object",
        "properties": {
          "default": {
            "type": "boolean",
            "title": "The default value",
            "description": "The default value."
          },
          "type": {
            "const": "boolean",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "type"
        ],
        "description": "Boolean type info."
      },
      "ISwaggerSchema.IInteger": {
        "type": "object",
        "properties": {
          "default": {
            "type": "integer",
            "title": "Default value",
            "description": "Default value."
          },
          "minimum": {
            "type": "integer",
            "title": "Minimum value restriction",
            "description": "Minimum value restriction."
          },
          "maximum": {
            "type": "integer",
            "title": "Maximum value restriction",
            "description": "Maximum value restriction."
          },
          "exclusiveMinimum": {
            "type": "boolean",
            "title": "Exclusive minimum value restriction",
            "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenApi}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
          },
          "exclusiveMaximum": {
            "type": "boolean",
            "title": "Exclusive maximum value restriction",
            "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenApi}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
          },
          "multipleOf": {
            "type": "integer",
            "exclusiveMinimum": true,
            "minimum": 0,
            "title": "Multiple of value restriction",
            "description": "Multiple of value restriction."
          },
          "type": {
            "const": "integer",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "type"
        ],
        "description": "Integer type info."
      },
      "ISwaggerSchema.INumber": {
        "type": "object",
        "properties": {
          "default": {
            "type": "number",
            "title": "Default value",
            "description": "Default value."
          },
          "minimum": {
            "type": "number",
            "title": "Minimum value restriction",
            "description": "Minimum value restriction."
          },
          "maximum": {
            "type": "number",
            "title": "Maximum value restriction",
            "description": "Maximum value restriction."
          },
          "exclusiveMinimum": {
            "type": "boolean",
            "title": "Exclusive minimum value restriction",
            "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
          },
          "exclusiveMaximum": {
            "type": "boolean",
            "title": "Exclusive maximum value restriction",
            "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
          },
          "multipleOf": {
            "type": "number",
            "exclusiveMinimum": true,
            "minimum": 0,
            "title": "Multiple of value restriction",
            "description": "Multiple of value restriction."
          },
          "type": {
            "const": "number",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "type"
        ],
        "description": "Number (double) type info."
      },
      "ISwaggerSchema.IString": {
        "type": "object",
        "properties": {
          "x-wrtn-secret-key": {
            "type": "string",
            "title": "Secret key for the schema",
            "description": "Secret key for the schema.\n\n`x-wrtn-secret-key` is a property means a secret key that is required\nfor the target API endpoint calling. If the secret key is not filled,\nthe API call would be failed."
          },
          "x-wrtn-secret-scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Secret scopes for the schema",
            "description": "Secret scopes for the schema.\n\n`x-wrtn-secret-scopes` is a property means a list of secret scopes that\nare required for the target API endpoint calling. If the secret scopes\nare not satisfied, the API call would be failed."
          },
          "default": {
            "type": "string",
            "title": "Default value",
            "description": "Default value."
          },
          "format": {
            "type": "string",
            "title": "Format restriction",
            "description": "Format restriction."
          },
          "pattern": {
            "type": "string",
            "title": "Pattern restriction",
            "description": "Pattern restriction."
          },
          "contentMediaType": {
            "type": "string",
            "title": "Content media type restriction",
            "description": "Content media type restriction."
          },
          "minLength": {
            "type": "integer",
            "title": "Minimum length restriction",
            "description": "Minimum length restriction."
          },
          "maxLength": {
            "type": "integer",
            "title": "Maximum length restriction",
            "description": "Maximum length restriction."
          },
          "type": {
            "const": "string",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "type"
        ],
        "description": "String type info."
      },
      "ISwaggerSchema.IArray": {
        "type": "object",
        "properties": {
          "items": {
            "$ref": "#/components/schemas/ISwaggerSchema",
            "title": "Items type info",
            "description": "Items type info.\n\nThe `items` means the type of the array elements. In other words, it is\nthe type schema info of the `T` in the TypeScript array type `Array<T>`."
          },
          "uniqueItems": {
            "type": "boolean",
            "title": "Unique items restriction",
            "description": "Unique items restriction.\n\nIf this property value is `true`, target array must have unique items."
          },
          "minItems": {
            "type": "integer",
            "title": "Minimum items restriction",
            "description": "Minimum items restriction.\n\nRestriction of minumum number of items in the array."
          },
          "maxItems": {
            "type": "integer",
            "title": "Maximum items restriction",
            "description": "Maximum items restriction.\n\nRestriction of maximum number of items in the array."
          },
          "type": {
            "const": "array",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "items",
          "type"
        ],
        "description": "Array type info."
      },
      "ISwaggerSchema.ITuple": {
        "type": "object",
        "properties": {
          "prefixItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ISwaggerSchema"
            },
            "title": "Prefix items",
            "description": "Prefix items.\n\nThe `prefixItems` means the type schema info of the prefix items in the\ntuple type. In the TypeScript, it is expressed as `[T1, T2]`.\n\nIf you want to express `[T1, T2, ...TO[]]` type, you can configure the\n`...TO[]` through the {@link additionalItems} property."
          },
          "additionalItems": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IString"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.ITuple"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IOneOf"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INull"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IUnknown"
              }
            ],
            "title": "Additional items",
            "description": "Additional items.\n\nThe `additionalItems` means the type schema info of the additional items\nafter the {@link prefixItems}. In the TypeScript, if there's a type\n`[T1, T2, ...TO[]]`, the `...TO[]` is represented by the `additionalItems`.\n\nBy the way, if you configure the `additionalItems` as `true`, it means\nthe additional items are not restricted. They can be any type, so that\nit is equivalent to the TypeScript type `[T1, T2, ...any[]]`.\n\nOtherwise configure the `additionalItems` as the {@link IJsonSchema},\nit means the additional items must follow the type schema info.\nTherefore, it is equivalent to the TypeScript type `[T1, T2, ...TO[]]`."
          },
          "uniqueItems": {
            "type": "boolean",
            "title": "Unique items restriction",
            "description": "Unique items restriction.\n\nIf this property value is `true`, target tuple must have unique items."
          },
          "minItems": {
            "type": "integer",
            "title": "Minimum items restriction",
            "description": "Minimum items restriction.\n\nRestriction of minumum number of items in the tuple."
          },
          "maxItems": {
            "type": "integer",
            "title": "Maximum items restriction",
            "description": "Maximum items restriction.\n\nRestriction of maximum number of items in the tuple."
          },
          "type": {
            "const": "array",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "prefixItems",
          "type"
        ],
        "description": "Tuple type info."
      },
      "ISwaggerSchema.IObject": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RecordstringISwaggerSchema",
            "title": "Properties of the object",
            "description": "Properties of the object.\n\nThe `properties` means a list of key-value pairs of the object's\nregular properties. The key is the name of the regular property,\nand the value is the type schema info.\n\nIf you need additional properties that is represented by dynamic key,\nyou can use the {@link additionalProperties} instead."
          },
          "additionalProperties": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IString"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.ITuple"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IOneOf"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INull"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IUnknown"
              }
            ],
            "title": "Additional properties' info",
            "description": "Additional properties' info.\n\nThe `additionalProperties` means the type schema info of the additional\nproperties that are not listed in the {@link properties}.\n\nIf the value is `true`, it means that the additional properties are not\nrestricted. They can be any type. Otherwise, if the value is\n{@link IOpenAiSchema} type, it means that the additional properties must\nfollow the type schema info.\n\n- `true`: `Record<string, any>`\n- `IOpenAiSchema`: `Record<string, T>`"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "List of key values of the required properties",
            "description": "List of key values of the required properties.\n\nThe `required` means a list of the key values of the required\n{@link properties}. If some property key is not listed in the `required`\nlist, it means that property is optional. Otherwise some property key\nexists in the `required` list, it means that the property must be filled.\n\nBelow is an example of the {@link properties} and `required`.\n\n```typescript\ninterface SomeObject {\n  id: string;\n  email: string;\n  name?: string;\n}\n```\n\nAs you can see, `id` and `email` {@link properties} are {@link required},\nso that they are listed in the `required` list.\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": { \"type\": \"string\" },\n    \"email\": { \"type\": \"string\" },\n    \"name\": { \"type\": \"string\" }\n  },\n  \"required\": [\"id\", \"email\"]\n}\n```"
          },
          "type": {
            "const": "object",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "type"
        ],
        "description": "Object type info."
      },
      "RecordstringISwaggerSchema": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/ISwaggerSchema"
        }
      },
      "ISwaggerSchema.IReferencestring": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "title": "Reference to the named schema",
            "description": "Reference to the named schema.\n\nThe `ref` is a reference to the named schema. Format of the `$ref` is\nfollowing the JSON Pointer specification. In the OpenAPI, the `$ref`\nstarts with `#/components/schemas/` which means the type is stored in\nthe {@link OpenApi.IComponents.schemas} object.\n\n- `#/components/schemas/SomeObject`\n- `#/components/schemas/AnotherObject`"
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "$ref"
        ],
        "description": "Reference type directing named schema."
      },
      "ISwaggerSchema.IOneOf": {
        "type": "object",
        "properties": {
          "oneOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ISwaggerSchema.IConstant"
                },
                {
                  "$ref": "#/components/schemas/ISwaggerSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/ISwaggerSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/ISwaggerSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/ISwaggerSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/ISwaggerSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/ISwaggerSchema.ITuple"
                },
                {
                  "$ref": "#/components/schemas/ISwaggerSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/ISwaggerSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/ISwaggerSchema.INull"
                },
                {
                  "$ref": "#/components/schemas/ISwaggerSchema.IUnknown"
                }
              ]
            },
            "title": "List of the union types",
            "description": "List of the union types."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "oneOf"
        ],
        "description": "Union type.\n\nIOneOf` represents an union type of the TypeScript (`A | B | C`).\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined `anyOf` instead of the `oneOf`, {@link OpenApi} forcibly\nconverts it to `oneOf` type."
      },
      "ISwaggerSchema.INull": {
        "type": "object",
        "properties": {
          "default": {
            "type": "null",
            "title": "Default value",
            "description": "Default value."
          },
          "type": {
            "const": "null",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "type"
        ],
        "description": "Null type."
      },
      "ISwaggerSchema.IUnknown": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "description": "Unknown, `any` type."
      },
      "IStudioRepositoryCommit": {
        "type": "object",
        "properties": {
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋에 대한 상세 서술문",
            "description": "커밋에 대한 상세 서술문."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "원천 커밋의 ID",
            "description": "원천 커밋의 ID.\n\n만약 아무런 기반 없는 최초 커밋시, `null` 값이 할당된다."
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "커밋을 행한 고객",
            "description": "커밋을 행한 고객."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋의 제목",
            "description": "커밋의 제목."
          },
          "latest": {
            "type": "boolean",
            "title": "가장 최신 커밋 여부",
            "description": "가장 최신 커밋 여부."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "커밋 생성 일시",
            "description": "커밋 생성 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "커밋 수정 일시",
            "description": "커밋 수정 일시."
          },
          "archived_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "커밋 기록 확정 일시",
            "description": "커밋 기록 확정 일시.\n\n커밋의 모든 변경사항을 서버에 기록함으로써, 이를 확정하고 완결짓는다.\n\n커밋을 기록한 이후로는, 일절 수정 및 삭제가 불가능하다."
          }
        },
        "required": [
          "description",
          "id",
          "parent_id",
          "customer",
          "title",
          "latest",
          "created_at",
          "updated_at",
          "archived_at"
        ],
        "description": "저장소 커밋 정보.\n\n{@link IStudioRepository 저장소}를 구성하는 각각의\n{@link IStudioRepositoryBucket 버킷}들을 편집하고, 그 이력을 기록하는 행위를\n\"커밋\" 이라고 한다. 그리고 `IStudioRepositoryCommit` 는 저장소에 쓰기 권한을\n가진 {@link IHubCustomer 고객}이 행한 커밋 행위를 형상화한 엔티티이다.\n\n즉 본 커밋 레코드가 하나 생성되었다는 것은, 최소 한 개 이상의 버킷이 수정되었고,\n그리하여 그들에 대한 스냅샷 레코드들이 새로이 생성되었다는 것을 뜻한다.\n\n단 커밋을 발행하였다하여, 그것이 곧 커밋의 완결을 뜻하는 것은 아니다. 커밋은\n그것의 기록 확정 일시를 뜻하는 {@link IStudioRepositoryCommit.archived_at}\n속성이 `null` 인 경우에는 {@link IStudioRepositoryBucket 버킷}들을 계속\n수정할 수 있으며, 심지어 현재 수정 중인 커밋을 취소하고 삭제할 수도 있다."
      },
      "ISwaggerComponents": {
        "type": "object",
        "properties": {
          "schemas": {
            "$ref": "#/components/schemas/RecordstringISwaggerSchema",
            "title": "An object to hold reusable DTO schemas",
            "description": "An object to hold reusable DTO schemas.\n\nIn other words, a collection of named JSON schemas."
          },
          "securitySchemes": {
            "$ref": "#/components/schemas/RecordstringOpenApi.ISecurityScheme",
            "title": "An object to hold reusable security schemes",
            "description": "An object to hold reusable security schemes.\n\nIn other words, a collection of named security schemes."
          }
        },
        "description": "Reusable components in Swagger.\n\n`ISwaggerComponents` is a data structure representing content of `components` object\nin `swagger.json` file generated by Nestia. Note that, this is not an universal\nstructure, but a dedicated structure only for Nestia."
      },
      "RecordstringOpenApi.ISecurityScheme": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApi.ISecurityScheme"
        }
      },
      "OpenApi.ISecurityScheme": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/OpenApi.ISecurityScheme.IApiKey"
          },
          {
            "$ref": "#/components/schemas/OpenApi.ISecurityScheme.IHttpBasic"
          },
          {
            "$ref": "#/components/schemas/OpenApi.ISecurityScheme.IHttpBearer"
          },
          {
            "$ref": "#/components/schemas/OpenApi.ISecurityScheme.IOAuth2"
          },
          {
            "$ref": "#/components/schemas/OpenApi.ISecurityScheme.IOpenId"
          }
        ],
        "title": "Security scheme of Swagger Documents",
        "description": "Security scheme of Swagger Documents.\n\n`OpenApi.ISecurityScheme` is a data structure representing content of\n`securitySchemes` in `swagger.json` file. It is composed with 5 types of\nsecurity schemes as an union type like below."
      },
      "OpenApi.ISecurityScheme.IApiKey": {
        "type": "object",
        "properties": {
          "type": {
            "const": "apiKey"
          },
          "in": {
            "oneOf": [
              {
                "const": "header"
              },
              {
                "const": "query"
              },
              {
                "const": "cookie"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "description": "Normal API key type."
      },
      "OpenApi.ISecurityScheme.IHttpBasic": {
        "type": "object",
        "properties": {
          "type": {
            "const": "http"
          },
          "scheme": {
            "const": "basic"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "scheme"
        ],
        "description": "HTTP basic authentication type."
      },
      "OpenApi.ISecurityScheme.IHttpBearer": {
        "type": "object",
        "properties": {
          "type": {
            "const": "http"
          },
          "scheme": {
            "const": "bearer"
          },
          "bearerFormat": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "scheme"
        ],
        "description": "HTTP bearer authentication type."
      },
      "OpenApi.ISecurityScheme.IOAuth2": {
        "type": "object",
        "properties": {
          "type": {
            "const": "oauth2"
          },
          "flows": {
            "$ref": "#/components/schemas/OpenApi.ISecurityScheme.IOAuth2.IFlowSet"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "flows"
        ],
        "description": "OAuth2 authentication type."
      },
      "OpenApi.ISecurityScheme.IOAuth2.IFlowSet": {
        "type": "object",
        "properties": {
          "authorizationCode": {
            "$ref": "#/components/schemas/OpenApi.ISecurityScheme.IOAuth2.IFlow"
          },
          "implicit": {
            "$ref": "#/components/schemas/OmitOpenApi.ISecurityScheme.IOAuth2.IFlowtokenUrl"
          },
          "password": {
            "$ref": "#/components/schemas/OmitOpenApi.ISecurityScheme.IOAuth2.IFlowauthorizationUrl"
          },
          "clientCredentials": {
            "$ref": "#/components/schemas/OmitOpenApi.ISecurityScheme.IOAuth2.IFlowauthorizationUrl"
          }
        }
      },
      "OpenApi.ISecurityScheme.IOAuth2.IFlow": {
        "type": "object",
        "properties": {
          "authorizationUrl": {
            "type": "string"
          },
          "tokenUrl": {
            "type": "string"
          },
          "refreshUrl": {
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/Recordstringstring"
          }
        }
      },
      "Recordstringstring": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "type": "string"
        }
      },
      "OmitOpenApi.ISecurityScheme.IOAuth2.IFlowtokenUrl": {
        "type": "object",
        "properties": {
          "authorizationUrl": {
            "type": "string"
          },
          "refreshUrl": {
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/Recordstringstring"
          }
        },
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "OmitOpenApi.ISecurityScheme.IOAuth2.IFlowauthorizationUrl": {
        "type": "object",
        "properties": {
          "tokenUrl": {
            "type": "string"
          },
          "refreshUrl": {
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/Recordstringstring"
          }
        },
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "OpenApi.ISecurityScheme.IOpenId": {
        "type": "object",
        "properties": {
          "type": {
            "const": "openIdConnect"
          },
          "openIdConnectUrl": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "openIdConnectUrl"
        ]
      },
      "IStudioRepositoryReleaseDocument": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "title": {
            "type": "string",
            "title": "제목",
            "description": "제목."
          },
          "format": {
            "oneOf": [
              {
                "const": "txt"
              },
              {
                "const": "md"
              },
              {
                "const": "html"
              }
            ],
            "title": "본문 컨텐츠의 포맷",
            "description": "본문 컨텐츠의 포맷."
          },
          "body": {
            "type": "string",
            "title": "본문 서술부",
            "description": "본문 서술부."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 리스트",
            "description": "첨부파일 리스트."
          }
        },
        "required": [
          "id",
          "title",
          "format",
          "body",
          "files"
        ],
        "description": "저장소 배포 프로그램의 문서.\n\n`IStudioRepositoryReleaseDocument` 는 저장소에서 배포한 프로그램에\n대하여 작성한 문서를 형상화한 엔티티이다. 제목과 본문, 그리고 첨부 파일이나\n썸네일 이미지 등의 서술 정보를 담당하고 있다.\n\n참고로 {@link IStudioRepositoryRelease 배포 프로그램}에 기재된 제목이나\n본문 컨텐츠 등의 경우, LLM (Large Language Model) 의 적중률에 제법 영향을\n준다. 그리고 배포 프로그램은 본디 각각의\n{@link IStudioRepositoryReleaseNode 노드}가 재사용되거나 이들의 묶음을\n{@link IHubSale 매물}로 등록하여 판매하는 것이 가능하며, 이 때의 서술부가\n고객의 구매 의사 결정에 큰 영향을 주기 마련이다.\n\n때문에 문서를 이전 릴리즈와 내부 노드나 커넥터 구성 정보가 전혀 변하지 않았고\n심지어 대상 {@link IStudioRepositoryCommit 커밋}이 완전히 동일하며 그저\n제목이나 서술 텍스트 정도나 변했음에도 불구하고, 새로운 배포 레코드를 필히\n발급해야하며 버전 또한 바뀌어야 하는 것은 바로 이 때문이다.\n\n즉 내부 파일 및 노드의 변경사항만큼이나 서술 컨텐츠 상 내용도 중대하게 보기\n때문에, 배포 프로그램과 서술 컨텐츠 구조가 1: N 이 아닌 1: 1 으로 고정화 된\n것이다."
      },
      "IHubSaleUnitSwaggerAccessor": {
        "type": "object",
        "properties": {
          "unit_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 유닛의 {@link IHubSaleUnit.id}",
            "description": "대상 유닛의 {@link IHubSaleUnit.id}."
          }
        },
        "required": [
          "unit_id"
        ],
        "description": "매물로부터 특정 유닛의 스웨거에 대한 접근자 정보."
      },
      "ISwagger": {
        "type": "object",
        "properties": {
          "openapi": {
            "type": "string",
            "pattern": "^(3\\.1\\.[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$",
            "title": "OpenAPI version number",
            "description": "OpenAPI version number."
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApi.IServer"
            },
            "title": "List of servers that provide the API",
            "description": "List of servers that provide the API."
          },
          "info": {
            "$ref": "#/components/schemas/OpenApi.IDocument.IInfo",
            "title": "Information about the API",
            "description": "Information about the API."
          },
          "components": {
            "$ref": "#/components/schemas/OpenApi.IComponentsISwaggerSchema",
            "title": "An object to hold reusable data structures",
            "description": "An object to hold reusable data structures.\n\nIt stores both DTO schemas and security schemes.\n\nFor reference, `nestia` defines every object and alias types as reusable DTO\nschemas. The alias type means that defined by `type` keyword in TypeScript."
          },
          "paths": {
            "$ref": "#/components/schemas/RecordstringOpenApi.IPathISwaggerSchemaISwaggerOperation",
            "title": "The available paths and operations for the API",
            "description": "The available paths and operations for the API.\n\nThe 1st key is the path, and the 2nd key is the HTTP method."
          },
          "webhooks": {
            "$ref": "#/components/schemas/RecordstringOpenApi.IPathISwaggerSchemaISwaggerOperation",
            "title": "An object to hold Webhooks",
            "description": "An object to hold Webhooks.\n\nIts structure is same with {@link paths}, so that the 1st key is the path,\nand the 2nd key is the HTTP method."
          },
          "security": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordstringArraystring"
            },
            "title": "A declaration of which security mechanisms can be used across the API",
            "description": "A declaration of which security mechanisms can be used across the API.\n\nWhen this property be configured, it would be overwritten in every API routes.\n\nFor reference, key means the name of security scheme and value means the `scopes`.\nThe `scopes` can be used only when target security scheme is `oauth2` type,\nespecially for {@link ISwaggerSecurityScheme.IOAuth2.IFlow.scopes} property."
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApi.IDocument.ITag"
            },
            "title": "List of tag names with description",
            "description": "List of tag names with description.\n\nIt is possible to omit this property or skip some tag name even if\nthe tag name is used in the API routes. In that case, the tag name\nwould be displayed (in Swagger-UI) without description."
          },
          "x-samchon-emended": {
            "const": true,
            "title": "Flag for indicating this document is emended by `@samchon/openapi`",
            "description": "Flag for indicating this document is emended by `@samchon/openapi`."
          }
        },
        "required": [
          "openapi",
          "components",
          "x-samchon-emended"
        ],
        "description": "Swagger Document.\n\n`ISwagger` is based on {@link OpenApi.IDocument}, and it is a data structure\nrepresenting content of `swagger.json` file following OpenAPI v3.1 specification,\nbut emended a little bit by [`@samchon/openapi`](https://github.com/samchon/openapi).\n\nThe difference with `ISwagger` and {@link OpenApi.IDocument} is that `ISwagger`\nhas more plugin properties especiallly for LLM (OpenAI) Function Calling. Below\nis the plugin properties newly added to `ISwagger`:\n\n- {@link ISwaggerOperation.x -wrtn-icon}\n- {@link ISwaggerSchema.IString.x -wrtn-secret-key}\n- {@link ISwaggerSchema.IString.x -wrtn-secret-scopes}\n\nFor reference, here is the entire list of difference between OpenAPI v3.1 and\nemended {@link OpenApi.IDocument}.\n\n- Operation\n  - Merged {@link OpenApiV3_1.IPath.parameters} to {@link OpenApi.IOperation.parameters}\n  - Resolved {@link OpenApi.IJsonSchema.IReference references} of {@link OpenApiV3_1.IOperation} mebers\n- JSON Schema\n  - Decompose mixed type: {@link OpenApiV3_1.IJsonSchema.IMixed}\n  - Resolve nullable property: {@link OpenApiV3_1.IJsonSchema.__ISignificant.nullable}\n  - Array type utilizes only single {@link OpenAPI.IJsonSchema.IArray.items}\n  - Tuple type utilizes only {@link OpenApi.IJsonSchema.ITuple.prefixItems}\n  - Merge {@link OpenApiV3_1.IJsonSchema.IAnyOf} to {@link OpenApi.IJsonSchema.IOneOf}\n  - Merge {@link OpenApiV3_1.IJsonSchema.IRecursiveReference} to {@link OpenApi.IJsonSchema.IReference}\n  - Merge {@link OpenApiV3_1.IJsonSchema.IAllOf} to {@link OpenApi.IJsonSchema.IObject}"
      },
      "OpenApi.IServer": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "title": "A URL to the target host",
            "description": "A URL to the target host."
          },
          "description": {
            "type": "string",
            "title": "An optional string describing the target server",
            "description": "An optional string describing the target server."
          },
          "variables": {
            "$ref": "#/components/schemas/RecordstringOpenApi.IServer.IVariable",
            "title": "A map between a variable name and its value",
            "description": "A map between a variable name and its value.\n\nWhen the server {@link url} is a type of template, this property\nwould be utilized to fill the template with actual values."
          }
        },
        "required": [
          "url"
        ],
        "description": "The remote server that provides the API."
      },
      "RecordstringOpenApi.IServer.IVariable": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApi.IServer.IVariable"
        }
      },
      "OpenApi.IServer.IVariable": {
        "type": "object",
        "properties": {
          "default": {
            "type": "string",
            "title": "Default value to use for substitution",
            "description": "Default value to use for substitution."
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "List of available values for the variable",
            "description": "List of available values for the variable."
          },
          "description": {
            "type": "string",
            "title": "An optional description for the server variable",
            "description": "An optional description for the server variable."
          }
        },
        "required": [
          "default"
        ],
        "description": "A variable for the server URL template."
      },
      "OpenApi.IDocument.IInfo": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "The title of the API",
            "description": "The title of the API."
          },
          "summary": {
            "type": "string",
            "title": "A short summary of the API",
            "description": "A short summary of the API."
          },
          "description": {
            "type": "string",
            "title": "A full description of the API",
            "description": "A full description of the API."
          },
          "termsOfService": {
            "type": "string",
            "title": "A URL to the Terms of Service for the API",
            "description": "A URL to the Terms of Service for the API."
          },
          "contact": {
            "$ref": "#/components/schemas/OpenApi.IDocument.IContact",
            "title": "The contact information for the exposed API",
            "description": "The contact information for the exposed API."
          },
          "license": {
            "$ref": "#/components/schemas/OpenApi.IDocument.ILicense",
            "title": "The license information for the exposed API",
            "description": "The license information for the exposed API."
          },
          "version": {
            "type": "string",
            "title": "Version of the API",
            "description": "Version of the API."
          }
        },
        "required": [
          "title",
          "version"
        ],
        "description": "Information about the API."
      },
      "OpenApi.IDocument.IContact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "The identifying name of the contact person/organization",
            "description": "The identifying name of the contact person/organization."
          },
          "url": {
            "type": "string",
            "title": "The URL pointing to the contact information",
            "description": "The URL pointing to the contact information."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "The email address of the contact person/organization",
            "description": "The email address of the contact person/organization."
          }
        },
        "description": "Contact information for the exposed API."
      },
      "OpenApi.IDocument.ILicense": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "The license name used for the API",
            "description": "The license name used for the API."
          },
          "identifier": {
            "type": "string",
            "title": "Identifier for the license used for the API",
            "description": "Identifier for the license used for the API.\n\nexample: MIT"
          },
          "url": {
            "type": "string",
            "title": "A URL to the license used for the API",
            "description": "A URL to the license used for the API."
          }
        },
        "required": [
          "name"
        ],
        "description": "License information for the exposed API."
      },
      "OpenApi.IComponentsISwaggerSchema": {
        "type": "object",
        "properties": {
          "schemas": {
            "$ref": "#/components/schemas/RecordstringISwaggerSchema",
            "title": "An object to hold reusable DTO schemas",
            "description": "An object to hold reusable DTO schemas.\n\nIn other words, a collection of named JSON schemas."
          },
          "securitySchemes": {
            "$ref": "#/components/schemas/RecordstringOpenApi.ISecurityScheme",
            "title": "An object to hold reusable security schemes",
            "description": "An object to hold reusable security schemes.\n\nIn other words, a collection of named security schemes."
          }
        },
        "description": "Reusable components in OpenAPI.\n\nA storage of reusable components in OpenAPI document.\n\nIn other words, it is a storage of named DTO schemas and security schemes."
      },
      "RecordstringOpenApi.IPathISwaggerSchemaISwaggerOperation": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApi.IPathISwaggerSchemaISwaggerOperation"
        }
      },
      "OpenApi.IPathISwaggerSchemaISwaggerOperation": {
        "type": "object",
        "properties": {
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApi.IServer"
            },
            "title": "Servers that provide the path operations",
            "description": "Servers that provide the path operations."
          },
          "summary": {
            "type": "string",
            "title": "Summary of the path",
            "description": "Summary of the path."
          },
          "description": {
            "type": "string",
            "title": "Description of the path",
            "description": "Description of the path."
          },
          "get": {
            "$ref": "#/components/schemas/ISwaggerOperation"
          },
          "post": {
            "$ref": "#/components/schemas/ISwaggerOperation"
          },
          "patch": {
            "$ref": "#/components/schemas/ISwaggerOperation"
          },
          "put": {
            "$ref": "#/components/schemas/ISwaggerOperation"
          },
          "delete": {
            "$ref": "#/components/schemas/ISwaggerOperation"
          },
          "options": {
            "$ref": "#/components/schemas/ISwaggerOperation"
          },
          "head": {
            "$ref": "#/components/schemas/ISwaggerOperation"
          },
          "trace": {
            "$ref": "#/components/schemas/ISwaggerOperation"
          }
        },
        "description": "Path item.\n\n`OpenApi.IPath` represents a path item of emended OpenAPI v3.1,\ncollecting multiple method operations in a single path."
      },
      "ISwaggerOperation": {
        "type": "object",
        "properties": {
          "x-wrtn-icon": {
            "type": "string",
            "format": "uri",
            "title": "Icon URL",
            "description": "Icon URL.\n\n`x-wrtn-icon` is a property means an icon URL representing the target API."
          },
          "x-wrtn-standalone": {
            "type": "boolean",
            "title": "Whether standalone API or not",
            "description": "Whether standalone API or not.\n\n`x-wrtn-standalone` is a property means whether the target API is standalone\nso that it can be called without any other APIs or not."
          },
          "operationId": {
            "type": "string",
            "title": "Unique string used to identify the operation",
            "description": "Unique string used to identify the operation."
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApi.IOperation.IParameterISwaggerSchema"
            },
            "title": "List of parameters that are applicable for this operation",
            "description": "List of parameters that are applicable for this operation."
          },
          "requestBody": {
            "$ref": "#/components/schemas/OpenApi.IOperation.IRequestBodyISwaggerSchema",
            "title": "The request body applicable for this operation",
            "description": "The request body applicable for this operation."
          },
          "responses": {
            "$ref": "#/components/schemas/RecordstringOpenApi.IOperation.IResponseISwaggerSchema",
            "description": "The list of possible responses as they are returned from executing this\noperation. Its key is the HTTP status code, and the value is the metadata of\nthe response in the HTTP status code."
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApi.IServer"
            },
            "title": "A list of servers providing this API operation",
            "description": "A list of servers providing this API operation."
          },
          "summary": {
            "type": "string",
            "title": "A short summary of what the operation does",
            "description": "A short summary of what the operation does."
          },
          "description": {
            "type": "string",
            "title": "A verbose explanation of the operation behavior",
            "description": "A verbose explanation of the operation behavior."
          },
          "security": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordstringArraystring"
            },
            "title": "List of securities and their scopes that are required for execution",
            "description": "List of securities and their scopes that are required for execution.\n\nWhen this property be configured, the Restful API operation requires\nthe matched security value for exection. Its key means security key\nmatched with {@link OpenApi.IDocument.security}.\n\nThe value means scopes required for the security key when the security\ntype is {@link OpenApi.ISecurityScheme.IOAuth2}. Otherwise the target\nsecurity type is not {@link OpenApi.ISecurityScheme.IOAuth2}, the value\nwould be empty array."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Tags for API documentation control",
            "description": "Tags for API documentation control."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Flag for indicating this operation is deprecated",
            "description": "Flag for indicating this operation is deprecated."
          }
        },
        "description": "Remote operation info.\n\n`ISwaggerOperation` represents an Restful API operation provided by the\nremote server."
      },
      "OpenApi.IOperation.IParameterISwaggerSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "in": {
            "oneOf": [
              {
                "const": "header"
              },
              {
                "const": "query"
              },
              {
                "const": "cookie"
              },
              {
                "const": "path"
              }
            ]
          },
          "schema": {
            "$ref": "#/components/schemas/ISwaggerSchema"
          },
          "required": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "example": {},
          "examples": {
            "$ref": "#/components/schemas/RecordstringOpenApi.IExample"
          }
        },
        "required": [
          "in",
          "schema"
        ],
        "description": "Parameter of the operation."
      },
      "RecordstringOpenApi.IExample": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApi.IExample"
        }
      },
      "OpenApi.IExample": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "value": {},
          "externalValue": {
            "type": "string"
          }
        },
        "description": "Example of the operation parameter or response."
      },
      "OpenApi.IOperation.IRequestBodyISwaggerSchema": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/PartialRecordOpenApi.IOperation.ContentTypeOpenApi.IOperation.IMediaTypeISwaggerSchema"
          },
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "x-nestia-encrypted": {
            "type": "boolean"
          }
        },
        "description": "Request body of the operation."
      },
      "PartialRecordOpenApi.IOperation.ContentTypeOpenApi.IOperation.IMediaTypeISwaggerSchema": {
        "type": "object",
        "properties": {
          "text/plain": {
            "$ref": "#/components/schemas/OpenApi.IOperation.IMediaTypeISwaggerSchema"
          },
          "application/json": {
            "$ref": "#/components/schemas/OpenApi.IOperation.IMediaTypeISwaggerSchema"
          },
          "application/x-www-form-url-encoded": {
            "$ref": "#/components/schemas/OpenApi.IOperation.IMediaTypeISwaggerSchema"
          },
          "multipart/form-data": {
            "$ref": "#/components/schemas/OpenApi.IOperation.IMediaTypeISwaggerSchema"
          },
          "*/*": {
            "$ref": "#/components/schemas/OpenApi.IOperation.IMediaTypeISwaggerSchema"
          }
        },
        "description": "Make all properties in T optional",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApi.IOperation.IMediaTypeISwaggerSchema"
        }
      },
      "OpenApi.IOperation.IMediaTypeISwaggerSchema": {
        "type": "object",
        "properties": {
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IString"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.ITuple"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IOneOf"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INull"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IUnknown"
              }
            ]
          },
          "example": {},
          "examples": {
            "$ref": "#/components/schemas/RecordstringOpenApi.IExample"
          }
        },
        "description": "Media type of a request/response body."
      },
      "RecordstringOpenApi.IOperation.IResponseISwaggerSchema": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApi.IOperation.IResponseISwaggerSchema"
        }
      },
      "OpenApi.IOperation.IResponseISwaggerSchema": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/RecordstringOpenApi.IOperation.IParameterISwaggerSchema"
          },
          "content": {
            "$ref": "#/components/schemas/PartialRecordOpenApi.IOperation.ContentTypeOpenApi.IOperation.IMediaTypeISwaggerSchema"
          },
          "description": {
            "type": "string"
          },
          "x-nestia-encrypted": {
            "type": "boolean"
          }
        },
        "description": "Response of the operation."
      },
      "RecordstringOpenApi.IOperation.IParameterISwaggerSchema": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApi.IOperation.IParameterISwaggerSchema"
        }
      },
      "RecordstringArraystring": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "OpenApi.IDocument.ITag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "The name of the tag",
            "description": "The name of the tag."
          },
          "description": {
            "type": "string",
            "title": "An optional string describing the tag",
            "description": "An optional string describing the tag."
          }
        },
        "required": [
          "name"
        ],
        "description": "OpenAPI tag information.\n\nIt is possible to skip composing this structure, even if some\ntag names are regsitered in the API routes ({@link OpenApi.IOperation.tags}).\nIn that case, the tag name would be displayed in Swagger-UI without\ndescription.\n\nHowever, if you want to describe the tag name, you can compose this\nstructure and describe the tag name in the {@link description} property."
      },
      "IHubSaleUnitOpenAiSchemaAccessor": {
        "type": "object",
        "properties": {
          "unit_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 유닛의 {@link IHubSaleUnit.id}",
            "description": "대상 유닛의 {@link IHubSaleUnit.id}."
          },
          "keyword": {
            "type": "boolean",
            "title": "Whether the parameters are keyworded or not",
            "description": "Whether the parameters are keyworded or not.\n\nIf this property value is `true`, length of the\n{@link IOpenAiDocument.IFunction.parameters} is always 1, and type of the\npararameter is always {@link IOpenAiSchema.IObject} type. Also, its\nproperties are following below rules:\n\n- `pathParameters`: Path parameters of {@link ISwaggerMigrateRoute.parameters}\n- `query`: Query parameter of {@link ISwaggerMigrateRoute.query}\n- `body`: Body parameter of {@link ISwaggerMigrateRoute.body}\n\n```typescript\n{\n  ...pathParameters,\n  query,\n  body,\n}\n```\n\nOtherwise (this property value is `false`), length of the\n{@link IOpenAiDocument.IFunction.parameters} is variable, and sequence of the\nparameters are following below rules.\n\n```typescript\n[\n  ...pathParameters,\n  ...(query ? [query] : []),\n  ...(body ? [body] : []),\n]\n```"
          }
        },
        "required": [
          "unit_id",
          "keyword"
        ],
        "description": "매물로부터 특정 유닛의 OpenAI 스키마에 대한 접근자 정보."
      },
      "IOpenAiDocument": {
        "type": "object",
        "properties": {
          "openapi": {
            "const": "3.0.3",
            "title": "Version of OpenAPI",
            "description": "Version of OpenAPI.\n\nOpenAI function call schemas are based on OpenAPI 3.0.3."
          },
          "functions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IOpenAiFunction"
            },
            "title": "List of function metadata",
            "description": "List of function metadata.\n\nList of function metadata that can be used for the OpenAI function call.\n\nWhen you want to execute the function with OpenAI constructed arguments,\nyou can do it through {@link OpenAiFetcher.execute} function."
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IOpenAiDocument.IError"
            },
            "title": "List of errors occurred during the composition",
            "description": "List of errors occurred during the composition."
          },
          "options": {
            "$ref": "#/components/schemas/IOpenAiDocument.IOptions",
            "title": "Options for the document",
            "description": "Options for the document.\n\nAdjusted options when composing the document through {@link OpenAiComposer}."
          }
        },
        "required": [
          "openapi",
          "functions",
          "errors",
          "options"
        ],
        "description": "Document of OpenAI function call metadata.\n\n`IOpenAiDocument` is a data structure representing content of\n{@link IOpenAiDocument.functions OpenAI function call metadata}, composed by\n{@link OpenAiComposer} from the {@link ISwagger} document, with\n{@link IOpenAiDocument.errors} and adjusted {@link IOpenAiDocument.options}.\n\nThe different between `IOpenAiDocument` and its origin source {@link ISwagger}\nis, `IOpenAiDocument` has converted every {@link ISwaggerOperation API endpoints}\nto {@link IOpenAiFunction function metadata}. You can execute the function call\nwith OpenAI constructed arguments by using the {@link OpenAiFetcher.execute}\nfunction with the function metadata.\n\nAlso, every type schema informations are casted from {@link ISwaggerSchema} to\n{@link IOpenAiSchema} to escape {@link ISwaggerSchema.IReference reference types},\nand downgrade the version of the JSON schema to OpenAPI 3.0. It's because\nOpenAI function call feature cannot understand both reference types and\nOpenAPI 3.1 specification.\n\nAdditionally, if you've composed `IOpenAiDocument` with\n{@link IOpenAiDocument.IOptions.keyword} configuration (as `true`), number of\n{@link IOpenAiFunction.parameters} are always 1 and the first parameter's type is\nalways {@link IOpenAiSchema.IObject}. The properties' rule is:\n\n- `pathParameters`: Path parameters of {@link ISwaggerMigrateRoute.parameters}\n- `query`: Query parameter of {@link ISwaggerMigrateRoute.query}\n- `body`: Body parameter of {@link ISwaggerMigrateRoute.body}\n\n```typescript\n{\n  ...pathParameters,\n  query,\n  body,\n}\n```\n\nOtherwise, the parameters would be multiple, and the sequence of the parameters\nare following below rules:\n\n```typescript\n[\n  ...pathParameters,\n  ...(query ? [query] : []),\n  ...(body ? [body] : []),\n]\n```"
      },
      "IOpenAiFunction": {
        "type": "object",
        "properties": {
          "method": {
            "oneOf": [
              {
                "const": "get"
              },
              {
                "const": "post"
              },
              {
                "const": "patch"
              },
              {
                "const": "put"
              },
              {
                "const": "delete"
              }
            ],
            "title": "HTTP method of the endpoint",
            "description": "HTTP method of the endpoint."
          },
          "path": {
            "type": "string",
            "title": "Path of the endpoint",
            "description": "Path of the endpoint."
          },
          "name": {
            "type": "string",
            "title": "Representative name of the function",
            "description": "Representative name of the function."
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IOpenAiSchema"
            },
            "title": "List of parameter schemas",
            "description": "List of parameter schemas."
          },
          "separated": {
            "$ref": "#/components/schemas/IOpenAiFunction.ISeparated",
            "title": "Collection of separated parameters",
            "description": "Collection of separated parameters.\n\nFilled only when {@link IOpenAiDocument.IOptions.separate} has been configured."
          },
          "output": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IOpenAiSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.IString"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.INullOnly"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.IOneOf"
              }
            ],
            "title": "Expected return type",
            "description": "Expected return type.\n\nIf the function returns nothing (`void`), then the output is `undefined`."
          },
          "description": {
            "type": "string",
            "title": "Description of the function",
            "description": "Description of the function."
          }
        },
        "required": [
          "method",
          "path",
          "name",
          "parameters"
        ],
        "description": "OpenAI function metadata.\n\n`IOpenAiFunction` is a data structure representing a function,\nwhich is provided by Restful API, and used for the OpenAI function call.\n\nIf you provide this `IOpenAiFunction` instance to the OpenAI, the OpenAI\nwill construct arguments by conversating with the user. Also, you can\nexecute the function call with the OpenAI constructed arguments by using\n{@link OpenAiFetcher.execute}.\n\nFor reference, different between `IOpenAiFunction` and its origin source\n{@link ISwaggerOperation} is, `IOpenAiFunction` has converted every type schema\ninformations from {@link ISwaggerSchema} to {@link IOpenAiSchema} to escape\n{@link ISwaggerSchema.IReference reference types}, and downgrade the version of\nthe JSON schema to OpenAPI 3.0. It's because OpenAI function call feature cannot\nunderstand both reference types and OpenAPI 3.1 specification.\n\nAdditionally, if you've composed `IOpenAiFunction` with\n{@link IOpenAiDocument.IOptions.keyword} configuration (as `true`), number of\n{@link IOpenAiFunction.parameters} are always 1 and the first parameter's type is\nalways {@link IOpenAiSchema.IObject}. The properties' rule is:\n\n- `pathParameters`: Path parameters of {@link ISwaggerMigrateRoute.parameters}\n- `query`: Query parameter of {@link ISwaggerMigrateRoute.query}\n- `body`: Body parameter of {@link ISwaggerMigrateRoute.body}\n\n```typescript\n{\n  ...pathParameters,\n  query,\n  body,\n}\n```\n\nOtherwise, the parameters would be multiple, and the sequence of the parameters\nare following below rules:\n\n```typescript\n[\n  ...pathParameters,\n  ...(query ? [query] : []),\n  ...(body ? [body] : []),\n]\n```"
      },
      "IOpenAiSchema": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IOpenAiSchema.IBoolean"
          },
          {
            "$ref": "#/components/schemas/IOpenAiSchema.IInteger"
          },
          {
            "$ref": "#/components/schemas/IOpenAiSchema.INumber"
          },
          {
            "$ref": "#/components/schemas/IOpenAiSchema.IString"
          },
          {
            "$ref": "#/components/schemas/IOpenAiSchema.IArray"
          },
          {
            "$ref": "#/components/schemas/IOpenAiSchema.IObject"
          },
          {
            "$ref": "#/components/schemas/IOpenAiSchema.IUnknown"
          },
          {
            "$ref": "#/components/schemas/IOpenAiSchema.INullOnly"
          },
          {
            "$ref": "#/components/schemas/IOpenAiSchema.IOneOf"
          }
        ],
        "title": "Type schema info of OpenAI function call",
        "description": "Type schema info of OpenAI function call.\n\n`IOpenAiSchema` is a type schema info of OpenAI function call.\n\n`IOpenAiSchema` is basically follows the JSON schema definition of\nOpenAI v3.0: {@link OpenApiV3.IJsonSchema}. However, `IOpenAiSchema` does not\nhave the reference type {@link OpenApiV3.IJsonSchema.IReference}. It's because\nthe OpenAI cannot compose\n{@link OpenAiFetcher.IProps.arguments function call arguments} of\nthe reference type.\n\nFor reference, the OpenAPI v3.0 based JSON schema definition can't express\nthe tuple array type. It has been supported since OpenAPI v3.1. Therefore,\nit would better to avoid using the tuple array type."
      },
      "IOpenAiSchema.IBoolean": {
        "type": "object",
        "properties": {
          "default": {
            "type": "boolean",
            "title": "Default value",
            "description": "Default value."
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "boolean"
            },
            "title": "Enumeration values",
            "description": "Enumeration values."
          },
          "type": {
            "const": "boolean",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "nullable": {
            "type": "boolean",
            "title": "Whether to allow `null` value or not",
            "description": "Whether to allow `null` value or not."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring.o1"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined.o1"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "type"
        ],
        "description": "Boolean type schema info."
      },
      "methodgetpostpatchputdeletepathstringjmesPathstring.o1": {
        "type": "object",
        "properties": {
          "method": {
            "oneOf": [
              {
                "const": "get"
              },
              {
                "const": "post"
              },
              {
                "const": "patch"
              },
              {
                "const": "put"
              },
              {
                "const": "delete"
              }
            ],
            "title": "HTTP method to call the endpoint",
            "description": "HTTP method to call the endpoint."
          },
          "path": {
            "type": "string",
            "title": "Path of the endpoint",
            "description": "Path of the endpoint."
          },
          "jmesPath": {
            "type": "string",
            "title": "Function returning transformed values using JMESPath expression",
            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
          }
        },
        "required": [
          "method",
          "path",
          "jmesPath"
        ]
      },
      "methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined.o1": {
        "type": "object",
        "properties": {
          "method": {
            "oneOf": [
              {
                "const": "get"
              },
              {
                "const": "post"
              },
              {
                "const": "patch"
              },
              {
                "const": "put"
              },
              {
                "const": "delete"
              }
            ],
            "title": "HTTP method to call the endpoint",
            "description": "HTTP method to call the endpoint."
          },
          "path": {
            "type": "string",
            "title": "Path of the endpoint",
            "description": "Path of the endpoint."
          },
          "label": {
            "type": "string",
            "title": "Transform function returning label",
            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
          },
          "value": {
            "type": "string",
            "title": "Transform function returning target value",
            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
          },
          "array": {
            "type": "string",
            "title": "Transform function returning array instance",
            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
          }
        },
        "required": [
          "method",
          "path",
          "label",
          "value"
        ]
      },
      "IOpenAiSchema.IInteger": {
        "type": "object",
        "properties": {
          "default": {
            "type": "integer",
            "title": "Default value",
            "description": "Default value."
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Enumeration values",
            "description": "Enumeration values."
          },
          "minimum": {
            "type": "integer",
            "title": "Minimum value restriction",
            "description": "Minimum value restriction."
          },
          "maximum": {
            "type": "integer",
            "title": "Maximum value restriction",
            "description": "Maximum value restriction."
          },
          "exclusiveMinimum": {
            "type": "boolean",
            "title": "Exclusive minimum value restriction",
            "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
          },
          "exclusiveMaximum": {
            "type": "boolean",
            "title": "Exclusive maximum value restriction",
            "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
          },
          "multipleOf": {
            "type": "integer",
            "exclusiveMinimum": true,
            "minimum": 0,
            "title": "Multiple of value restriction",
            "description": "Multiple of value restriction."
          },
          "type": {
            "const": "integer",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "nullable": {
            "type": "boolean",
            "title": "Whether to allow `null` value or not",
            "description": "Whether to allow `null` value or not."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring.o1"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined.o1"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "type"
        ],
        "description": "Integer type schema info."
      },
      "IOpenAiSchema.INumber": {
        "type": "object",
        "properties": {
          "default": {
            "type": "number",
            "title": "Default value",
            "description": "Default value."
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Enumeration values",
            "description": "Enumeration values."
          },
          "minimum": {
            "type": "number",
            "title": "Minimum value restriction",
            "description": "Minimum value restriction."
          },
          "maximum": {
            "type": "number",
            "title": "Maximum value restriction",
            "description": "Maximum value restriction."
          },
          "exclusiveMinimum": {
            "type": "boolean",
            "title": "Exclusive minimum value restriction",
            "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
          },
          "exclusiveMaximum": {
            "type": "boolean",
            "title": "Exclusive maximum value restriction",
            "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
          },
          "multipleOf": {
            "type": "number",
            "exclusiveMinimum": true,
            "minimum": 0,
            "title": "Multiple of value restriction",
            "description": "Multiple of value restriction."
          },
          "type": {
            "const": "number",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "nullable": {
            "type": "boolean",
            "title": "Whether to allow `null` value or not",
            "description": "Whether to allow `null` value or not."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring.o1"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined.o1"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "type"
        ],
        "description": "Number type schema info."
      },
      "IOpenAiSchema.IString": {
        "type": "object",
        "properties": {
          "default": {
            "type": "string",
            "title": "Default value",
            "description": "Default value."
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Enumeration values",
            "description": "Enumeration values."
          },
          "format": {
            "type": "string",
            "title": "Format restriction",
            "description": "Format restriction."
          },
          "pattern": {
            "type": "string",
            "title": "Pattern restriction",
            "description": "Pattern restriction."
          },
          "minLength": {
            "type": "integer",
            "title": "Minimum length restriction",
            "description": "Minimum length restriction."
          },
          "maxLength": {
            "type": "integer",
            "title": "Maximum length restriction",
            "description": "Maximum length restriction."
          },
          "contentMediaType": {
            "type": "string",
            "title": "Content media type restriction",
            "description": "Content media type restriction."
          },
          "x-wrtn-secret-key": {
            "type": "string",
            "title": "Secret key for the schema",
            "description": "Secret key for the schema.\n\n`x-wrtn-secret-key` is a property means a secret key that is required\nfor the target API endpoint calling. If the secret key is not filled,\nthe API call would be failed."
          },
          "x-wrtn-secret-scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Secret scopes for the schema",
            "description": "Secret scopes for the schema.\n\n`x-wrtn-secret-scopes` is a property means a list of secret scopes that\nare required for the target API endpoint calling. If the secret scopes\nare not satisfied, the API call would be failed."
          },
          "type": {
            "const": "string",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "nullable": {
            "type": "boolean",
            "title": "Whether to allow `null` value or not",
            "description": "Whether to allow `null` value or not."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring.o1"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined.o1"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "type"
        ],
        "description": "String type schema info."
      },
      "IOpenAiSchema.IArray": {
        "type": "object",
        "properties": {
          "items": {
            "$ref": "#/components/schemas/IOpenAiSchema",
            "title": "Items type schema info",
            "description": "Items type schema info.\n\nThe `items` means the type of the array elements. In other words, it is\nthe type schema info of the `T` in the TypeScript array type `Array<T>`."
          },
          "uniqueItems": {
            "type": "boolean",
            "title": "Unique items restriction",
            "description": "Unique items restriction.\n\nIf this property value is `true`, target array must have unique items."
          },
          "minItems": {
            "type": "integer",
            "title": "Minimum items restriction",
            "description": "Minimum items restriction.\n\nRestriction of minumum number of items in the array."
          },
          "maxItems": {
            "type": "integer",
            "title": "Maximum items restriction",
            "description": "Maximum items restriction.\n\nRestriction of maximum number of items in the array."
          },
          "type": {
            "const": "array",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "nullable": {
            "type": "boolean",
            "title": "Whether to allow `null` value or not",
            "description": "Whether to allow `null` value or not."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring.o1"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined.o1"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "items",
          "type"
        ],
        "description": "Array type schema info."
      },
      "IOpenAiSchema.IObject": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RecordstringIOpenAiSchema",
            "title": "Properties of the object",
            "description": "Properties of the object.\n\nThe `properties` means a list of key-value pairs of the object's\nregular properties. The key is the name of the regular property,\nand the value is the type schema info.\n\nIf you need additional properties that is represented by dynamic key,\nyou can use the {@link additionalProperties} instead."
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "List of key values of the required properties",
            "description": "List of key values of the required properties.\n\nThe `required` means a list of the key values of the required\n{@link properties}. If some property key is not listed in the `required`\nlist, it means that property is optional. Otherwise some property key\nexists in the `required` list, it means that the property must be filled.\n\nBelow is an example of the {@link properties} and `required`.\n\n```typescript\ninterface SomeObject {\n  id: string;\n  email: string;\n  name?: string;\n}\n```\n\nAs you can see, `id` and `email` {@link properties} are {@link required},\nso that they are listed in the `required` list.\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": { \"type\": \"string\" },\n    \"email\": { \"type\": \"string\" },\n    \"name\": { \"type\": \"string\" }\n  },\n  \"required\": [\"id\", \"email\"]\n}\n```"
          },
          "additionalProperties": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.IString"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.INullOnly"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/IOpenAiSchema.IOneOf"
              }
            ],
            "title": "Additional properties' info",
            "description": "Additional properties' info.\n\nThe `additionalProperties` means the type schema info of the additional\nproperties that are not listed in the {@link properties}.\n\nIf the value is `true`, it means that the additional properties are not\nrestricted. They can be any type. Otherwise, if the value is\n{@link IOpenAiSchema} type, it means that the additional properties must\nfollow the type schema info.\n\n- `true`: `Record<string, any>`\n- `IOpenAiSchema`: `Record<string, T>`"
          },
          "type": {
            "const": "object",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "nullable": {
            "type": "boolean",
            "title": "Whether to allow `null` value or not",
            "description": "Whether to allow `null` value or not."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring.o1"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined.o1"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "type"
        ],
        "description": "Object type schema info."
      },
      "RecordstringIOpenAiSchema": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/IOpenAiSchema"
        }
      },
      "IOpenAiSchema.INullOnly": {
        "type": "object",
        "properties": {
          "type": {
            "const": "null",
            "title": "Type is always `null`",
            "description": "Type is always `null`."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring.o1"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined.o1"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "type"
        ],
        "description": "Null only type schema info."
      },
      "IOpenAiSchema.IUnknown": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring.o1"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined.o1"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "description": "Unknown type schema info.\n\nIt means the type of the value is `any`."
      },
      "IOpenAiSchema.IOneOf": {
        "type": "object",
        "properties": {
          "oneOf": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IOpenAiSchema"
            },
            "title": "List of the union types",
            "description": "List of the union types."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringjmesPathstring.o1"
              },
              {
                "$ref": "#/components/schemas/methodgetpostpatchputdeletepathstringlabelstringvaluestringarraystringundefined.o1"
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "oneOf"
        ],
        "description": "One of type schema info.\n\n`IOneOf` represents an union type of the TypeScript (`A | B | C`).\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined `anyOf` instead of the `oneOf`, {@link OpenAiComposer} forcibly\nconverts it to `oneOf` type."
      },
      "IOpenAiFunction.ISeparated": {
        "type": "object",
        "properties": {
          "llm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IOpenAiFunction.ISeparatedParameter"
            },
            "title": "Parameters that would be composed by the OpenAI",
            "description": "Parameters that would be composed by the OpenAI."
          },
          "human": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IOpenAiFunction.ISeparatedParameter"
            },
            "title": "Parameters that would be composed by the human",
            "description": "Parameters that would be composed by the human."
          }
        },
        "required": [
          "llm",
          "human"
        ],
        "description": "Collection of separated parameters."
      },
      "IOpenAiFunction.ISeparatedParameter": {
        "type": "object",
        "properties": {
          "index": {
            "type": "number",
            "title": "Index of the parameter",
            "description": "Index of the parameter."
          },
          "schema": {
            "$ref": "#/components/schemas/IOpenAiSchema",
            "title": "Type schema info of the parameter",
            "description": "Type schema info of the parameter."
          }
        },
        "required": [
          "index",
          "schema"
        ],
        "description": "Separated parameter."
      },
      "IOpenAiDocument.IError": {
        "type": "object",
        "properties": {
          "method": {
            "oneOf": [
              {
                "const": "get"
              },
              {
                "const": "post"
              },
              {
                "const": "patch"
              },
              {
                "const": "put"
              },
              {
                "const": "delete"
              },
              {
                "const": "head"
              }
            ],
            "title": "HTTP method of the endpoint",
            "description": "HTTP method of the endpoint."
          },
          "path": {
            "type": "string",
            "title": "Path of the endpoint",
            "description": "Path of the endpoint."
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Error messsages",
            "description": "Error messsages."
          }
        },
        "required": [
          "method",
          "path",
          "messages"
        ],
        "description": "Error occurred in the composition."
      },
      "IOpenAiDocument.IOptions": {
        "type": "object",
        "properties": {
          "keyword": {
            "type": "boolean",
            "title": "Whether the parameters are keyworded or not",
            "description": "Whether the parameters are keyworded or not.\n\nIf this property value is `true`, length of the\n{@link IOpenAiDocument.IFunction.parameters} is always 1, and type of the\npararameter is always {@link IOpenAiSchema.IObject} type. Also, its\nproperties are following below rules:\n\n- `pathParameters`: Path parameters of {@link ISwaggerMigrateRoute.parameters}\n- `query`: Query parameter of {@link ISwaggerMigrateRoute.query}\n- `body`: Body parameter of {@link ISwaggerMigrateRoute.body}\n\n```typescript\n{\n  ...pathParameters,\n  query,\n  body,\n}\n```\n\nOtherwise (this property value is `false`), length of the\n{@link IOpenAiDocument.IFunction.parameters} is variable, and sequence of the\nparameters are following below rules.\n\n```typescript\n[\n  ...pathParameters,\n  ...(query ? [query] : []),\n  ...(body ? [body] : []),\n]\n```"
          },
          "separate": {
            "type": "null",
            "title": "Separator function for the parameters",
            "description": "Separator function for the parameters.\n\nWhen composing parameter arguments through OpenAI function call,\nthere can be a case that some parameters must be composed by human, or\nLLM cannot understand the parameter. For example, if the parameter type\nhas configured {@link IOpenAiSchema.IString [\"x-wrtn-secret-key\"]}, the\nsecret key value must be composed by human, not by LLM (Large Language Model).\n\nIn that case, if you configure this property with a function that\npredicating whether the schema value must be composed by human or not,\nthe parameters would be separated into two parts.\n\n- {@link IOpenAiFunction.separated.llm}\n- {@link IOpenAiFunction.separated.human}\n\nWhen writing the function, note that returning value `true` means to be\na human composing the value, and `false` means to LLM composing the value.\nAlso, when predicating the schema, it would better to utilize the\n{@link OpenAiTypeChecker} features."
          }
        },
        "required": [
          "keyword",
          "separate"
        ],
        "description": "Options for composing the OpenAI document."
      },
      "IHubOrderGood.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubOrderGood.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-order.created_at"
                },
                {
                  "const": "-order.publish.created_at"
                },
                {
                  "const": "-good.opened_at"
                },
                {
                  "const": "-good.closed_at"
                },
                {
                  "const": "-seller.created_at"
                },
                {
                  "const": "-seller.goods.payments.real"
                },
                {
                  "const": "-seller.goods.published_count"
                },
                {
                  "const": "-seller.reviews.average"
                },
                {
                  "const": "-seller.reviews.count"
                },
                {
                  "const": "-goods.publish_count"
                },
                {
                  "const": "-goods.payments"
                },
                {
                  "const": "-reviews.average"
                },
                {
                  "const": "-reviews.count"
                },
                {
                  "const": "-sale.created_at"
                },
                {
                  "const": "-sale.opened_at"
                },
                {
                  "const": "-sale.closed_at"
                },
                {
                  "const": "-sale.content.title"
                },
                {
                  "const": "-sale.view_count"
                },
                {
                  "const": "+order.created_at"
                },
                {
                  "const": "+order.publish.created_at"
                },
                {
                  "const": "+good.opened_at"
                },
                {
                  "const": "+good.closed_at"
                },
                {
                  "const": "+seller.created_at"
                },
                {
                  "const": "+seller.goods.payments.real"
                },
                {
                  "const": "+seller.goods.published_count"
                },
                {
                  "const": "+seller.reviews.average"
                },
                {
                  "const": "+seller.reviews.count"
                },
                {
                  "const": "+goods.publish_count"
                },
                {
                  "const": "+goods.payments"
                },
                {
                  "const": "+reviews.average"
                },
                {
                  "const": "+reviews.count"
                },
                {
                  "const": "+sale.created_at"
                },
                {
                  "const": "+sale.opened_at"
                },
                {
                  "const": "+sale.closed_at"
                },
                {
                  "const": "+sale.content.title"
                },
                {
                  "const": "+sale.view_count"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IHubOrderGood.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/OmitIHubOrder.IRequest.ISearchsale"
          },
          "sale": {
            "$ref": "#/components/schemas/IHubSale.IRequest.ISearch"
          }
        }
      },
      "OmitIHubOrder.IRequest.ISearchsale": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "published": {
            "type": "boolean"
          },
          "expired": {
            "type": "boolean"
          }
        },
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "IHubSale.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "channel_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "channel_category_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "show_paused": {
            "type": "boolean"
          },
          "show_suspended": {
            "oneOf": [
              {
                "const": "only"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "section_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "title_or_content": {
            "type": "string"
          },
          "title_or_content_tag": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "seller": {
            "$ref": "#/components/schemas/IHubSeller.IRequest.ISearch"
          },
          "review": {
            "$ref": "#/components/schemas/IHubSaleReview.IInvertSearch"
          },
          "audit": {
            "type": "object",
            "properties": {
              "state": {
                "oneOf": [
                  {
                    "const": "none"
                  },
                  {
                    "const": "approved"
                  },
                  {
                    "const": "rejected"
                  },
                  {
                    "const": "agenda"
                  }
                ]
              }
            }
          },
          "connector": {
            "type": "object",
            "properties": {
              "ids": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "type": {
                "oneOf": [
                  {
                    "const": "workflow"
                  },
                  {
                    "const": "api"
                  },
                  {
                    "const": "all"
                  }
                ]
              }
            }
          },
          "app_type": {
            "oneOf": [
              {
                "const": "app"
              },
              {
                "const": "agent"
              },
              {
                "const": "all"
              },
              {
                "const": "migrated"
              }
            ]
          },
          "show_bookmarked": {
            "oneOf": [
              {
                "const": "only"
              },
              {
                "type": "boolean"
              }
            ]
          }
        },
        "description": "검색 정보."
      },
      "IHubSeller.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "mobile": {
            "type": "string",
            "pattern": "^[0-9]*$"
          },
          "name": {
            "type": "string"
          },
          "show_wrtn": {
            "type": "boolean",
            "title": "`studio@wrtn.io` 계정만 검색",
            "description": "`studio@wrtn.io` 계정만 검색."
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "nickname": {
            "type": "string"
          }
        }
      },
      "IHubSaleReview.IInvertSearch": {
        "type": "object",
        "properties": {
          "score": {
            "$ref": "#/components/schemas/IHubSaleReview.IInvertSearch.IScoreRange"
          },
          "count": {
            "$ref": "#/components/schemas/IHubSaleReview.IInvertSearch.ICountRange"
          }
        },
        "description": "매물 스냅샷에 대한 리뷰 검색 정보."
      },
      "IHubSaleReview.IInvertSearch.IScoreRange": {
        "type": "object",
        "properties": {
          "minimum": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "maximum": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          }
        }
      },
      "IHubSaleReview.IInvertSearch.ICountRange": {
        "type": "object",
        "properties": {
          "minimum": {
            "type": "integer"
          },
          "maximum": {
            "type": "integer"
          }
        }
      },
      "IPageIHubOrderGood.IInvert": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubOrderGood.IInvert"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubOrderGood.IInvert": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/IHubOrder.IInvert",
            "title": "주문의 역 참조 정보",
            "description": "주문의 역 참조 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본키",
            "description": "기본키."
          },
          "commodity": {
            "$ref": "#/components/schemas/IHubCartCommodity",
            "description": "장바구니의 {@link IHubCartCommodity}"
          },
          "price": {
            "$ref": "#/components/schemas/IHubOrderPrice.ISummary",
            "title": "상품의 가격 정보",
            "description": "상품의 가격 정보."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문 계약의 개시 시점",
            "description": "주문 계약의 개시 시점.\n\n주문의 확정 시점과 다르게, 효력의 발생 시점을 그보다 뒤로 미룰 수 있다.\n그리고 계약 효력의 발생 시점은, 그것이 도래하기 전까지, 계속 편집할 수 있다.\n또한 월 고정비 과금은, 본 개시 일자를 기준으로 계상된다.\n\n참고로 고객이 판매자의 API 를 구입한 후, 이를 검토하고 개발하는 과정이\n필요하기에, 본디 계약의 효력 발휘 일시는 주문 확정보다 더 뒤로 밀릴 수밖에\n없는 법."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문 계약의 종료 시점",
            "description": "주문 계약의 종료 시점.\n\n단, 계약의 종료 시점을 즉시로 할 수 없다. 계약 개시 시점을 기준으로,\n최소 1 개월의 기간이 지나야만 취소할 수 있다. 그리고 이미 계약애 개시된\n상태라면, 마찬가지로 1 개월 단위로만 계약 종료가 가능하다."
          }
        },
        "required": [
          "order",
          "id",
          "commodity",
          "price",
          "opened_at",
          "closed_at"
        ],
        "description": "개별 상품 정보의 역참조 정보."
      },
      "IHubOrder.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "기본키"
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "description": "주문자"
          },
          "publish": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubOrderPublish"
              }
            ],
            "title": "주문의 확정 정보",
            "description": "주문의 확정 정보."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "레코드 생성 일시"
          },
          "cancelled_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문 취소 일시",
            "description": "주문 취소 일시.\n\n오직 효력 발휘 전에만 취소 가능."
          }
        },
        "required": [
          "id",
          "customer",
          "publish",
          "created_at",
          "cancelled_at"
        ],
        "description": "주문 정보 역참조 정보."
      },
      "IHubOrderPublish": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "id",
          "created_at"
        ],
        "description": "주문의 확정 정보.\n\n`IHubOrderPublish` 는 주문의 확정 정보를 형상화한 엔티티이다. 따라서 본 엔티티가\n존재한다는 것은, {@link IHubCustomer 고객}이 {@link IHubOrder 신청한 주문}이\n계약으로써 성립하였고 확정되었음을 뜻한다.\n\n단, 계약이 확정되었다하여, 그것이 곧바로 개시되는 것은 아니다. 계약을 확정하며\n(또는 주문 상품마다 각각이) 계약의 {@link IHubOrderGood.opened_at 개시 시점}을\n설정할 수 있다. 이는 고객이 판매자의 API 를 구입한 후, 이를 분석하고 개발하는\n과정이 필요하기에, 계약의 개시 시점을 뒤로 미룰 수 있도록 설계한 것.\n\n단 계약의 개시 시점이 나중이더라도, 계약의 효력이 발휘된 시점에서, 첫 달 분의\n고정비는 예치 상태로 전환된다. 물론, 계약의 개시 시점 전까지는 주문 계약을\n취소하여, 이를 환불할 수 있다."
      },
      "IHubCartCommodity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본키",
            "description": "기본키."
          },
          "sale": {
            "$ref": "#/components/schemas/IHubSaleSnapshot.IInvert",
            "title": "상품의 매물 스냅샷 역정보",
            "description": "상품의 매물 스냅샷 역정보.\n\n주문 상품 내지 장바구니 아이템 기준에서의 매물 정보를 담고있어,\n주문에 포함되지 않은 유닛이나 스톡은 모두 제거된 정보이다."
          },
          "pseudo": {
            "type": "boolean",
            "title": "허구 여부",
            "description": "허구 여부.\n\n허구 장바구니 아이템은 문자 그대로 실존하지 존재하지 않는 장바구니 아이템이다.\n\n주로 개별 {@link IHubSale 매물} 단위로 {@link IShoppingCoupon 할인 쿠폰}에\n의한 할인 효과를 계산할 때 사용된다. 또한, 이미 구성된 장바구니에 새 매물을 넣는다\n가정하고, 이 때의 할인 효과를 계산하는 데 쓰이기도 한다.\n\n이외의 경우에는 일절 쓰이는 일이 없으며, 특히 주문 단위에서는 절대 쓰이지 않는다."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "id",
          "sale",
          "pseudo",
          "created_at"
        ],
        "description": "장바구니에 담은 상품\n\n고객이 구매를 염두에 두고, 장바구니에 담은 매물 스냅샷을 형상화한 엔티티이다.\n\n{@link IHubCartCommodity}는 고객이 구매를 염두에 두고, 장바구니에 담은 매물 스냅샷을 형상화한 엔티티이다.\n\n그리고 향후 고객이 이를 실제 주문으로 이어나간다면, 그 때의 단위는 {@link IHubCartCommodity} 에서 {@link IHubOrderGood} 이 된다.\n\n그리고 장바구니에 매물 스냅샷을 담으면서, 필연적으로 고객은 매물 스냅샷 내의 특정 유닛 및 최종 구성품 등 을 선택하기 마련이다.\n이 유닛 및 구성품에 대한 정보는 하위 엔티티인 {@link IHubCartCommodityStock} 에 기록된 다."
      },
      "IHubOrder.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubOrder.IRequest.ISearch",
            "description": "검색 조건"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-order.created_at"
                },
                {
                  "const": "-order.publish.created_at"
                },
                {
                  "const": "+order.created_at"
                },
                {
                  "const": "+order.publish.created_at"
                }
              ]
            },
            "description": "정렬 조건"
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "주문 정보 목록 조회 또는 페이지 정보."
      },
      "IHubOrder.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "sale": {
            "$ref": "#/components/schemas/IHubSale.IRequest.ISearch"
          },
          "published": {
            "type": "boolean"
          },
          "expired": {
            "type": "boolean"
          }
        }
      },
      "IPageIHubOrder": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubOrder"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubOrder": {
        "type": "object",
        "properties": {
          "goods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubOrderGood"
            },
            "minItems": 1,
            "title": "주문을 구성하는 개별 상품 정보",
            "description": "주문을 구성하는 개별 상품 정보."
          },
          "price": {
            "$ref": "#/components/schemas/IHubOrderPrice.ISummary",
            "title": "주문 가격 정보",
            "description": "주문 가격 정보.\n\n주로 {@link IHubSaleUnitStockPrice.fixed 고정비}에 관한 것이되,\n간혹 변동비에 영향을 주는 퍼센트 {@link IHubCoupon 할인 쿠폰}이 포함되었을\n수도 있다."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "기본키"
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "description": "주문자"
          },
          "publish": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubOrderPublish"
              }
            ],
            "title": "주문의 확정 정보",
            "description": "주문의 확정 정보."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "레코드 생성 일시"
          },
          "cancelled_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문 취소 일시",
            "description": "주문 취소 일시.\n\n오직 효력 발휘 전에만 취소 가능."
          }
        },
        "required": [
          "goods",
          "price",
          "id",
          "customer",
          "publish",
          "created_at",
          "cancelled_at"
        ],
        "description": "주문 신청 정보를 형상화한 엔티티이다.\n\n`IHubOrder` 는 고객의 주문 \"신청\" 정보를 형상화한 엔티티이다. 따라서 본 엔티티는\n주문 확정 단계를 뜻하는 {@link IHubOrderPublish} 와 구별되니, 이 점에 주의하도록\n한다. 즉, `IHubOrder` 레코드의 존재가 곧 주문의 완결을 뜻하는 게 아니라는 것.\n\n이외에 고객이 주문을 행하는 즉시, 대상으로 삼은\n{@link IHubCartCommodity 장바구니 원재료}들은 모두 주문 상품으로 격상,\n{@link IHubOrder} 의 하위에 {@link IHubOrderGood} 레코드를 구성하게 된다.\n물론, 대상 장바구니에 들은 모든 상품 원재료가 주문 상품이 되는 것은 아니며,\n그 중 고객이 선택한 것만이 {@link IHubOrderGood} 이 된다."
      },
      "IHubOrderGood": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본키",
            "description": "기본키."
          },
          "commodity": {
            "$ref": "#/components/schemas/IHubCartCommodity",
            "description": "장바구니의 {@link IHubCartCommodity}"
          },
          "price": {
            "$ref": "#/components/schemas/IHubOrderPrice.ISummary",
            "title": "상품의 가격 정보",
            "description": "상품의 가격 정보."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문 계약의 개시 시점",
            "description": "주문 계약의 개시 시점.\n\n주문의 확정 시점과 다르게, 효력의 발생 시점을 그보다 뒤로 미룰 수 있다.\n그리고 계약 효력의 발생 시점은, 그것이 도래하기 전까지, 계속 편집할 수 있다.\n또한 월 고정비 과금은, 본 개시 일자를 기준으로 계상된다.\n\n참고로 고객이 판매자의 API 를 구입한 후, 이를 검토하고 개발하는 과정이\n필요하기에, 본디 계약의 효력 발휘 일시는 주문 확정보다 더 뒤로 밀릴 수밖에\n없는 법."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문 계약의 종료 시점",
            "description": "주문 계약의 종료 시점.\n\n단, 계약의 종료 시점을 즉시로 할 수 없다. 계약 개시 시점을 기준으로,\n최소 1 개월의 기간이 지나야만 취소할 수 있다. 그리고 이미 계약애 개시된\n상태라면, 마찬가지로 1 개월 단위로만 계약 종료가 가능하다."
          }
        },
        "required": [
          "id",
          "commodity",
          "price",
          "opened_at",
          "closed_at"
        ],
        "description": "주문을 구성하는 개별 상품 정보.\n\n{@link IHubOrderGood} 은 고객이 주문한 각각의 상품을 뜻하는 엔티티로써,\n장바구니에 담긴 {@link IHubCartCommodity 상품 원재료}가, 고객의 주문 신청으로\n인하여 상품으로 격상되는 과정에서 그 레코드가 생성된다.\n\n그리고 {@link IHubOrderGood} 는 {@link IHubCartCommodity} 가 그러하였든,\n매물 스냅샷 단위에 대응되는 개념이다.\n\n더하여 {@link IHubOrderGood} 은 주문 이후의 과정, 즉 사후 처리 (A/S) 에 대한\n가장 기본 단위가 된다. 가령 고객이 주문 상품에 대하여 이슈를 발행하거나,\n환불을 요청하는 단위도 바로 이 {@link IHubOrderGood} 이다."
      },
      "IHubPushMessage.ICsvUpload": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "file"
        ],
        "description": "CSV upload information of metadata records."
      },
      "IHubPushMessage.ICreate": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/IHubPushMessageContent.ICreate",
            "title": "Content of the push message",
            "description": "Content of the push message."
          },
          "code": {
            "type": "string",
            "title": "Identifier code of the push message",
            "description": "Identifier code of the push message."
          },
          "source": {
            "type": "string",
            "title": "Source table name occuring the push message event",
            "description": "Source table name occuring the push message event."
          },
          "target": {
            "oneOf": [
              {
                "const": "administrator"
              },
              {
                "const": "seller"
              },
              {
                "const": "customer"
              }
            ],
            "title": "Target actor kind to receive",
            "description": "Target actor kind to receive."
          }
        },
        "required": [
          "content",
          "code",
          "source",
          "target"
        ],
        "description": "Creation information of the push message metadata."
      },
      "IHubPushMessageContent.ICreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "Title of the push message",
            "description": "Title of the push message."
          },
          "body": {
            "type": "string",
            "title": "Body of the push message",
            "description": "Body of the push message."
          }
        },
        "required": [
          "title",
          "body"
        ],
        "description": "Creation information of the push message content."
      },
      "IHubPushMessage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "content": {
            "$ref": "#/components/schemas/IHubPushMessageContent",
            "title": "Content of the push message",
            "description": "Content of the push message."
          },
          "code": {
            "type": "string",
            "title": "Identifier code of the push message",
            "description": "Identifier code of the push message."
          },
          "source": {
            "type": "string",
            "title": "Source table name occuring the push message event",
            "description": "Source table name occuring the push message event."
          },
          "target": {
            "oneOf": [
              {
                "const": "administrator"
              },
              {
                "const": "seller"
              },
              {
                "const": "customer"
              }
            ],
            "title": "Target actor kind to receive",
            "description": "Target actor kind to receive."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of push message metadata",
            "description": "Creation time of push message metadata."
          }
        },
        "required": [
          "id",
          "content",
          "code",
          "source",
          "target",
          "created_at"
        ],
        "description": "Push message metadata."
      },
      "IHubPushMessageContent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "title": {
            "type": "string",
            "title": "Title of the push message",
            "description": "Title of the push message."
          },
          "body": {
            "type": "string",
            "title": "Body of the push message",
            "description": "Body of the push message."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time or update timme of the push message content",
            "description": "Creation time or update timme of the push message content."
          }
        },
        "required": [
          "id",
          "title",
          "body",
          "created_at"
        ],
        "description": "Content of the push message."
      },
      "IHubPushMessage.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubPushMessage.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-message.code"
                },
                {
                  "const": "-message.source"
                },
                {
                  "const": "-message.created_at"
                },
                {
                  "const": "-content.title"
                },
                {
                  "const": "+message.code"
                },
                {
                  "const": "+message.source"
                },
                {
                  "const": "+message.created_at"
                },
                {
                  "const": "+content.title"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "Request of pagination and sorting."
      },
      "IHubPushMessage.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "target": {
            "oneOf": [
              {
                "const": "administrator"
              },
              {
                "const": "seller"
              },
              {
                "const": "customer"
              }
            ]
          },
          "content": {
            "$ref": "#/components/schemas/IHubPushMessageContent.ISearch"
          }
        }
      },
      "IHubPushMessageContent.ISearch": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "title_or_body": {
            "type": "string"
          }
        }
      },
      "IPageIHubPushMessage": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubPushMessage"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubPushMessageHistory.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubPushMessageHistory.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-history.created_at"
                },
                {
                  "const": "-history.read_at"
                },
                {
                  "const": "+history.created_at"
                },
                {
                  "const": "+history.read_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IHubPushMessageHistory.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "$ref": "#/components/schemas/PickIHubPushMessage.IRequest.ISearchcodesource"
          }
        }
      },
      "PickIHubPushMessage.IRequest.ISearchcodesource": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "source": {
            "type": "string"
          }
        },
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "IPageIHubPushMessageHistory": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubPushMessageHistory"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubPushMessageHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "message": {
            "$ref": "#/components/schemas/IHubPushMessage",
            "title": "Metadata information",
            "description": "Metadata information."
          },
          "source_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source record occured the push message history",
            "description": "Source record occured the push message history."
          },
          "variables": {
            "$ref": "#/components/schemas/Recordstringstring",
            "title": "Variables binded to the push message content",
            "description": "Variables binded to the push message content."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the history",
            "description": "Creation time of the history."
          },
          "read_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "Read time of the history",
            "description": "Read time of the history."
          }
        },
        "required": [
          "id",
          "message",
          "source_id",
          "variables",
          "created_at",
          "read_at"
        ],
        "description": "History of push message issuance."
      },
      "IHubSaleAuditComment.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubSaleAuditComment.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "+created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "심사 댓글의 페이지 및 검색 요청 정보."
      },
      "IHubSaleAuditComment.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          }
        },
        "description": "심사 댓글의 검색 조건 정보."
      },
      "IPageIHubSaleAuditComment": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleAuditComment"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubSaleAuditComment": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IHubAdministrator.IInvert"
              },
              {
                "$ref": "#/components/schemas/IHubSeller.IInvert"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "administrator": "#/components/schemas/IHubAdministrator.IInvert",
                "seller": "#/components/schemas/IHubSeller.IInvert"
              }
            },
            "title": "댓글 작성자",
            "description": "댓글 작성자.\n\n심사 게시물의 댓글은 각각 관리자와 판매자가 작성할 수 있다.\n\n물론, 판매자는 해당 매물의 당사자여야만 함."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticleComment.ISnapshot"
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "심사 게시물의 댓글.\n\n`IHubSaleAuditComment` 는 {@link IBbsArticleComment} 의 서브타입 엔티티로써,\n{@link IHubAdministrator 관리자}가 발의한 {@link IHubSaleAudit 심사}에 대하여,\n관리자와 {@link IHubSeller 판매자}가 상호 소통할 때 사용한다.\n\n이는 심사가 종료된 이후로도 그러하며, 한 번 {@link IHubSaleAuditRejection 거절}\n처리된 심사 건에 대하여도, 판매자가 댓글로써 재심을 요청할 수 있다. 물론, 판매자가\n재심을 요청하기 전 관리자의 가이드에 따라 자체 {@link IHubSaleAuditEmension 첨삭}을\n진행하는 경우가 대부분이다."
      },
      "IHubSaleAuditComment.ICreate": {
        "type": "object",
        "properties": {
          "format": {
            "oneOf": [
              {
                "const": "txt"
              },
              {
                "const": "md"
              },
              {
                "const": "html"
              }
            ],
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "body": {
            "type": "string",
            "title": "Content body of comment",
            "description": "Content body of comment."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "format",
          "body",
          "files"
        ],
        "description": "댓글 입력 정보."
      },
      "IHubSaleAudit.ICreate": {
        "type": "object",
        "properties": {
          "format": {
            "oneOf": [
              {
                "const": "txt"
              },
              {
                "const": "md"
              },
              {
                "const": "html"
              }
            ],
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "심사 게시물 입력 정보."
      },
      "IHubSaleAudit": {
        "type": "object",
        "properties": {
          "administrator": {
            "$ref": "#/components/schemas/IHubAdministrator.IInvert",
            "title": "심사를 발제한 관리자",
            "description": "심사를 발제한 관리자."
          },
          "emendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleAuditEmendation"
            },
            "title": "첨삭 내역 리스트",
            "description": "첨삭 내역 리스트."
          },
          "rejections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleAuditRejection"
            },
            "title": "심사 거절 내역 리스트",
            "description": "심사 거절 내역 리스트."
          },
          "approval": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubSaleAuditApproval"
              }
            ],
            "title": "심사 승인 내역",
            "description": "심사 승인 내역."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticle.ISnapshot"
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "administrator",
          "emendations",
          "rejections",
          "approval",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "매물 심사 정보.\n\n본 거래소는 {@link IHubSale 판매자}가 {@link IHubSale 매물}을 등록하고 이를 수정할 때마다\n(새로운 {@link IHubSaleSnapshot 스냅샷} 레코드가 생성될 때마다),\n{@link IHubAdministrator 관리자}의 심사를 필요로 하며, 이를 통과하지 못하는 경우에는\n판매 행위 자체가 불가능하다. `IHubSaleAudit` 는 바로 이러한 매물 스냅샷의 심사를 형상화한\n엔티티이다.\n\n그리고 관리자는 심사 사항을 일종의 게시물로써 작성할 수 있으며, 심사 과정 혹은 그 결과에\n대하여, 판매자와 관리자가 {@link IHubSaleAuditComment 댓글}을 통하여 지속적으로 소통할 수\n있다. 때문에 본 `IHubSaleAudit` 는 {@link IBbsArticle} 의 서브타입 엔티티로써 설계되었다.\n\n또한, 본 심사 게시물은 관리자가 이를 수정할 때마다, 그 수정 내역을 모두 기록하여\n판매자와 관리자가 모두 열람할 수 있도록 하고 있다. 돈이 오가는 전자상거래의 특성상 분쟁의\n소지는 늘 만연하며, 이는 심사 또한 예외가 될 수 없기 때문이다. 분쟁시 관리자나 판매자가\n자신의 주장을 번복하며 게시물을 수정하여 정황을 조작하는 일을 막기 위함이다.\n\n이외에 관리자가 심사를 {@link IHubSaleAuditRejection 거절}했다가 이를 번복하여\n{@link IHubSaleAuditApproval 승인}하는 것은 가능하되, 이미 승인한 심사 내역을 번복하여\n거절하는 것은 불가능하다. 심사를 승인한 순간 이미 매물의 판매가 개시되어버리기 때문."
      },
      "IHubSaleAuditEmendation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "emender": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IHubAdministrator.IInvert"
              },
              {
                "$ref": "#/components/schemas/IHubSeller.IInvert"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "administrator": "#/components/schemas/IHubAdministrator.IInvert",
                "seller": "#/components/schemas/IHubSeller.IInvert"
              }
            },
            "title": "첨삭을 행한 주체",
            "description": "첨삭을 행한 주체.\n\n첨삭은 각각 관리자와 판매 당사자가 모두 행할 수 있다."
          },
          "source_snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "첨삭 대상이 되는 원본 스냅샷의 {@link IHubSaleAuditSnapshot.id}",
            "description": "첨삭 대상이 되는 원본 스냅샷의 {@link IHubSaleAuditSnapshot.id}.\n\n첨삭 대상 스냅샷이, 반드시 심사 개시 당시의 스냅샷일 필요는 없다. 또다른 첨삭의\n결과물에 대하여 추가로 첨삭하는 것이 가능하며, 이전의 첨삭으로 돌아가 다시 첨삭을\n하는 것도 가능하다."
          },
          "emended_snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "첨삭의 결과로서 새로이 생성된 스냅샷의 {@link IHubSaleAuditSnapshot.id}",
            "description": "첨삭의 결과로서 새로이 생성된 스냅샷의 {@link IHubSaleAuditSnapshot.id}."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "첨삭에 대한 사유",
            "description": "첨삭에 대한 사유.\n\n첨삭을 왜 하였고, 무엇을 변경하였냐에 대한 적당한 서술문."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "id",
          "emender",
          "source_snapshot_id",
          "emended_snapshot_id",
          "description",
          "created_at"
        ],
        "description": "매물 심사의 첨삭 정보.\n\n본 거래소는 {@link IHubSeller 판매자}가 등록 혹은 수정한 {@link IHubSale 매물}에\n대하여, {@link IHubAdministrator 관리자}의 심사가 필요하다. 그리고 심사 중에 관리자와\n판매자는 상호 {@link IHubSaleAuditComment 댓글}을 주고받으며, 해당 매물을 첨삭하고\n수정할 수 있다.\n\n본 엔티티 `IHubSaleAuditEmendation` 는 이러한 첨삭을 형상화한 엔티티로써, 관리자 혹은\n판매자가 어떤 {@link IHubSaleSnapshot 스냅샷}을 대상으로 첨삭을 행하였고, 그 결과\n새로이 탄생한 스냅샷이 무엇인지의 정보를 가지고 있다.\n\n그리고 첨삭 대상은 반드시 가장 최근 스냅샷일 필요는 없으며, 경우에 따라 그 이전 스냅샷에\n대한 첨삭을 행함으로써, 롤백 내지 분기 처리하는 것도 가능하다. 물론, 첨삭 대상 스냅샷은\n현재의 심사와 관련이 있어야하며, 이전 심사 통과된 스냅샷을 대상으로는 첨삭을 일절 행할\n수 없다.\n\n이외에 첨삭은 오직 심사가 진행 중에만 가능하며, 심사가\n{@link IHubSaleAuditApproval 승인}되거든 더 이상의 첨삭은 불가능하다. 다만 관리자가\n심사 {@link IHubSaleAuditRejection 거절} 처리를 하는 경우에는, 판매자가 스스로 첨삭하고\n보강하며, 관리자에게 재심을 요청할 수 있다."
      },
      "IHubSaleAuditRejection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "administrator": {
            "$ref": "#/components/schemas/IHubAdministrator.IInvert",
            "title": "심사를 거절한 관리자",
            "description": "심사를 거절한 관리자."
          },
          "reversible": {
            "type": "boolean",
            "title": "번복 가능 여부",
            "description": "번복 가능 여부.\n\n현재의 심사 거절을 확정하고, 번복하지 않을지 여부.\n\n단, 이는 판대자에게 현재의 거절을 확정하고, 향후 번복하여 승인하는 일이 없을\n것이라는 의사 표현에 불과할 뿐이다. 실제로는 이렇게 의사를 표현해놓고, 나중에\n번복하여 승인 처리하는 것이 가능함."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "심사 거절 일시",
            "description": "심사 거절 일시."
          }
        },
        "required": [
          "id",
          "administrator",
          "reversible",
          "created_at"
        ],
        "description": "매물 스냅샷 심사에 대한 거절.\n\n`IHubSaleAuditRejection` 은 {@link IHubAdministrator 관리자}가\n{@link IHubSaleAudit 매물 심사}를 거절한 이력을 형상화한 엔티티이다.\n\n참고로 {@link IHubSaleAudit.administrator 심사를 발제}한 관리자와, 거절 처리하는\n관리자는 서로 다른 사람일 수 있다. 또한, {@link IHubSeller 판매자}가 댓글로 재심의를\n요청하는 경우, 관리자는 반복하여 거절 처리할 수 있다."
      },
      "IHubSaleAuditApproval": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "승인 대상 스냅샷의 {@link IHubSaleSnapshot.id}",
            "description": "승인 대상 스냅샷의 {@link IHubSaleSnapshot.id}."
          },
          "administrator": {
            "$ref": "#/components/schemas/IHubAdministrator.IInvert",
            "title": "승인한 관리자",
            "description": "승인한 관리자.\n\n승인 관리자는 본 심사의 {@link IHubSaleAudit.administrator 발제 관리자}와 다를 수\n있다."
          },
          "fee_ratio": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "title": "수수료율",
            "description": "수수료율.\n\n관리자는 매물의 심사를 승인하며, 수수료율을 정할 수 있다.\n\n물론 새로운 정책에 의거, 그 비율이 고정적으로 사용될 여지는 있음."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "승인 일시",
            "description": "승인 일시."
          }
        },
        "required": [
          "id",
          "snapshot_id",
          "administrator",
          "fee_ratio",
          "created_at"
        ],
        "description": "매물 심사에 대한 승인.\n\n`IHubSaleAuditApproval` 은 {@link IHubAdministrator 관리자}가\n{@link IHubSaleAudit 매물 심사}를 승인하는 행위를 형상화한 엔티티이다.\n\n참고로 IHubSaleAudit 심사를 발제한 관리자와, 승인 처리하는 관리자는 서로 다른 사람일\n수 있다. 또한, 심사를 {@link IHubSaleAuditRejection 거절}하였다가 번복하여 승인하는\n것이 가능하다. 단, 반대로 이미 승인한 심사를 번복하여 거절하는 것은 불가능하다.\n\n승인시 매물이 실제로 판매 개시되기 때문이다."
      },
      "IHubSaleAuditApproval.ICreate": {
        "type": "object",
        "properties": {
          "fee_ratio": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "title": "수수료율",
            "description": "수수료율.\n\n관리자는 매물의 심사를 승인하며, 수수료율을 정할 수 있다.\n\n물론 새로운 정책에 의거, 그 비율이 고정적으로 사용될 여지는 있음."
          },
          "snapshot_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "심사 승인 대상 스냅샷의 {@link hub_sale_snapshots id}",
            "description": "심사 승인 대상 스냅샷의 {@link hub_sale_snapshots id}.\n\n심사를 승인할 때, 반드시 마지막 {@link IHubSaleAuditEmendation 첨삭본}만을\n대상으로 승인할 필요는 없다. 경우에 따라 원본 스냅샷 내지, 이전 첨삭본을\n대상으로 승인하여 {@link IHubSaleSnapshot.activated_at 활성화} 가능."
          }
        },
        "required": [
          "fee_ratio",
          "snapshot_id"
        ],
        "description": "매물 심사 승인의 입력 정보."
      },
      "IHubSaleAuditRejection.ICreate": {
        "type": "object",
        "properties": {
          "reversible": {
            "type": "boolean",
            "title": "번복 가능 여부",
            "description": "번복 가능 여부.\n\n현재의 심사 거절을 확정하고, 번복하지 않을지 여부.\n\n단, 이는 판대자에게 현재의 거절을 확정하고, 향후 번복하여 승인하는 일이 없을\n것이라는 의사 표현에 불과할 뿐이다. 실제로는 이렇게 의사를 표현해놓고, 나중에\n번복하여 승인 처리하는 것이 가능함."
          }
        },
        "required": [
          "reversible"
        ],
        "description": "심사 거절 입력 정보."
      },
      "IHubSaleAuditEmendation.ICreate": {
        "type": "object",
        "properties": {
          "source_snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "첨삭 대상이 되는 원본 스냅샷의 {@link IHubSaleAuditSnapshot.id}",
            "description": "첨삭 대상이 되는 원본 스냅샷의 {@link IHubSaleAuditSnapshot.id}.\n\n첨삭 대상 스냅샷이, 반드시 심사 개시 당시의 스냅샷일 필요는 없다. 또다른 첨삭의\n결과물에 대하여 추가로 첨삭하는 것이 가능하며, 이전의 첨삭으로 돌아가 다시 첨삭을\n하는 것도 가능하다."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "첨삭에 대한 사유",
            "description": "첨삭에 대한 사유.\n\n첨삭을 왜 하였고, 무엇을 변경하였냐에 대한 적당한 서술문."
          },
          "data": {
            "$ref": "#/components/schemas/IHubSaleSnapshot.ICreate"
          }
        },
        "required": [
          "source_snapshot_id",
          "description",
          "data"
        ],
        "description": "첨삭의 입력 정보."
      },
      "IHubSaleSnapshot.ICreate": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleChannel.ICreate"
            },
            "minItems": 1,
            "title": "채널/카테고리 리스트",
            "description": "채널/카테고리 리스트.\n\n본 매물이 판매되는 채널과 카테고리들의 일람."
          },
          "content": {
            "$ref": "#/components/schemas/IHubSaleContent.ICreate",
            "title": "컨텐츠 정보",
            "description": "컨텐츠 정보.\n\n판매자가 매물을 등록하며 작성한 서술 정보."
          },
          "units": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IHubSaleUnit.ICreate.IReleaseUnitCreate"
                },
                {
                  "$ref": "#/components/schemas/IHubSaleUnit.ICreate.IAPIUnitCreate"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "workflow": "#/components/schemas/IHubSaleUnit.ICreate.IReleaseUnitCreate",
                  "api": "#/components/schemas/IHubSaleUnit.ICreate.IAPIUnitCreate"
                }
              }
            },
            "minItems": 1,
            "title": "유닛 리스트",
            "description": "유닛 리스트."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그값 리스트",
            "description": "검색 태그값 리스트."
          },
          "version": {
            "type": "string",
            "title": "버전명",
            "description": "버전명.\n\n{@link ISwaggerInfo.version} 과 다른 값을 설정할 수 있다.\n\n즉, 서버 스펙 (스웨거 문서) 상 버전명과, 스냅샷 상 버전명이 서로 다를 수 있음."
          },
          "version_description": {
            "type": "string",
            "title": "버전 설명",
            "description": "버전 설명."
          }
        },
        "required": [
          "channels",
          "content",
          "units",
          "tags",
          "version",
          "version_description"
        ],
        "description": "매물 스냅샷의 입력 정보."
      },
      "IHubSaleChannel.ICreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "대상 채널의 {@link IHubChannel.code}",
            "description": "대상 채널의 {@link IHubChannel.code}."
          },
          "category_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "uniqueItems": true,
            "title": "타깃 카테고리들의 {@link IHubChannelCategory.id} 리스트",
            "description": "타깃 카테고리들의 {@link IHubChannelCategory.id} 리스트.\n\n만일 본 속성값을 공배열로 설정시, 해당 매물은 카테고리에 대하여 \"미분류\" 상태라,\n귀속 채널의 모든 카테고리에서 판매 가능해진다."
          }
        },
        "required": [
          "code",
          "category_ids"
        ],
        "description": "매물을 판매할 채널/카테고리의 입력 정보."
      },
      "IHubSaleContent.ICreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "제목",
            "description": "제목."
          },
          "summary": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "description": "요약 정보"
          },
          "body": {
            "type": "string",
            "title": "본문 서술 정보",
            "description": "본문 서술 정보."
          },
          "format": {
            "oneOf": [
              {
                "const": "txt"
              },
              {
                "const": "md"
              },
              {
                "const": "html"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식."
          },
          "icons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "제품 대표 이미지 리스트",
            "description": "제품 대표 이미지 리스트."
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "제품 썸내일",
            "description": "제품 썸내일."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 리스트",
            "description": "첨부파일 리스트."
          }
        },
        "required": [
          "title",
          "summary",
          "body",
          "format",
          "icons",
          "thumbnails",
          "files"
        ]
      },
      "IHubSaleUnit.ICreate.IReleaseUnitCreate": {
        "type": "object",
        "properties": {
          "type": {
            "const": "workflow",
            "title": "Discriminated Union 타입의 식별자",
            "description": "Discriminated Union 타입의 식별자."
          },
          "account_code": {
            "type": "string",
            "description": "해당 릴리즈의 {@link IStudioAccount.code}"
          },
          "repository_code": {
            "type": "string",
            "description": "해당 릴리즈의 {@link IStudioRepository.code}"
          },
          "release_id": {
            "type": "string",
            "format": "uuid",
            "description": "릴리즈에 대한 {@link IStudioRepositoryRelease.id}"
          },
          "name": {
            "type": "string",
            "title": "유닛의 대표 이름",
            "description": "유닛의 대표 이름."
          },
          "primary": {
            "type": "boolean",
            "title": "주 유닛 여부",
            "description": "주 유닛 여부.\n\n단순 표기상 속성으로, 라벨링 이상의 의미는 없다."
          },
          "required": {
            "type": "boolean",
            "title": "필수 유닛 여부",
            "description": "필수 유닛 여부.\n\n만일 본 유닛이 필수라면, 고객이 이를 배제하고 구매할 수 없다."
          },
          "options": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IHubSaleUnitDescriptiveOption.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IHubSaleUnitSelectableOption.ICreate"
                }
              ]
            },
            "title": "옵션 리스트",
            "description": "옵션 리스트."
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnitStock.ICreate"
            },
            "minItems": 1,
            "title": "스톡 리스트",
            "description": "스톡 리스트."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "부모 유닛의 {@link IHubSaleUnit.id}",
            "description": "부모 유닛의 {@link IHubSaleUnit.id}.\n\n위 유닛을 구매한 고객은, 본 유닛 또한 함께 사용할 수 있다.\n\n만일 매물을 수정하며 이 값을 `null` 로 둔다면, 이는 이전 버전의 유닛을 구매한\n고객에게, 더 이상의 신규 API 를 제공하지 않겠다는 의미가 된다."
          }
        },
        "required": [
          "type",
          "account_code",
          "repository_code",
          "release_id",
          "name",
          "primary",
          "required",
          "options",
          "stocks",
          "parent_id"
        ],
        "description": "Workflow 유닛의 입력 정보.\n\n{@link IHubSaleUnit.IReleaseUnitCreate.release_id} 는 {@link IStudioRepositoryRelease.id} 이고\n해당 릴리즈 아이디가 존재 한다면 {@link IStudioRepositoryRelease.component} 에 Swagger 문서가 존재 하기 때문에\n{@link StudioRepositoryReleasesController.swagger} 를 통해 해당 릴리즈의 스웨거를 가져와야 한다."
      },
      "IHubSaleUnitDescriptiveOption.ICreate": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "const": "string"
              },
              {
                "const": "number"
              },
              {
                "const": "boolean"
              }
            ],
            "title": "서술형 옵션의 타입",
            "description": "서술형 옵션의 타입.\n\n어떠한 형식이 입력되어야 하는가."
          },
          "name": {
            "type": "string",
            "title": "서술형 옵션의 대표 이름",
            "description": "서술형 옵션의 대표 이름."
          }
        },
        "required": [
          "type",
          "name"
        ],
        "description": "서술형 옵션의 입력 정보."
      },
      "IHubSaleUnitSelectableOption.ICreate": {
        "type": "object",
        "properties": {
          "type": {
            "const": "select",
            "title": "옵션의 타입",
            "description": "옵션의 타입."
          },
          "name": {
            "type": "string",
            "title": "옵션의 대표 이름",
            "description": "옵션의 대표 이름."
          },
          "variable": {
            "type": "boolean",
            "title": "가변형 여부",
            "description": "가변형 여부.\n\n이 속성값이 `true` 이거든, 본 옵션은 고객이\n{@link IHubSaleUnitOptionCandidate 후보값}으로 무엇을 선택하냐에 따라,\n구매하게 되는 {@link IHubSaleUnitStock 최종 구성품}이 달라진다.\n\n반대로 이 값이 `false` 이거든, 고객이 {@link IHubSaleUnitOptionCandidate 후보값}으로\n그 무엇을 선택하던, 이는 {@link IHubSaleUnitStock 최종 구성품}에 영향을 주지 아니한다.\n그저 판매자가 참고하는 단순 정보에 불과할 뿐,"
          },
          "candidates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnitOptionCandidate.ICreate"
            },
            "title": "후보값 리스트",
            "description": "후보값 리스트.\n\n본 옵션에 대하여 고객이 선택 가능한 값들의 일람."
          }
        },
        "required": [
          "type",
          "name",
          "variable",
          "candidates"
        ]
      },
      "IHubSaleUnitOptionCandidate.ICreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "후보값의 대표 이름",
            "description": "후보값의 대표 이름."
          }
        },
        "required": [
          "name"
        ],
        "description": "후보값 입력 정보."
      },
      "IHubSaleUnitStock.ICreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "스톡의 대표 이름",
            "description": "스톡의 대표 이름."
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnitStockChoice.ICreate"
            },
            "title": "본 스톡의 선택 정보",
            "description": "본 스톡의 선택 정보.\n\n어떠한 옵션과 후보값을 선택하여 구성되는가."
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnitStockPrice.ICreate"
            },
            "title": "본 스톡의 가격 정보 리스트",
            "description": "본 스톡의 가격 정보 리스트.\n\n계단식 고정/변동비 가격 모형이 사용된다."
          }
        },
        "required": [
          "name",
          "choices",
          "prices"
        ],
        "description": "스톡의 입력 정보."
      },
      "IHubSaleUnitStockChoice.ICreate": {
        "type": "object",
        "properties": {
          "option_index": {
            "type": "integer",
            "title": "귀속 옵션의 배열상 인덱스 번호",
            "description": "귀속 옵션의 배열상 인덱스 번호."
          },
          "candidate_index": {
            "type": "integer",
            "title": "귀속 후보값의 배열상 인덱스 번호",
            "description": "귀속 후보값의 배열상 인덱스 번호."
          }
        },
        "required": [
          "option_index",
          "candidate_index"
        ]
      },
      "IHubSaleUnitStockPrice.ICreate": {
        "type": "object",
        "properties": {
          "threshold": {
            "type": "integer",
            "title": "역치, 고정 금액 {@link fixed} 내 무료 API 호출 가능 수량",
            "description": "역치, 고정 금액 {@link fixed} 내 무료 API 호출 가능 수량."
          },
          "fixed": {
            "type": "number",
            "minimum": 0,
            "title": "고정비",
            "description": "고정비."
          },
          "variable": {
            "type": "number",
            "minimum": 0,
            "title": "변동비",
            "description": "변동비.\n\n{@link threshold} 를 초과하는 API 호출에 대하여, 각 건 마다 부과되는 금액."
          }
        },
        "required": [
          "threshold",
          "fixed",
          "variable"
        ],
        "description": "스톡 가격 정보의 역 참조 정보."
      },
      "IHubSaleUnit.ICreate.IAPIUnitCreate": {
        "type": "object",
        "properties": {
          "type": {
            "const": "api",
            "title": "Discriminated Union 타입의 식별자",
            "description": "Discriminated Union 타입의 식별자."
          },
          "host": {
            "$ref": "#/components/schemas/IHubSaleUnitHost",
            "title": "호스트 정보",
            "description": "호스트 정보."
          },
          "swagger": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ISwagger"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IDocument"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IDocument"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IDocument"
              }
            ],
            "title": "스웨거 문서 데이터",
            "description": "스웨거 문서 데이터."
          },
          "name": {
            "type": "string",
            "title": "유닛의 대표 이름",
            "description": "유닛의 대표 이름."
          },
          "primary": {
            "type": "boolean",
            "title": "주 유닛 여부",
            "description": "주 유닛 여부.\n\n단순 표기상 속성으로, 라벨링 이상의 의미는 없다."
          },
          "required": {
            "type": "boolean",
            "title": "필수 유닛 여부",
            "description": "필수 유닛 여부.\n\n만일 본 유닛이 필수라면, 고객이 이를 배제하고 구매할 수 없다."
          },
          "options": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IHubSaleUnitDescriptiveOption.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IHubSaleUnitSelectableOption.ICreate"
                }
              ]
            },
            "title": "옵션 리스트",
            "description": "옵션 리스트."
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnitStock.ICreate"
            },
            "minItems": 1,
            "title": "스톡 리스트",
            "description": "스톡 리스트."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "부모 유닛의 {@link IHubSaleUnit.id}",
            "description": "부모 유닛의 {@link IHubSaleUnit.id}.\n\n위 유닛을 구매한 고객은, 본 유닛 또한 함께 사용할 수 있다.\n\n만일 매물을 수정하며 이 값을 `null` 로 둔다면, 이는 이전 버전의 유닛을 구매한\n고객에게, 더 이상의 신규 API 를 제공하지 않겠다는 의미가 된다."
          }
        },
        "required": [
          "type",
          "host",
          "swagger",
          "name",
          "primary",
          "required",
          "options",
          "stocks",
          "parent_id"
        ]
      },
      "IHubSaleUnitHost": {
        "type": "object",
        "properties": {
          "real": {
            "type": "string",
            "format": "uri",
            "title": "실제 서버의 주소",
            "description": "실제 서버의 주소."
          },
          "dev": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "개발용 테스트 서버의 주소",
            "description": "개발용 테스트 서버의 주소."
          }
        },
        "required": [
          "real",
          "dev"
        ],
        "description": "유닛의 호스트 정보.\n\n각 매물 유닛을 구성하는 서버의 호스트 접속 정보.\n\n만약 본 정보를 {@link IHubCustomer 고객}이 조회시, 본 허브 시스템의 미들웨어 API 의 주소가\n기재된다. 반대로 본 정보를 {@link IHubSeller 판매 당사자}나\n{@link IHubAdministrator 관리자}가 조회시, 판매자가 등록한 상용 서버 API 주소가 적힌다."
      },
      "SwaggerV2.IDocument": {
        "type": "object",
        "properties": {
          "swagger": {
            "oneOf": [
              {
                "type": "string",
                "pattern": "^(2\\.0\\.[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$"
              },
              {
                "const": "2.0"
              }
            ]
          },
          "info": {
            "$ref": "#/components/schemas/SwaggerV2.IDocument.IInfo"
          },
          "host": {
            "type": "string"
          },
          "basePath": {
            "type": "string"
          },
          "consumes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "produces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "definitions": {
            "$ref": "#/components/schemas/RecordstringSwaggerV2.IJsonSchema"
          },
          "parameters": {
            "$ref": "#/components/schemas/RecordstringSwaggerV2.IOperation.IParameter"
          },
          "responses": {
            "$ref": "#/components/schemas/RecordstringSwaggerV2.IOperation.IResponse"
          },
          "securityDefinitions": {
            "$ref": "#/components/schemas/RecordstringSwaggerV2.ISecurityDefinition"
          },
          "security": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordstringArraystring"
            }
          },
          "paths": {
            "$ref": "#/components/schemas/RecordstringSwaggerV2.IPath"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SwaggerV2.IDocument.ITag"
            }
          }
        },
        "required": [
          "swagger"
        ]
      },
      "SwaggerV2.IDocument.IInfo": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "termsOfService": {
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/SwaggerV2.IDocument.IContact"
          },
          "license": {
            "$ref": "#/components/schemas/SwaggerV2.IDocument.ILicense"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "version"
        ]
      },
      "SwaggerV2.IDocument.IContact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "SwaggerV2.IDocument.ILicense": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "RecordstringSwaggerV2.IJsonSchema": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IBoolean"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IInteger"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INumber"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IString"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IArray"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IObject"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IReferencestring"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IUnknown"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INullOnly"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IAnyOf"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IOneOf"
            }
          ]
        }
      },
      "SwaggerV2.IJsonSchema.IBoolean": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "boolean"
            }
          },
          "type": {
            "const": "boolean"
          },
          "x-nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "SwaggerV2.IJsonSchema.IInteger": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "minimum": {
            "type": "integer"
          },
          "maximum": {
            "type": "integer"
          },
          "exclusiveMinimum": {
            "type": "boolean"
          },
          "exclusiveMaximum": {
            "type": "boolean"
          },
          "multipleOf": {
            "type": "integer",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "type": {
            "const": "integer"
          },
          "x-nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "SwaggerV2.IJsonSchema.INumber": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "minimum": {
            "type": "number"
          },
          "maximum": {
            "type": "number"
          },
          "exclusiveMinimum": {
            "type": "boolean"
          },
          "exclusiveMaximum": {
            "type": "boolean"
          },
          "multipleOf": {
            "type": "number",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "type": {
            "const": "number"
          },
          "x-nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "SwaggerV2.IJsonSchema.IString": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "format": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          },
          "minLength": {
            "type": "integer"
          },
          "maxLength": {
            "type": "integer"
          },
          "type": {
            "const": "string"
          },
          "x-nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "SwaggerV2.IJsonSchema.IArray": {
        "type": "object",
        "properties": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INullOnly"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IOneOf"
              }
            ]
          },
          "uniqueItems": {
            "type": "boolean"
          },
          "minItems": {
            "type": "integer"
          },
          "maxItems": {
            "type": "integer"
          },
          "type": {
            "const": "array"
          },
          "x-nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "items",
          "type"
        ]
      },
      "SwaggerV2.IJsonSchema.IObject": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RecordstringSwaggerV2.IJsonSchema"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "additionalProperties": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INullOnly"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IOneOf"
              }
            ]
          },
          "maxProperties": {
            "type": "number"
          },
          "minProperties": {
            "type": "number"
          },
          "type": {
            "const": "object"
          },
          "x-nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "SwaggerV2.IJsonSchema.IReferencestring": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "SwaggerV2.IJsonSchema.IUnknown": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        }
      },
      "SwaggerV2.IJsonSchema.INullOnly": {
        "type": "object",
        "properties": {
          "type": {
            "const": "null"
          },
          "default": {
            "type": "null"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "SwaggerV2.IJsonSchema.IAnyOf": {
        "type": "object",
        "properties": {
          "x-anyOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INullOnly"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IOneOf"
                }
              ]
            }
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "x-anyOf"
        ]
      },
      "SwaggerV2.IJsonSchema.IOneOf": {
        "type": "object",
        "properties": {
          "x-oneOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INullOnly"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IOneOf"
                }
              ]
            }
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "x-oneOf"
        ]
      },
      "RecordstringSwaggerV2.IOperation.IParameter": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/IBooleannamestringinstringdescriptionstringundefined"
            },
            {
              "$ref": "#/components/schemas/IIntegernamestringinstringdescriptionstringundefined"
            },
            {
              "$ref": "#/components/schemas/INumbernamestringinstringdescriptionstringundefined"
            },
            {
              "$ref": "#/components/schemas/IStringnamestringinstringdescriptionstringundefined"
            },
            {
              "$ref": "#/components/schemas/IArraynamestringinstringdescriptionstringundefined"
            },
            {
              "$ref": "#/components/schemas/IObjectnamestringinstringdescriptionstringundefined"
            },
            {
              "$ref": "#/components/schemas/IReferencestringnamestringinstringdescriptionstringundefined"
            },
            {
              "$ref": "#/components/schemas/IUnknownnamestringinstringdescriptionstringundefined"
            },
            {
              "$ref": "#/components/schemas/INullOnlynamestringinstringdescriptionstringundefined"
            },
            {
              "$ref": "#/components/schemas/IAnyOfnamestringinstringdescriptionstringundefined"
            },
            {
              "$ref": "#/components/schemas/IOneOfnamestringinstringdescriptionstringundefined"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.IOperation.IBodyParameter"
            }
          ]
        }
      },
      "IBooleannamestringinstringdescriptionstringundefined": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "boolean"
            }
          },
          "type": {
            "const": "boolean"
          },
          "x-nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "in": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "name",
          "in"
        ]
      },
      "IIntegernamestringinstringdescriptionstringundefined": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "minimum": {
            "type": "integer"
          },
          "maximum": {
            "type": "integer"
          },
          "exclusiveMinimum": {
            "type": "boolean"
          },
          "exclusiveMaximum": {
            "type": "boolean"
          },
          "multipleOf": {
            "type": "integer",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "type": {
            "const": "integer"
          },
          "x-nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "in": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "name",
          "in"
        ]
      },
      "INumbernamestringinstringdescriptionstringundefined": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "minimum": {
            "type": "number"
          },
          "maximum": {
            "type": "number"
          },
          "exclusiveMinimum": {
            "type": "boolean"
          },
          "exclusiveMaximum": {
            "type": "boolean"
          },
          "multipleOf": {
            "type": "number",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "type": {
            "const": "number"
          },
          "x-nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "in": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "name",
          "in"
        ]
      },
      "IStringnamestringinstringdescriptionstringundefined": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "format": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          },
          "minLength": {
            "type": "integer"
          },
          "maxLength": {
            "type": "integer"
          },
          "type": {
            "const": "string"
          },
          "x-nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "in": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "name",
          "in"
        ]
      },
      "IArraynamestringinstringdescriptionstringundefined": {
        "type": "object",
        "properties": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INullOnly"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IOneOf"
              }
            ]
          },
          "uniqueItems": {
            "type": "boolean"
          },
          "minItems": {
            "type": "integer"
          },
          "maxItems": {
            "type": "integer"
          },
          "type": {
            "const": "array"
          },
          "x-nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "in": {
            "type": "string"
          }
        },
        "required": [
          "items",
          "type",
          "name",
          "in"
        ]
      },
      "IObjectnamestringinstringdescriptionstringundefined": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RecordstringSwaggerV2.IJsonSchema"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "additionalProperties": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INullOnly"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IOneOf"
              }
            ]
          },
          "maxProperties": {
            "type": "number"
          },
          "minProperties": {
            "type": "number"
          },
          "type": {
            "const": "object"
          },
          "x-nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "in": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "name",
          "in"
        ]
      },
      "IReferencestringnamestringinstringdescriptionstringundefined": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "in": {
            "type": "string"
          }
        },
        "required": [
          "$ref",
          "name",
          "in"
        ]
      },
      "IUnknownnamestringinstringdescriptionstringundefined": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "in": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "in"
        ]
      },
      "INullOnlynamestringinstringdescriptionstringundefined": {
        "type": "object",
        "properties": {
          "type": {
            "const": "null"
          },
          "default": {
            "type": "null"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "in": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "name",
          "in"
        ]
      },
      "IAnyOfnamestringinstringdescriptionstringundefined": {
        "type": "object",
        "properties": {
          "x-anyOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INullOnly"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IOneOf"
                }
              ]
            }
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "in": {
            "type": "string"
          }
        },
        "required": [
          "x-anyOf",
          "name",
          "in"
        ]
      },
      "IOneOfnamestringinstringdescriptionstringundefined": {
        "type": "object",
        "properties": {
          "x-oneOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INullOnly"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IOneOf"
                }
              ]
            }
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "in": {
            "type": "string"
          }
        },
        "required": [
          "x-oneOf",
          "name",
          "in"
        ]
      },
      "SwaggerV2.IOperation.IBodyParameter": {
        "type": "object",
        "properties": {
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INullOnly"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IOneOf"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "in": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          }
        },
        "required": [
          "schema",
          "name",
          "in"
        ]
      },
      "RecordstringSwaggerV2.IOperation.IResponse": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/SwaggerV2.IOperation.IResponse"
        }
      },
      "SwaggerV2.IOperation.IResponse": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "headers": {
            "$ref": "#/components/schemas/RecordstringSwaggerV2.IJsonSchema"
          },
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.INullOnly"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IOneOf"
              }
            ]
          },
          "example": {}
        }
      },
      "RecordstringSwaggerV2.ISecurityDefinition": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/SwaggerV2.ISecurityDefinition.IApiKey"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.ISecurityDefinition.IBasic"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.ISecurityDefinition.IOauth2Implicit"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.ISecurityDefinition.IOauth2AccessCode"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.ISecurityDefinition.IOauth2Password"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.ISecurityDefinition.IOauth2Application"
            }
          ]
        }
      },
      "SwaggerV2.ISecurityDefinition.IApiKey": {
        "type": "object",
        "properties": {
          "type": {
            "const": "apiKey"
          },
          "in": {
            "oneOf": [
              {
                "const": "header"
              },
              {
                "const": "query"
              },
              {
                "const": "cookie"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "SwaggerV2.ISecurityDefinition.IBasic": {
        "type": "object",
        "properties": {
          "type": {
            "const": "basic"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "SwaggerV2.ISecurityDefinition.IOauth2Implicit": {
        "type": "object",
        "properties": {
          "type": {
            "const": "oauth2"
          },
          "flow": {
            "const": "implicit"
          },
          "authorizationUrl": {
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/Recordstringstring"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "flow"
        ]
      },
      "SwaggerV2.ISecurityDefinition.IOauth2AccessCode": {
        "type": "object",
        "properties": {
          "type": {
            "const": "oauth2"
          },
          "flow": {
            "const": "accessCode"
          },
          "authorizationUrl": {
            "type": "string"
          },
          "tokenUrl": {
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/Recordstringstring"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "flow"
        ]
      },
      "SwaggerV2.ISecurityDefinition.IOauth2Password": {
        "type": "object",
        "properties": {
          "type": {
            "const": "oauth2"
          },
          "flow": {
            "const": "password"
          },
          "tokenUrl": {
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/Recordstringstring"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "flow"
        ]
      },
      "SwaggerV2.ISecurityDefinition.IOauth2Application": {
        "type": "object",
        "properties": {
          "type": {
            "const": "oauth2"
          },
          "flow": {
            "const": "application"
          },
          "tokenUrl": {
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/Recordstringstring"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "flow"
        ]
      },
      "RecordstringSwaggerV2.IPath": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/SwaggerV2.IPath"
        }
      },
      "SwaggerV2.IPath": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IBooleannamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IIntegernamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/INumbernamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IStringnamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IArraynamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IObjectnamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IReferencestringnamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IUnknownnamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/INullOnlynamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IAnyOfnamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IOneOfnamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IOperation.IBodyParameter"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IReference#/parameters/string"
                }
              ]
            }
          },
          "get": {
            "$ref": "#/components/schemas/SwaggerV2.IOperation"
          },
          "post": {
            "$ref": "#/components/schemas/SwaggerV2.IOperation"
          },
          "patch": {
            "$ref": "#/components/schemas/SwaggerV2.IOperation"
          },
          "put": {
            "$ref": "#/components/schemas/SwaggerV2.IOperation"
          },
          "delete": {
            "$ref": "#/components/schemas/SwaggerV2.IOperation"
          },
          "options": {
            "$ref": "#/components/schemas/SwaggerV2.IOperation"
          },
          "head": {
            "$ref": "#/components/schemas/SwaggerV2.IOperation"
          },
          "trace": {
            "$ref": "#/components/schemas/SwaggerV2.IOperation"
          }
        }
      },
      "SwaggerV2.IJsonSchema.IReference#/parameters/string": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^(#\\/parameters\\/(.*))"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "SwaggerV2.IOperation": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IBooleannamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IIntegernamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/INumbernamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IStringnamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IArraynamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IObjectnamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IReferencestringnamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IUnknownnamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/INullOnlynamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IAnyOfnamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/IOneOfnamestringinstringdescriptionstringundefined"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IOperation.IBodyParameter"
                },
                {
                  "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IReference#/definitions/parameters/string"
                }
              ]
            }
          },
          "responses": {
            "$ref": "#/components/schemas/RecordstringIResponseIReference#/definitions/responses/string"
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "security": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordstringArraystring"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deprecated": {
            "type": "boolean"
          }
        }
      },
      "SwaggerV2.IJsonSchema.IReference#/definitions/parameters/string": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^(#\\/definitions\\/parameters\\/(.*))"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "RecordstringIResponseIReference#/definitions/responses/string": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/SwaggerV2.IOperation.IResponse"
            },
            {
              "$ref": "#/components/schemas/SwaggerV2.IJsonSchema.IReference#/definitions/responses/string"
            }
          ]
        }
      },
      "SwaggerV2.IJsonSchema.IReference#/definitions/responses/string": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^(#\\/definitions\\/responses\\/(.*))"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "SwaggerV2.IDocument.ITag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "OpenApiV3.IDocument": {
        "type": "object",
        "properties": {
          "openapi": {
            "oneOf": [
              {
                "type": "string",
                "pattern": "^(3\\.0\\.[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$"
              },
              {
                "const": "3.0"
              }
            ]
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApiV3.IServer"
            }
          },
          "info": {
            "$ref": "#/components/schemas/OpenApiV3.IDocument.IInfo"
          },
          "components": {
            "$ref": "#/components/schemas/OpenApiV3.IComponents"
          },
          "paths": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3.IPath"
          },
          "security": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordstringArraystring"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApiV3.IDocument.ITag"
            }
          }
        },
        "required": [
          "openapi"
        ]
      },
      "OpenApiV3.IServer": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "variables": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3.IServer.IVariable"
          }
        },
        "required": [
          "url"
        ]
      },
      "RecordstringOpenApiV3.IServer.IVariable": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApiV3.IServer.IVariable"
        }
      },
      "OpenApiV3.IServer.IVariable": {
        "type": "object",
        "properties": {
          "default": {
            "type": "string"
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "default"
        ]
      },
      "OpenApiV3.IDocument.IInfo": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "termsOfService": {
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/OpenApiV3.IDocument.IContact"
          },
          "license": {
            "$ref": "#/components/schemas/OpenApiV3.IDocument.ILicense"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "version"
        ]
      },
      "OpenApiV3.IDocument.IContact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "OpenApiV3.IDocument.ILicense": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "OpenApiV3.IComponents": {
        "type": "object",
        "properties": {
          "schemas": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3.IJsonSchema"
          },
          "responses": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3.IOperation.IResponse"
          },
          "parameters": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3.IOperation.IParameter"
          },
          "requestBodies": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3.IOperation.IRequestBody"
          },
          "securitySchemes": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3.ISecurityScheme"
          },
          "headers": {
            "$ref": "#/components/schemas/RecordstringOmitOpenApiV3.IOperation.IParameterin"
          },
          "examples": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3.IExample"
          }
        }
      },
      "RecordstringOpenApiV3.IJsonSchema": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IBoolean"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IInteger"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INumber"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IString"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IArray"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IObject"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReferencestring"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IUnknown"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INullOnly"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAllOf"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAnyOf"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IOneOf"
            }
          ]
        }
      },
      "OpenApiV3.IJsonSchema.IBoolean": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "boolean"
            }
          },
          "type": {
            "const": "boolean"
          },
          "nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenApiV3.IJsonSchema.IInteger": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "minimum": {
            "type": "integer"
          },
          "maximum": {
            "type": "integer"
          },
          "exclusiveMinimum": {
            "type": "boolean"
          },
          "exclusiveMaximum": {
            "type": "boolean"
          },
          "multipleOf": {
            "type": "integer",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "type": {
            "const": "integer"
          },
          "nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenApiV3.IJsonSchema.INumber": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "minimum": {
            "type": "number"
          },
          "maximum": {
            "type": "number"
          },
          "exclusiveMinimum": {
            "type": "boolean"
          },
          "exclusiveMaximum": {
            "type": "boolean"
          },
          "multipleOf": {
            "type": "number",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "type": {
            "const": "number"
          },
          "nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenApiV3.IJsonSchema.IString": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "format": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          },
          "minLength": {
            "type": "integer"
          },
          "maxLength": {
            "type": "integer"
          },
          "type": {
            "const": "string"
          },
          "nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenApiV3.IJsonSchema.IArray": {
        "type": "object",
        "properties": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INullOnly"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAllOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IOneOf"
              }
            ]
          },
          "uniqueItems": {
            "type": "boolean"
          },
          "minItems": {
            "type": "integer"
          },
          "maxItems": {
            "type": "integer"
          },
          "type": {
            "const": "array"
          },
          "nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "items",
          "type"
        ]
      },
      "OpenApiV3.IJsonSchema.IObject": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3.IJsonSchema"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "additionalProperties": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INullOnly"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAllOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IOneOf"
              }
            ]
          },
          "maxProperties": {
            "type": "number"
          },
          "minProperties": {
            "type": "number"
          },
          "type": {
            "const": "object"
          },
          "nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenApiV3.IJsonSchema.IReferencestring": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "OpenApiV3.IJsonSchema.IUnknown": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        }
      },
      "OpenApiV3.IJsonSchema.INullOnly": {
        "type": "object",
        "properties": {
          "type": {
            "const": "null"
          },
          "default": {
            "type": "null"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenApiV3.IJsonSchema.IAllOf": {
        "type": "object",
        "properties": {
          "allOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INullOnly"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAllOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IOneOf"
                }
              ]
            }
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "allOf"
        ]
      },
      "OpenApiV3.IJsonSchema.IAnyOf": {
        "type": "object",
        "properties": {
          "anyOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INullOnly"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAllOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IOneOf"
                }
              ]
            }
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "anyOf"
        ]
      },
      "OpenApiV3.IJsonSchema.IOneOf": {
        "type": "object",
        "properties": {
          "oneOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INullOnly"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAllOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IOneOf"
                }
              ]
            }
          },
          "discriminator": {
            "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IOneOf.IDiscriminator"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "oneOf"
        ]
      },
      "OpenApiV3.IJsonSchema.IOneOf.IDiscriminator": {
        "type": "object",
        "properties": {
          "propertyName": {
            "type": "string"
          },
          "mapping": {
            "$ref": "#/components/schemas/Recordstringstring"
          }
        },
        "required": [
          "propertyName"
        ]
      },
      "RecordstringOpenApiV3.IOperation.IResponse": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApiV3.IOperation.IResponse"
        }
      },
      "OpenApiV3.IOperation.IResponse": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3.IOperation.IMediaType"
          },
          "headers": {
            "$ref": "#/components/schemas/RecordstringOmitIParameterinIReference#/components/headers/string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "RecordstringOpenApiV3.IOperation.IMediaType": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApiV3.IOperation.IMediaType"
        }
      },
      "OpenApiV3.IOperation.IMediaType": {
        "type": "object",
        "properties": {
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INullOnly"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAllOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IOneOf"
              }
            ]
          },
          "example": {},
          "examples": {
            "$ref": "#/components/schemas/RecordstringIExampleIReference#/components/examples/string"
          }
        }
      },
      "RecordstringIExampleIReference#/components/examples/string": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/OpenApiV3.IExample"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReference#/components/examples/string"
            }
          ]
        }
      },
      "OpenApiV3.IExample": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "value": {},
          "externalValue": {
            "type": "string"
          }
        }
      },
      "OpenApiV3.IJsonSchema.IReference#/components/examples/string": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^(#\\/components\\/examples\\/(.*))"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "RecordstringOmitIParameterinIReference#/components/headers/string": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/OmitOpenApiV3.IOperation.IParameterin"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReference#/components/headers/string"
            }
          ]
        }
      },
      "OmitOpenApiV3.IOperation.IParameterin": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INullOnly"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAllOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IOneOf"
              }
            ]
          },
          "required": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "example": {},
          "examples": {
            "$ref": "#/components/schemas/RecordstringIExampleIReference#/components/examples/string"
          }
        },
        "required": [
          "schema"
        ],
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "OpenApiV3.IJsonSchema.IReference#/components/headers/string": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^(#\\/components\\/headers\\/(.*))"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "RecordstringOpenApiV3.IOperation.IParameter": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApiV3.IOperation.IParameter"
        }
      },
      "OpenApiV3.IOperation.IParameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "in": {
            "oneOf": [
              {
                "const": "header"
              },
              {
                "const": "query"
              },
              {
                "const": "cookie"
              },
              {
                "const": "path"
              }
            ]
          },
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.INullOnly"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAllOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IOneOf"
              }
            ]
          },
          "required": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "example": {},
          "examples": {
            "$ref": "#/components/schemas/RecordstringIExampleIReference#/components/examples/string"
          }
        },
        "required": [
          "in",
          "schema"
        ]
      },
      "RecordstringOpenApiV3.IOperation.IRequestBody": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApiV3.IOperation.IRequestBody"
        }
      },
      "OpenApiV3.IOperation.IRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "content": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3.IOperation.IMediaType"
          }
        }
      },
      "RecordstringOpenApiV3.ISecurityScheme": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/OpenApiV3.ISecurityScheme.IApiKey"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.ISecurityScheme.IHttpBasic"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.ISecurityScheme.IHttpBearer"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.ISecurityScheme.IOAuth2"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.ISecurityScheme.IOpenId"
            }
          ]
        }
      },
      "OpenApiV3.ISecurityScheme.IApiKey": {
        "type": "object",
        "properties": {
          "type": {
            "const": "apiKey"
          },
          "in": {
            "oneOf": [
              {
                "const": "header"
              },
              {
                "const": "query"
              },
              {
                "const": "cookie"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenApiV3.ISecurityScheme.IHttpBasic": {
        "type": "object",
        "properties": {
          "type": {
            "const": "http"
          },
          "scheme": {
            "const": "basic"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "scheme"
        ]
      },
      "OpenApiV3.ISecurityScheme.IHttpBearer": {
        "type": "object",
        "properties": {
          "type": {
            "const": "http"
          },
          "scheme": {
            "const": "bearer"
          },
          "bearerFormat": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "scheme"
        ]
      },
      "OpenApiV3.ISecurityScheme.IOAuth2": {
        "type": "object",
        "properties": {
          "type": {
            "const": "oauth2"
          },
          "flows": {
            "$ref": "#/components/schemas/OpenApiV3.ISecurityScheme.IOAuth2.IFlowSet"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "flows"
        ]
      },
      "OpenApiV3.ISecurityScheme.IOAuth2.IFlowSet": {
        "type": "object",
        "properties": {
          "authorizationCode": {
            "$ref": "#/components/schemas/OpenApiV3.ISecurityScheme.IOAuth2.IFlow"
          },
          "implicit": {
            "$ref": "#/components/schemas/OmitOpenApiV3.ISecurityScheme.IOAuth2.IFlowtokenUrl"
          },
          "password": {
            "$ref": "#/components/schemas/OmitOpenApiV3.ISecurityScheme.IOAuth2.IFlowauthorizationUrl"
          },
          "clientCredentials": {
            "$ref": "#/components/schemas/OmitOpenApiV3.ISecurityScheme.IOAuth2.IFlowauthorizationUrl"
          }
        }
      },
      "OpenApiV3.ISecurityScheme.IOAuth2.IFlow": {
        "type": "object",
        "properties": {
          "authorizationUrl": {
            "type": "string"
          },
          "tokenUrl": {
            "type": "string"
          },
          "refreshUrl": {
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/Recordstringstring"
          }
        }
      },
      "OmitOpenApiV3.ISecurityScheme.IOAuth2.IFlowtokenUrl": {
        "type": "object",
        "properties": {
          "authorizationUrl": {
            "type": "string"
          },
          "refreshUrl": {
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/Recordstringstring"
          }
        },
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "OmitOpenApiV3.ISecurityScheme.IOAuth2.IFlowauthorizationUrl": {
        "type": "object",
        "properties": {
          "tokenUrl": {
            "type": "string"
          },
          "refreshUrl": {
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/Recordstringstring"
          }
        },
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "OpenApiV3.ISecurityScheme.IOpenId": {
        "type": "object",
        "properties": {
          "type": {
            "const": "openIdConnect"
          },
          "openIdConnectUrl": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "openIdConnectUrl"
        ]
      },
      "RecordstringOmitOpenApiV3.IOperation.IParameterin": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OmitOpenApiV3.IOperation.IParameterin"
        }
      },
      "RecordstringOpenApiV3.IExample": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApiV3.IExample"
        }
      },
      "RecordstringOpenApiV3.IPath": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApiV3.IPath"
        }
      },
      "OpenApiV3.IPath": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3.IOperation.IParameter"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReference#/components/headers/string"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReference#/components/parameters/string"
                }
              ]
            }
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApiV3.IServer"
            }
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "get": {
            "$ref": "#/components/schemas/OpenApiV3.IOperation"
          },
          "post": {
            "$ref": "#/components/schemas/OpenApiV3.IOperation"
          },
          "patch": {
            "$ref": "#/components/schemas/OpenApiV3.IOperation"
          },
          "put": {
            "$ref": "#/components/schemas/OpenApiV3.IOperation"
          },
          "delete": {
            "$ref": "#/components/schemas/OpenApiV3.IOperation"
          },
          "options": {
            "$ref": "#/components/schemas/OpenApiV3.IOperation"
          },
          "head": {
            "$ref": "#/components/schemas/OpenApiV3.IOperation"
          },
          "trace": {
            "$ref": "#/components/schemas/OpenApiV3.IOperation"
          }
        }
      },
      "OpenApiV3.IJsonSchema.IReference#/components/parameters/string": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^(#\\/components\\/parameters\\/(.*))"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "OpenApiV3.IOperation": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3.IOperation.IParameter"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReference#/components/headers/string"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReference#/components/parameters/string"
                }
              ]
            }
          },
          "requestBody": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenApiV3.IOperation.IRequestBody"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReference#/components/requestBodies/string"
              }
            ]
          },
          "responses": {
            "$ref": "#/components/schemas/RecordstringIResponseIReference#/components/responses/string"
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApiV3.IServer"
            }
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "security": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordstringArraystring"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deprecated": {
            "type": "boolean"
          }
        }
      },
      "OpenApiV3.IJsonSchema.IReference#/components/requestBodies/string": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^(#\\/components\\/requestBodies\\/(.*))"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "RecordstringIResponseIReference#/components/responses/string": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/OpenApiV3.IOperation.IResponse"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3.IJsonSchema.IReference#/components/responses/string"
            }
          ]
        }
      },
      "OpenApiV3.IJsonSchema.IReference#/components/responses/string": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^(#\\/components\\/responses\\/(.*))"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "OpenApiV3.IDocument.ITag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "OpenApiV3_1.IDocument": {
        "type": "object",
        "properties": {
          "openapi": {
            "type": "string",
            "pattern": "^(3\\.1\\.[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)$"
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApiV3_1.IServer"
            }
          },
          "info": {
            "$ref": "#/components/schemas/OpenApiV3_1.IDocument.IInfo"
          },
          "components": {
            "$ref": "#/components/schemas/OpenApiV3_1.IComponents"
          },
          "paths": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3_1.IPath"
          },
          "webhooks": {
            "$ref": "#/components/schemas/RecordstringIPathIReference#/components/pathItems/string"
          },
          "security": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordstringArraystring"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApiV3_1.IDocument.ITag"
            }
          }
        },
        "required": [
          "openapi"
        ]
      },
      "OpenApiV3_1.IServer": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "variables": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3_1.IServer.IVariable"
          }
        },
        "required": [
          "url"
        ]
      },
      "RecordstringOpenApiV3_1.IServer.IVariable": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApiV3_1.IServer.IVariable"
        }
      },
      "OpenApiV3_1.IServer.IVariable": {
        "type": "object",
        "properties": {
          "default": {
            "type": "string"
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "default"
        ]
      },
      "OpenApiV3_1.IDocument.IInfo": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "termsOfService": {
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/OpenApiV3_1.IDocument.IContact"
          },
          "license": {
            "$ref": "#/components/schemas/OpenApiV3_1.IDocument.ILicense"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "version"
        ]
      },
      "OpenApiV3_1.IDocument.IContact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "OpenApiV3_1.IDocument.ILicense": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "OpenApiV3_1.IComponents": {
        "type": "object",
        "properties": {
          "schemas": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3_1.IJsonSchema"
          },
          "pathItems": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3_1.IPath"
          },
          "responses": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3_1.IOperation.IResponse"
          },
          "parameters": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3_1.IOperation.IParameter"
          },
          "requestBodies": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3_1.IOperation.IRequestBody"
          },
          "securitySchemes": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3_1.ISecurityScheme"
          },
          "headers": {
            "$ref": "#/components/schemas/RecordstringOmitOpenApiV3_1.IOperation.IParameterin"
          },
          "examples": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3_1.IExample"
          }
        }
      },
      "RecordstringOpenApiV3_1.IJsonSchema": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
            }
          ]
        }
      },
      "OpenApiV3_1.IJsonSchema.IMixed": {
        "type": "object",
        "properties": {
          "type": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "string"
                },
                {
                  "const": "number"
                },
                {
                  "const": "boolean"
                },
                {
                  "const": "object"
                },
                {
                  "const": "array"
                },
                {
                  "const": "integer"
                }
              ]
            }
          },
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {}
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {}
          },
          "const": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          },
          "nullable": {
            "type": "boolean"
          },
          "exclusiveMinimum": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "minimum": {
            "type": "number"
          },
          "maximum": {
            "type": "number"
          },
          "exclusiveMaximum": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "multipleOf": {
            "type": "number",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "format": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          },
          "maxLength": {
            "type": "integer"
          },
          "minLength": {
            "type": "integer"
          },
          "contentMediaType": {
            "type": "string"
          },
          "minItems": {
            "type": "integer"
          },
          "maxItems": {
            "type": "integer"
          },
          "uniqueItems": {
            "type": "boolean"
          },
          "items": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
                    }
                  ]
                }
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
              }
            ]
          },
          "prefixItems": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
                }
              ]
            }
          },
          "additionalItems": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
              }
            ]
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3_1.IJsonSchema"
          },
          "additionalProperties": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
              }
            ]
          },
          "maxProperties": {
            "type": "number"
          },
          "minProperties": {
            "type": "number"
          },
          "oneOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
                }
              ]
            }
          },
          "discriminator": {
            "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf.IDiscriminator"
          },
          "anyOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
                }
              ]
            }
          },
          "allOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
                }
              ]
            }
          }
        },
        "required": [
          "type",
          "const",
          "items",
          "oneOf",
          "anyOf",
          "allOf"
        ]
      },
      "OpenApiV3_1.IJsonSchema.IConstant": {
        "type": "object",
        "properties": {
          "const": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "const"
        ]
      },
      "OpenApiV3_1.IJsonSchema.IBoolean": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "boolean"
            }
          },
          "type": {
            "const": "boolean"
          },
          "nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenApiV3_1.IJsonSchema.IInteger": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "minimum": {
            "type": "integer"
          },
          "maximum": {
            "type": "integer"
          },
          "exclusiveMinimum": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "exclusiveMaximum": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "multipleOf": {
            "type": "integer",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "type": {
            "const": "integer"
          },
          "nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenApiV3_1.IJsonSchema.INumber": {
        "type": "object",
        "properties": {
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "minimum": {
            "type": "number"
          },
          "maximum": {
            "type": "number"
          },
          "exclusiveMinimum": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "exclusiveMaximum": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "multipleOf": {
            "type": "number",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "type": {
            "const": "number"
          },
          "nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenApiV3_1.IJsonSchema.IString": {
        "type": "object",
        "properties": {
          "contentMediaType": {
            "type": "string"
          },
          "default": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "enum": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "format": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          },
          "minLength": {
            "type": "integer"
          },
          "maxLength": {
            "type": "integer"
          },
          "type": {
            "const": "string"
          },
          "nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenApiV3_1.IJsonSchema.IArray": {
        "type": "object",
        "properties": {
          "items": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
                    },
                    {
                      "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
                    }
                  ]
                }
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
              }
            ]
          },
          "prefixItems": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
                }
              ]
            }
          },
          "uniqueItems": {
            "type": "boolean"
          },
          "additionalItems": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
              }
            ]
          },
          "minItems": {
            "type": "integer"
          },
          "maxItems": {
            "type": "integer"
          },
          "type": {
            "const": "array"
          },
          "nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "items",
          "type"
        ]
      },
      "OpenApiV3_1.IJsonSchema.IObject": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3_1.IJsonSchema"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "additionalProperties": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
              }
            ]
          },
          "maxProperties": {
            "type": "number"
          },
          "minProperties": {
            "type": "number"
          },
          "type": {
            "const": "object"
          },
          "nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenApiV3_1.IJsonSchema.IReferencestring": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "OpenApiV3_1.IJsonSchema.IUnknown": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        }
      },
      "OpenApiV3_1.IJsonSchema.INull": {
        "type": "object",
        "properties": {
          "default": {
            "type": "null"
          },
          "type": {
            "const": "null"
          },
          "nullable": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenApiV3_1.IJsonSchema.IAllOf": {
        "type": "object",
        "properties": {
          "allOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
                }
              ]
            }
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "allOf"
        ]
      },
      "OpenApiV3_1.IJsonSchema.IAnyOf": {
        "type": "object",
        "properties": {
          "anyOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
                }
              ]
            }
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "anyOf"
        ]
      },
      "OpenApiV3_1.IJsonSchema.IOneOf": {
        "type": "object",
        "properties": {
          "oneOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
                }
              ]
            }
          },
          "discriminator": {
            "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf.IDiscriminator"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "oneOf"
        ]
      },
      "OpenApiV3_1.IJsonSchema.IOneOf.IDiscriminator": {
        "type": "object",
        "properties": {
          "propertyName": {
            "type": "string"
          },
          "mapping": {
            "$ref": "#/components/schemas/Recordstringstring"
          }
        },
        "required": [
          "propertyName"
        ]
      },
      "RecordstringOpenApiV3_1.IPath": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApiV3_1.IPath"
        }
      },
      "OpenApiV3_1.IPath": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IOperation.IParameter"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReference#/components/headers/string"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReference#/components/parameters/string"
                }
              ]
            }
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApiV3_1.IServer"
            }
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "get": {
            "$ref": "#/components/schemas/OpenApiV3_1.IOperation"
          },
          "post": {
            "$ref": "#/components/schemas/OpenApiV3_1.IOperation"
          },
          "patch": {
            "$ref": "#/components/schemas/OpenApiV3_1.IOperation"
          },
          "put": {
            "$ref": "#/components/schemas/OpenApiV3_1.IOperation"
          },
          "delete": {
            "$ref": "#/components/schemas/OpenApiV3_1.IOperation"
          },
          "options": {
            "$ref": "#/components/schemas/OpenApiV3_1.IOperation"
          },
          "head": {
            "$ref": "#/components/schemas/OpenApiV3_1.IOperation"
          },
          "trace": {
            "$ref": "#/components/schemas/OpenApiV3_1.IOperation"
          }
        }
      },
      "OpenApiV3_1.IOperation.IParameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "in": {
            "oneOf": [
              {
                "const": "header"
              },
              {
                "const": "query"
              },
              {
                "const": "cookie"
              },
              {
                "const": "path"
              }
            ]
          },
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
              }
            ]
          },
          "required": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "example": {},
          "examples": {
            "$ref": "#/components/schemas/RecordstringIExampleIReference#/components/examples/string.o1"
          }
        },
        "required": [
          "in",
          "schema"
        ]
      },
      "RecordstringIExampleIReference#/components/examples/string.o1": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IExample"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReference#/components/examples/string"
            }
          ]
        }
      },
      "OpenApiV3_1.IExample": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "value": {},
          "externalValue": {
            "type": "string"
          }
        }
      },
      "OpenApiV3_1.IJsonSchema.IReference#/components/examples/string": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^(#\\/components\\/examples\\/(.*))"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "OpenApiV3_1.IJsonSchema.IReference#/components/headers/string": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^(#\\/components\\/headers\\/(.*))"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "OpenApiV3_1.IJsonSchema.IReference#/components/parameters/string": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^(#\\/components\\/parameters\\/(.*))"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "OpenApiV3_1.IOperation": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IOperation.IParameter"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReference#/components/headers/string"
                },
                {
                  "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReference#/components/parameters/string"
                }
              ]
            }
          },
          "requestBody": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IOperation.IRequestBody"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReference#/components/requestBodies/string"
              }
            ]
          },
          "responses": {
            "$ref": "#/components/schemas/RecordstringIResponseIReference#/components/responses/string.o1"
          },
          "servers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApiV3_1.IServer"
            }
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "security": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordstringArraystring"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deprecated": {
            "type": "boolean"
          }
        }
      },
      "OpenApiV3_1.IOperation.IRequestBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "content": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3_1.IOperation.IMediaType"
          }
        }
      },
      "RecordstringOpenApiV3_1.IOperation.IMediaType": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApiV3_1.IOperation.IMediaType"
        }
      },
      "OpenApiV3_1.IOperation.IMediaType": {
        "type": "object",
        "properties": {
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
              }
            ]
          },
          "example": {},
          "examples": {
            "$ref": "#/components/schemas/RecordstringIExampleIReference#/components/examples/string.o1"
          }
        }
      },
      "OpenApiV3_1.IJsonSchema.IReference#/components/requestBodies/string": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^(#\\/components\\/requestBodies\\/(.*))"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "RecordstringIResponseIReference#/components/responses/string.o1": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IOperation.IResponse"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReference#/components/responses/string"
            }
          ]
        }
      },
      "OpenApiV3_1.IOperation.IResponse": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/RecordstringOpenApiV3_1.IOperation.IMediaType"
          },
          "headers": {
            "$ref": "#/components/schemas/RecordstringIReference#/components/headers/stringOmitIParameterin"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "RecordstringIReference#/components/headers/stringOmitIParameterin": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReference#/components/headers/string"
            },
            {
              "$ref": "#/components/schemas/OmitOpenApiV3_1.IOperation.IParameterin"
            }
          ]
        }
      },
      "OmitOpenApiV3_1.IOperation.IParameterin": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "schema": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IMixed"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IString"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IUnknown"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.INull"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAllOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IAnyOf"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IOneOf"
              }
            ]
          },
          "required": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "example": {},
          "examples": {
            "$ref": "#/components/schemas/RecordstringIExampleIReference#/components/examples/string.o1"
          }
        },
        "required": [
          "schema"
        ],
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "OpenApiV3_1.IJsonSchema.IReference#/components/responses/string": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^(#\\/components\\/responses\\/(.*))"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "RecordstringOpenApiV3_1.IOperation.IResponse": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApiV3_1.IOperation.IResponse"
        }
      },
      "RecordstringOpenApiV3_1.IOperation.IParameter": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApiV3_1.IOperation.IParameter"
        }
      },
      "RecordstringOpenApiV3_1.IOperation.IRequestBody": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApiV3_1.IOperation.IRequestBody"
        }
      },
      "RecordstringOpenApiV3_1.ISecurityScheme": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/OpenApiV3_1.ISecurityScheme.IApiKey"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.ISecurityScheme.IHttpBasic"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.ISecurityScheme.IHttpBearer"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.ISecurityScheme.IOAuth2"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.ISecurityScheme.IOpenId"
            }
          ]
        }
      },
      "OpenApiV3_1.ISecurityScheme.IApiKey": {
        "type": "object",
        "properties": {
          "type": {
            "const": "apiKey"
          },
          "in": {
            "oneOf": [
              {
                "const": "header"
              },
              {
                "const": "query"
              },
              {
                "const": "cookie"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "OpenApiV3_1.ISecurityScheme.IHttpBasic": {
        "type": "object",
        "properties": {
          "type": {
            "const": "http"
          },
          "scheme": {
            "const": "basic"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "scheme"
        ]
      },
      "OpenApiV3_1.ISecurityScheme.IHttpBearer": {
        "type": "object",
        "properties": {
          "type": {
            "const": "http"
          },
          "scheme": {
            "const": "bearer"
          },
          "bearerFormat": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "scheme"
        ]
      },
      "OpenApiV3_1.ISecurityScheme.IOAuth2": {
        "type": "object",
        "properties": {
          "type": {
            "const": "oauth2"
          },
          "flows": {
            "$ref": "#/components/schemas/OpenApiV3_1.ISecurityScheme.IOAuth2.IFlowSet"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "flows"
        ]
      },
      "OpenApiV3_1.ISecurityScheme.IOAuth2.IFlowSet": {
        "type": "object",
        "properties": {
          "authorizationCode": {
            "$ref": "#/components/schemas/OpenApiV3_1.ISecurityScheme.IOAuth2.IFlow"
          },
          "implicit": {
            "$ref": "#/components/schemas/OmitOpenApiV3_1.ISecurityScheme.IOAuth2.IFlowtokenUrl"
          },
          "password": {
            "$ref": "#/components/schemas/OmitOpenApiV3_1.ISecurityScheme.IOAuth2.IFlowauthorizationUrl"
          },
          "clientCredentials": {
            "$ref": "#/components/schemas/OmitOpenApiV3_1.ISecurityScheme.IOAuth2.IFlowauthorizationUrl"
          }
        }
      },
      "OpenApiV3_1.ISecurityScheme.IOAuth2.IFlow": {
        "type": "object",
        "properties": {
          "authorizationUrl": {
            "type": "string"
          },
          "tokenUrl": {
            "type": "string"
          },
          "refreshUrl": {
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/Recordstringstring"
          }
        }
      },
      "OmitOpenApiV3_1.ISecurityScheme.IOAuth2.IFlowtokenUrl": {
        "type": "object",
        "properties": {
          "authorizationUrl": {
            "type": "string"
          },
          "refreshUrl": {
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/Recordstringstring"
          }
        },
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "OmitOpenApiV3_1.ISecurityScheme.IOAuth2.IFlowauthorizationUrl": {
        "type": "object",
        "properties": {
          "tokenUrl": {
            "type": "string"
          },
          "refreshUrl": {
            "type": "string"
          },
          "scopes": {
            "$ref": "#/components/schemas/Recordstringstring"
          }
        },
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "OpenApiV3_1.ISecurityScheme.IOpenId": {
        "type": "object",
        "properties": {
          "type": {
            "const": "openIdConnect"
          },
          "openIdConnectUrl": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "openIdConnectUrl"
        ]
      },
      "RecordstringOmitOpenApiV3_1.IOperation.IParameterin": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OmitOpenApiV3_1.IOperation.IParameterin"
        }
      },
      "RecordstringOpenApiV3_1.IExample": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "$ref": "#/components/schemas/OpenApiV3_1.IExample"
        }
      },
      "RecordstringIPathIReference#/components/pathItems/string": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IPath"
            },
            {
              "$ref": "#/components/schemas/OpenApiV3_1.IJsonSchema.IReference#/components/pathItems/string"
            }
          ]
        }
      },
      "OpenApiV3_1.IJsonSchema.IReference#/components/pathItems/string": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "pattern": "^(#\\/components\\/pathItems\\/(.*))"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deprecated": {
            "type": "boolean"
          }
        },
        "required": [
          "$ref"
        ]
      },
      "OpenApiV3_1.IDocument.ITag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "IHubSaleInquiryComment.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubSaleInquiryComment.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "+created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "질의문 댓글의 검색 및 페이지 요청 정보."
      },
      "IHubSaleInquiryComment.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        }
      },
      "IPageIHubSaleInquiryComment": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleInquiryComment"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubSaleInquiryComment": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IHubCustomer"
              },
              {
                "$ref": "#/components/schemas/IHubSeller.IInvert"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "customer": "#/components/schemas/IHubCustomer",
                "seller": "#/components/schemas/IHubSeller.IInvert"
              }
            },
            "title": "질의문 댓글 작성자",
            "description": "질의문 댓글 작성자.\n\n{@link IHubCustomer} 또는 {@link IHubSeller.IInvert}가 될 수 있습니다."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticleComment.ISnapshot"
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "질의문 댓글.\n질의문에의 댓글은, 관계 당사자가 아니더라도 자유로이 작성할 수 있다."
      },
      "IHubSaleQuestion.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubSaleInquiry.IRequest.ISearch",
            "title": "Search condition",
            "description": "Search condition."
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "+created_at"
                },
                {
                  "const": "-title"
                },
                {
                  "const": "-updated_at"
                },
                {
                  "const": "-nickname"
                },
                {
                  "const": "+title"
                },
                {
                  "const": "+updated_at"
                },
                {
                  "const": "+nickname"
                },
                {
                  "const": "-answered_at"
                },
                {
                  "const": "+answered_at"
                }
              ]
            },
            "title": "Sort condition",
            "description": "Sort condition."
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IHubSaleInquiry.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "answered": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ],
            "title": "답변 여부",
            "description": "답변 여부.\n\n  - `true`: 답변 완료된 질의글만 검색\n  - `false`: 답변 완료되지 않은 질의글만 검색\n  - `null`: both of them"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "title_or_body": {
            "type": "string"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IPageIHubSaleQuestion.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleQuestion.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubSaleQuestion.ISummary": {
        "type": "object",
        "properties": {
          "type": {
            "const": "question"
          },
          "secret": {
            "type": "boolean"
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "질의문 작성 고객",
            "description": "질의문 작성 고객."
          },
          "answer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubSaleInquiryAnswer.ISummary"
              }
            ],
            "description": "귀속 답변\n\n답변이 없다면 NULL."
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "판매자가 질의 게시물을 열람하였는 지 여부",
            "description": "판매자가 질의 게시물을 열람하였는 지 여부."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "title": {
            "type": "string",
            "title": "Title of the last snapshot",
            "description": "Title of the last snapshot."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the article",
            "description": "Creation time of the article."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modification time of the article",
            "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
          }
        },
        "required": [
          "type",
          "secret",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "title",
          "created_at",
          "updated_at"
        ],
        "description": "매물 스냅샷에 대한 질문의 요약 정보."
      },
      "IHubSaleInquiryAnswer.ISummary": {
        "type": "object",
        "properties": {
          "seller": {
            "$ref": "#/components/schemas/IHubSeller.IInvert"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "title": {
            "type": "string",
            "title": "Title of the last snapshot",
            "description": "Title of the last snapshot."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the article",
            "description": "Creation time of the article."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modification time of the article",
            "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
          }
        },
        "required": [
          "seller",
          "id",
          "title",
          "created_at",
          "updated_at"
        ],
        "description": "답변글의 요약 정보."
      },
      "IHubSaleQuestion": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "boolean",
            "title": "질문글이 비밀글인지 여부",
            "description": "질문글이 비밀글인지 여부."
          },
          "type": {
            "const": "question",
            "description": "질의 게시물의 타입"
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "질의 게시물의 고객",
            "description": "질의 게시물의 고객.\n\n{@link IHubCustomer}"
          },
          "answer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubSaleInquiryAnswer"
              }
            ],
            "title": "질의 게시물 답변 작성자",
            "description": "질의 게시물 답변 작성자.\n\n답변 작성을 하지 않았다면 NULL.\n\n{@link IHubSaleInquiryAnswer}"
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "판매자가 질의 게시물을 열람하였는 지 여부",
            "description": "판매자가 질의 게시물을 열람하였는 지 여부."
          },
          "like_count": {
            "type": "number",
            "minimum": 0,
            "title": "질의문 좋아요 수",
            "description": "질의문 좋아요 수."
          },
          "liked_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "질의문 좋아요 시간",
            "description": "질의문 좋아요 시간."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticle.ISnapshot"
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "secret",
          "type",
          "customer",
          "answer",
          "read_by_seller",
          "like_count",
          "liked_at",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "매물 스냅샷에 대한 질문.\n\n{@link IHubSaleQuestion}는 {@link IHubSaleInquiry} 의 서브타입 엔티티로써, 고객이 판매자가\n등록한 매물 (당시의 스냅샷) 에 대하여 무언가 묻고자 할 때 사용된다.\n\n그리고 보편적인 거래소들이 그러하듯, {@link IHubSaleQuestion} 또한 secret 이라는 속성을 제공, 질\n문글을 작성한 고객 당사자와 판매자 상호간에만 열람이 가능한 / \"비밀글\" 을 작성할 수 있다."
      },
      "IHubSaleInquiryAnswer": {
        "type": "object",
        "properties": {
          "seller": {
            "$ref": "#/components/schemas/IHubSeller.IInvert",
            "title": "답변 작성자",
            "description": "답변 작성자."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBbsArticle.ISnapshot"
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "seller",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "매물 스냅샷의 질의문에 대한 답변.\n\n{@link IHubSaleInquiryAnswer}는 고객이 작성한 질의문에 대하여, 판매자가 작성하는 공식 답변을 형상화한 엔티티이다.\n물론, 판매자가 이처럼 공식 답변글을 작성하는 것 외에도, 귀속 질의문에서의 댓글을 통해 질문 당사자 및 여러 고객과 상호 소통하는 것도 가능하다.\n\n답변글에 대해 댓글을 작성하는 것은 불가하다. 질의문에 댓글을 작성하게끔 유도할 것."
      },
      "IHubSaleReview.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubSaleReview.IRequest.ISearch",
            "title": "Search condition",
            "description": "Search condition."
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "+created_at"
                },
                {
                  "const": "-title"
                },
                {
                  "const": "-updated_at"
                },
                {
                  "const": "-nickname"
                },
                {
                  "const": "+title"
                },
                {
                  "const": "+updated_at"
                },
                {
                  "const": "+nickname"
                },
                {
                  "const": "-answered_at"
                },
                {
                  "const": "+answered_at"
                },
                {
                  "const": "-score"
                },
                {
                  "const": "+score"
                }
              ]
            },
            "title": "Sort condition",
            "description": "Sort condition."
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "매물 스냅샷에 대한 리뷰 검색 요청 정보."
      },
      "IHubSaleReview.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "answered": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ],
            "title": "답변 여부",
            "description": "답변 여부.\n\n  - `true`: 답변 완료된 질의글만 검색\n  - `false`: 답변 완료되지 않은 질의글만 검색\n  - `null`: both of them"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "title_or_body": {
            "type": "string"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "minimum": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "maximum": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          }
        }
      },
      "IPageIHubSaleReview.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleReview.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubSaleReview.ISummary": {
        "type": "object",
        "properties": {
          "type": {
            "const": "review"
          },
          "score": {
            "type": "number"
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "질의문 작성 고객",
            "description": "질의문 작성 고객."
          },
          "answer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubSaleInquiryAnswer.ISummary"
              }
            ],
            "description": "귀속 답변\n\n답변이 없다면 NULL."
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "판매자가 질의 게시물을 열람하였는 지 여부",
            "description": "판매자가 질의 게시물을 열람하였는 지 여부."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "title": {
            "type": "string",
            "title": "Title of the last snapshot",
            "description": "Title of the last snapshot."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the article",
            "description": "Creation time of the article."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modification time of the article",
            "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
          }
        },
        "required": [
          "type",
          "score",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "title",
          "created_at",
          "updated_at"
        ],
        "description": "매물 스냅샷에 대한 리뷰 요약."
      },
      "IHubSaleReview": {
        "type": "object",
        "properties": {
          "type": {
            "const": "review",
            "description": "질의 게시물의 타입"
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "질의 게시물의 고객",
            "description": "질의 게시물의 고객.\n\n{@link IHubCustomer}"
          },
          "answer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubSaleInquiryAnswer"
              }
            ],
            "title": "질의 게시물 답변 작성자",
            "description": "질의 게시물 답변 작성자.\n\n답변 작성을 하지 않았다면 NULL.\n\n{@link IHubSaleInquiryAnswer}"
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "판매자가 질의 게시물을 열람하였는 지 여부",
            "description": "판매자가 질의 게시물을 열람하였는 지 여부."
          },
          "like_count": {
            "type": "number",
            "minimum": 0,
            "title": "질의문 좋아요 수",
            "description": "질의문 좋아요 수."
          },
          "liked_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "질의문 좋아요 시간",
            "description": "질의문 좋아요 시간."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleReview.ISnapshot"
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "type",
          "customer",
          "answer",
          "read_by_seller",
          "like_count",
          "liked_at",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "매물 스냅샷에 대한 리뷰.\n\n{@link IHubSaleReview}는 {@link IHubSaleInquiry}의 서브타입 엔티티로써, 고객이 판매자가 등록\n한 매물 (당시의 스냅샷) 을 상품으로써 구매하고, 이에 대한 후기 및 평가를 남기고자 할 때 사용된다.\n\n참고로 {@link IHubSaleReview} 과 {@link IHubOrderGood} 은 대수관계상 N: 1 이기는 하나,\n그렇다고 고객이 무한정 동일 상품에 대하여 리뷰글을 계속 작성할 수 있는 것은 아니다."
      },
      "IHubSaleReview.ISnapshot": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "리뷰의 평가 점수"
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
          },
          "format": {
            "$ref": "#/components/schemas/IBbsArticle.Format",
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "score",
          "id",
          "created_at",
          "format",
          "title",
          "body",
          "files"
        ]
      },
      "IHubSale.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubSale.IRequest.ISearch",
            "title": "검색 정보",
            "description": "검색 정보."
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-seller.created_at"
                },
                {
                  "const": "-seller.goods.payments.real"
                },
                {
                  "const": "-seller.goods.published_count"
                },
                {
                  "const": "-seller.reviews.average"
                },
                {
                  "const": "-seller.reviews.count"
                },
                {
                  "const": "-goods.publish_count"
                },
                {
                  "const": "-goods.payments"
                },
                {
                  "const": "-reviews.average"
                },
                {
                  "const": "-reviews.count"
                },
                {
                  "const": "-sale.created_at"
                },
                {
                  "const": "-sale.opened_at"
                },
                {
                  "const": "-sale.closed_at"
                },
                {
                  "const": "-sale.content.title"
                },
                {
                  "const": "-sale.view_count"
                },
                {
                  "const": "+seller.created_at"
                },
                {
                  "const": "+seller.goods.payments.real"
                },
                {
                  "const": "+seller.goods.published_count"
                },
                {
                  "const": "+seller.reviews.average"
                },
                {
                  "const": "+seller.reviews.count"
                },
                {
                  "const": "+goods.publish_count"
                },
                {
                  "const": "+goods.payments"
                },
                {
                  "const": "+reviews.average"
                },
                {
                  "const": "+reviews.count"
                },
                {
                  "const": "+sale.created_at"
                },
                {
                  "const": "+sale.opened_at"
                },
                {
                  "const": "+sale.closed_at"
                },
                {
                  "const": "+sale.content.title"
                },
                {
                  "const": "+sale.view_count"
                }
              ]
            },
            "title": "정렬 기준",
            "description": "정렬 기준."
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "매물의 검색 및 페이지 요청 정보."
      },
      "IPageIHubSale.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSale.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubSale": {
        "type": "object",
        "properties": {
          "section": {
            "$ref": "#/components/schemas/IHubSection",
            "title": "귀속 섹션",
            "description": "귀속 섹션.\n\n본 매물이 어느 섹션에서 판매되는가."
          },
          "seller": {
            "$ref": "#/components/schemas/IHubSeller.IInvert",
            "title": "매물을 등록한 판매자",
            "description": "매물을 등록한 판매자."
          },
          "audit": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubSaleAudit.IInvert"
              }
            ],
            "title": "심사 정보",
            "description": "심사 정보.\n\n만일 이 값이 `null` 이거나 혹은 내부 속성값 {@link IHubSaleAudit.approved_at} 이\n`null` 인 경우, 고객은 이를 일절 조회하거나 열람/구매할 수 없다. 오직 판매 당사자와\n관리자만이 해당 매물의 존재를 인지 가능."
          },
          "bookmarked_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "북마크로 추가한 시점",
            "description": "북마크로 추가한 시점."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "매물의 ID",
            "description": "매물의 ID."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "스냅샷의 ID",
            "description": "스냅샷의 ID."
          },
          "latest": {
            "type": "boolean",
            "title": "마지막 스냅샷 여부",
            "description": "마지막 스냅샷 여부.\n\n본 스냅샷이 귀속 매물의 가장 마지막 스냅샷인가?\n\n단, 본 매물을 조회하는 유저의 관점에 따라, \"마지막\" 의 기준이 다르다.\n\n- 고객 관점: 가장 마지막에 승인된 매물\n- 판매자/관리자: 가장 마지막에 작성된 매물"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleChannel"
            },
            "title": "채널/카테고리 리스트",
            "description": "채널/카테고리 리스트.\n\n본 매물이 판매되는 채널과 카테고리들의 일람."
          },
          "aggregate": {
            "$ref": "#/components/schemas/IHubSaleAggregate",
            "title": "본 매물 (또는 스냅샷) 에 대한 집계/성과 정보",
            "description": "본 매물 (또는 스냅샷) 에 대한 집계/성과 정보."
          },
          "content": {
            "$ref": "#/components/schemas/IHubSaleContent",
            "title": "컨텐츠 정보",
            "description": "컨텐츠 정보.\n\n판매자가 매물을 등록하며 작성한 서술 정보."
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnit"
            },
            "minItems": 1,
            "title": "유닛 리스트",
            "description": "유닛 리스트.\n\n현 매물이 취급하는 제품들에 대하여 표현하는 레코드로써, 각각의 제품에 대하여\n설정할 수 있는 {@link IHubSaleUnitOption 옵션} 및, 옵션들을 선택하여\n구성할 수 있는 최종 구성품 {@link IHubSaleUnitStock 스톡}에 대한 정보를\n담고 있다."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그 값 리스트",
            "description": "검색 태그 값 리스트."
          },
          "version": {
            "type": "string",
            "title": "버전명",
            "description": "버전명.\n\n{@link ISwaggerInfo.version} 과 다른 값을 설정할 수 있다.\n\n즉, 서버 스펙 (스웨거 문서) 상 버전명과, 제품상 버전명이 다를 수 있음."
          },
          "version_description": {
            "type": "string",
            "title": "버전 설명",
            "description": "버전 설명."
          },
          "activated_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "스냅샷의 활성화 시각",
            "description": "스냅샷의 활성화 시각.\n\n본 스냅샷이 심사 승인되어, 최초 활성화된 시각."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "현 매물 (스냅샷) 의 API 들이 중단되는 시각",
            "description": "현 매물 (스냅샷) 의 API 들이 중단되는 시각.\n\n거래 대상물이 API 인 본 시스템의 특성상, 판매자가 매물을 판매 중단했따하여\n그것이 곧바로 삭제되어서는 안된다. 최소한의 이용 기간을 보장해주어야, 해당\nAPI 를 사용하는 고객들이 이에 대응할 것이 아니겠는가?\n\n때문에 매물에 대한 판매 중단시, 일정 유예 기간을 두고 사라지도록 하고 있다.\n\n물론, 단 한 번도 판매된 적 없는 매물이거든, 해당 없음."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "paused_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 일시정지 일시",
            "description": "판매 일시정지 일시.\n\n판매자가 모종의 이유로 API 판매를 일시적으로 중단한 상태.\n\n고객은 여전히 리스트 및 상세 페이지에서 해당 매물을 열람할 수 있으되, 해당 매물에는\n\"판매자가 일시 중지된 상품입니다\" 라는 라벨이 붙는다."
          },
          "suspended_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 중단 일시",
            "description": "판매 중단 일시.\n\n판매자가 모종의 이유로 판매를 중단한 상태.\n\n고객은 해당 매물을 리스트 및 상세 페이지에서 일절 조회할 수 업다. 언뜻 보면\nsoft delete 와 비슷해보이나, 판매 당사자와 관리자는 여전히 이를 조회할 수 있고,\n언제든지 판매를 재개할 수 있다는 점이 다르다.\n\n또한 판매자 중단되었다한들, 해당 매물의 기 구매자들은 여전히 해당 API 를 사용할\n수 있다. API 의 중단 시점은 {@link IHubSaleSnapshot.expired_at} 속성을 참고할\n것."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 개시 일시",
            "description": "판매 개시 일시."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 종료 일시",
            "description": "판매 종료 일시.\n\n이 값이 NULL 이거든, 판매가 영원히 계속된다."
          }
        },
        "required": [
          "section",
          "seller",
          "audit",
          "bookmarked_at",
          "id",
          "snapshot_id",
          "latest",
          "channels",
          "aggregate",
          "content",
          "units",
          "tags",
          "version",
          "version_description",
          "activated_at",
          "expired_at",
          "created_at",
          "paused_at",
          "suspended_at",
          "opened_at",
          "closed_at"
        ],
        "description": "매물 정보.\n\n`IHubSale` 은 {@link IHubSeller 판매자}가 등록한 \"API 제품 판매 (세일즈)\" 정보를\n형상화한 엔티티이다.\n\n그리고 매물의 주 정보는 본 엔티티가 아닌, 하위 {@link IHubSaleSnapshot} 에 기록된다.\n따라서 판매자가 기 등록한 매물을 편집하면, 기존의 `IHubSale` 레코드를 변경되는 것이 아니라,\n새로운 {@link IHubSaleSnapshot} 레코드를 생성된다. 이는 {@link IHubCustomer 고객}이\n특정 매물을 {@link IHubOrderGood 구입}한 이후, 판매자가 해당 매물의\n{@link IHubSaleUnitStock 구성품}이나 {@link IHubSaleUnitStockPrice 가격} 등을\n변경하더라도, 고객의 당시 구매 내역을 무결적으로 보존하기 위함이다. 또한, 판매자가\n구성품이나 가격 등을 변경하며 각각의 경우에 대한 성과를 측정하는, 이른바 A/B 테스트를\n할 수 있게 지원하기 위함이기도 하다.\n\n그리고 매물은 묶음 상품이나 옵션 등의 경우를 고려, 상품 정보가 아래 하위의 엔티티들로\n이어진다. 이들의 구조가 제법 복잡하니, 본 `IHubSale` 및 아래 엔티티들에 적힌 설명들을\n꼼꼼히 읽어볼 것.\n\n- {@link IHubSaleSnapshot}\n- {@link IHubSaleUnit}\n  - {@link IHubSaleUnitOption}\n  - {@link IHubSaleUnitOptionCandidate}\n- {@link IHubSaleUnitStock}\n\n이외에 본 `IHubSale` 의 판매 대상물인 Swagger (OpenAPI) Documents 에 대하여도, 아래\n문서들을 꼼꼼히 읽어, 그 구성 원리를 필히 이해하도록 할 것.\n\n- {@link IHubSaleUnitSwagger}\n  - {@link IHubSaleUnitHost}\n  - {@link IHubSaleUnitRoute}\n- {@link ISwagger}\n  - {@link ISwaggerInfo}\n  - {@link ISwaggerOperation}\n  - {@link ISwaggerComponents}\n  - {@link ISwaggerSchema}\n  - {@link ISwaggerSecurityScheme}"
      },
      "IHubSaleContent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "title": {
            "type": "string",
            "title": "제목",
            "description": "제목."
          },
          "format": {
            "$ref": "#/components/schemas/IHubSaleContent.Type",
            "title": "본문 형식",
            "description": "본문 형식."
          },
          "body": {
            "type": "string",
            "title": "본문 서술 정보",
            "description": "본문 서술 정보."
          },
          "summary": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "description": "요약 정보"
          },
          "icons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile"
            },
            "title": "제품 대표 아이콘 리스트",
            "description": "제품 대표 아이콘 리스트."
          },
          "thumbnails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile"
            },
            "title": "제품 썸내일",
            "description": "제품 썸내일."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile"
            },
            "title": "첨부 파일 리스트",
            "description": "첨부 파일 리스트."
          }
        },
        "required": [
          "id",
          "title",
          "format",
          "body",
          "summary",
          "icons",
          "thumbnails",
          "files"
        ],
        "description": "매물의 컨텐츠 정보.\n\n`IHubSaleContent` 는 매물의 본문 컨텐츠를 형상화한 엔티티이다.\n\n제목과 본문, 그리고 썸네일 등의 서술 정보를 담당하고 있다."
      },
      "IHubSaleContent.Type": {
        "oneOf": [
          {
            "const": "txt"
          },
          {
            "const": "md"
          },
          {
            "const": "html"
          }
        ]
      },
      "IHubSaleUnit": {
        "type": "object",
        "properties": {
          "release": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioRepositoryRelease.IForSale"
              }
            ],
            "title": "릴리즈의 역 참조 정보",
            "description": "릴리즈의 역 참조 정보."
          },
          "host": {
            "$ref": "#/components/schemas/IHubSaleUnitHost",
            "title": "호스트 정보",
            "description": "호스트 정보."
          },
          "swagger": {
            "$ref": "#/components/schemas/ISwagger",
            "title": "스웨거 정보",
            "description": "스웨거 정보."
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnitOption"
            },
            "title": "옵션 리스트",
            "description": "옵션 리스트."
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnitStock"
            },
            "minItems": 1,
            "title": "스톡 리스트",
            "description": "스톡 리스트."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "name": {
            "type": "string",
            "title": "유닛의 대표 이름",
            "description": "유닛의 대표 이름."
          },
          "primary": {
            "type": "boolean",
            "title": "주 유닛 여부",
            "description": "주 유닛 여부.\n\n단순 표기상 속성으로, 라벨링 이상의 의미는 없다."
          },
          "required": {
            "type": "boolean",
            "title": "필수 유닛 여부",
            "description": "필수 유닛 여부.\n\n만일 본 유닛이 필수라면, 고객이 이를 배제하고 구매할 수 없다."
          },
          "purposes": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.Purpose"
                },
                "uniqueItems": true
              }
            ],
            "title": "릴리즈된 유닛의 추출목적",
            "description": "릴리즈된 유닛의 추출목적.\n\n{@link IStudioRepositoryReleaseNode.Purpose}를 참고하면 된다."
          },
          "connector_icons": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                },
                "uniqueItems": true
              }
            ],
            "title": "커넥터 아이콘 리스트",
            "description": "커넥터 아이콘 리스트.\n\n커넥터 아이콘은, 본 매물이 연동되어 있는 외부 서비스들의 아이콘을 의미한다."
          },
          "migrated": {
            "type": "boolean",
            "title": "Studio v1.0 으로부터 이전된 툴인지 여부",
            "description": "Studio v1.0 으로부터 이전된 툴인지 여부."
          }
        },
        "required": [
          "release",
          "host",
          "swagger",
          "options",
          "stocks",
          "id",
          "name",
          "primary",
          "required",
          "purposes",
          "connector_icons",
          "migrated"
        ],
        "description": "매물의 개별 유닛 정보.\n\n`IHubSaleUnit` 은 매물에서 취급하는 \"개별 제품\" 정보를 형상화한 엔티티이다. 그리고\n여기서 말하는 \"개별 제품\" 이란, 허브 시스템에서의 개별 서버 단위, 즉 스웨거 문서에\n대응하는 개념이다.\n\n참고로 `IHubSaleUnit` 이 {@link IHubSaleSnapshot} 으로부터 1: N 의 대수관계로 분리된\n이유는 바로, 하나의 매물에서 복수의 제품을 판매하는 경우가 종종 있기 때문이다. 이른바\n\"묶음 상품\" 의 경우가 그러하다.\n\n- 일반 상품에서의 묶음 상품 (노트북 세트)\n  - 본체\n  - 키보드\n  - 마우스\n  - 애플 케어 (무료 A/S 권)\n- 허브 시스템에서의 묶음 상품 (작가 AI 세트)\n  - 글쓰기 서버\n  - 이미지 생성 서버\n  - 로고/표지 생성 서버\n\n그리고 `IHubSaleUnit` 은 다시, 그 자체로써 {@link IHubCustomer 고객}이 구매하게 될\n{@link IHubSaleUnitStock 최종 구성품}을 의미하지는 않는다. 최종 구성품은 주어진\n{@link IHubSaleUnitOption 옵션}과 그 {@link IHubSaleUnitOptionCandidate 후보값}들을 모두\n선택한 끝에라야, 비로소 만나볼 수 있는 것.\n\n가령 노트북을 한 대 사더라도, 그 안에서 각각 (CPU / RAM / SSD) 등의 옵션을 모두 고른 뒤에야,\n최종 구성품이 정해지듯이 말이다."
      },
      "IHubSaleUnitOption": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IHubSaleUnitSelectableOption"
          },
          {
            "$ref": "#/components/schemas/IHubSaleUnitDescriptiveOption"
          }
        ],
        "title": "매물 유닛에서의 개별 옵션 정보",
        "description": "매물 유닛에서의 개별 옵션 정보.\n\n`IHubSaleUnitOption` 은 매물 내 개별 제품을 형상화한 {@link IHubSaleUnit} 의 하위 엔티티로써,\n해당 유닛의 개별 옵션 정보를 형상화하기 위하여 설계된 엔티티이다.\n\n그리고 각각 선택형 옵션과 서술형 옵션을 뜻하는 {@link IHubSaleUnitSelectableOption} 및\n{@link IHubSaleUnitDescriptiveOption} 의 유니언 타입 엔티티로써, 각 타입에 대한 특정화는\n아래와 같이 `type` 속성에 대한 `if condition` 으로 간단히 이뤄낼 수 있다.\n\n```typescript\nif (option.type === \"select\")\n    option.candidates; // IHubSaleUnitSelectableOption\n```\n\n- 옵션의 사례\n  - 선택형 옵션\n    - 컴퓨터 성능: CPU, GPU, RAM 등\n    - 이미지 생성 AI: 랜더링 퀄리티, 라이선스 종류, 테마 등\n  - 서술형 옵션\n    - 라벨링\n    - 사용 목적 (설문조사)\n\n만일 옵션의 타입이 select 에 {@link IHubSaleUnitSelectableOption.variable 가변값}이\n참이라면, 그 후보값의 선택에 따라, 고객이 구매하게 될 {@link IHubSaleUnitStock 최종 구성품}이\n달라진다.\n\n반대로 select 이외에 타입이라던가, 타입은 select 이되,\n{@link IHubSaleUnitSelectableOption.variable 가변 여부}가 거짓이라면, 이는 단순 정보 전달\n이상의 의미가 없는 옵션이다. 따라서 고객이 이를 구매하며 그 어떠한 값을 기재하고 선택하던,\n이 경우의 옵션은 {@link IHubSaleUnitStock 최종 구성품}에 영향을 주지 않는다."
      },
      "IHubSaleUnitSelectableOption": {
        "type": "object",
        "properties": {
          "candidates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnitOptionCandidate"
            },
            "title": "후보값 리스트",
            "description": "후보값 리스트.\n\n본 옵션에 대하여 고객이 선택 가능한 값들의 일람."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "select",
            "title": "옵션의 타입",
            "description": "옵션의 타입."
          },
          "variable": {
            "type": "boolean",
            "title": "가변형 여부",
            "description": "가변형 여부.\n\n이 속성값이 `true` 이거든, 본 옵션은 고객이\n{@link IHubSaleUnitOptionCandidate 후보값}으로 무엇을 선택하냐에 따라,\n구매하게 되는 {@link IHubSaleUnitStock 최종 구성품}이 달라진다.\n\n반대로 이 값이 `false` 이거든, 고객이 {@link IHubSaleUnitOptionCandidate 후보값}으로\n그 무엇을 선택하던, 이는 {@link IHubSaleUnitStock 최종 구성품}에 영향을 주지 아니한다.\n그저 판매자가 참고하는 단순 정보에 불과할 뿐,"
          },
          "name": {
            "type": "string",
            "title": "옵션의 대표 이름",
            "description": "옵션의 대표 이름."
          }
        },
        "required": [
          "candidates",
          "id",
          "type",
          "variable",
          "name"
        ],
        "description": "매물 유닛에서의 개별 선택형 옵션 정보.\n\n`IHubSaleUnitSelectableOption` 은 매물 내 개별 제품을 형상화한 {@link IHubSaleUnit} 의\n하위 엔티티로써, 해당 유닛의 개별 **선택형** 옵션 정보를 형상화하기 위하여 설계된 엔티티이다.\n\n- 선택형 옵션의 사례\n  - 컴퓨터 성능: CPU, GPU, RAM 등\n  - 이미지 생성 AI: 랜더링 퀄리티, 라이선스 종류, 테마 등\n\n그리고 만일 본 엔티티의 속성값 {@link IHubSaleUnitSelectableOption.variable} 이 `true` 라면,\n이는 고객이 본 옵션에서 어떠한 {@link IHubSaleUnitOptionCandidate 후보값}을 선택하냐에 따라,\n구매하게 될 {@link IHubSaleUnitStock 최종 구성품}이 달라지는 것을 뜻한다.\n\n반대로 위 값이 `false` 라면, 고객이 본 옵션에서 어떠한\n{@link IHubSaleUnitOptionCandidate 후보값}을 선택하던, 고객이 구매하게 될\n{@link IHubSaleUnitStock 최종 구성품}에는 영향을 주지 않는다. 판매자가 참고용으로만 사용하게\n될 단순 정보에 불과할 뿐."
      },
      "IHubSaleUnitDescriptiveOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "oneOf": [
              {
                "const": "string"
              },
              {
                "const": "number"
              },
              {
                "const": "boolean"
              }
            ],
            "title": "서술형 옵션의 타입",
            "description": "서술형 옵션의 타입.\n\n어떠한 형식이 입력되어야 하는가."
          },
          "name": {
            "type": "string",
            "title": "서술형 옵션의 대표 이름",
            "description": "서술형 옵션의 대표 이름."
          }
        },
        "required": [
          "id",
          "type",
          "name"
        ],
        "description": "서술형 옵션.\n\n{@link IHubSaleUnit 매물 유닛}에 등록한 {@link IHubSaleUnitOption 옵션}이 서술형이라,\n고객이 이에 대하여 무엇을 기재하던, {@link IHubSaleUnitStock 최종 구성품}에 일절 영향을\n주지 아니하는 경우.\n\n오직 판매자가 참고용으로만 사용하는 정보이다."
      },
      "IHubSaleUnitStock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "name": {
            "type": "string",
            "title": "스톡의 대표 이름",
            "description": "스톡의 대표 이름."
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnitStockChoice"
            },
            "title": "본 스톡의 선택 정보",
            "description": "본 스톡의 선택 정보.\n\n어떠한 옵션과 후보값을 선택하여 구성되는가."
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnitStockPrice"
            },
            "minItems": 1,
            "title": "본 스톡의 가격 정보 리스트",
            "description": "본 스톡의 가격 정보 리스트.\n\n계단식 고정/변동비 가격 모형이 사용된다."
          }
        },
        "required": [
          "id",
          "name",
          "choices",
          "prices"
        ],
        "description": "매물 유닛에서의 최종 구성품 정보.\n\n\n`IHubSaleUnitStock` 은 매물 내 개별 제품 카탈로그를 형상화한\n{@link IHubSaleUnit} 의 하위 엔티티로써, 귀속 유닛 내 모든\n{@link IHubSaleUnitSelectableOption.variable 옵션 (가변형 \"select\" 타입)} 및 그\n{@link IHubSAleUnitOptionCandidate 후보값}들을 모두 선택함으로써 구성되는, 일종의\n최종 구성품이다.\n\n고객이 실제로 구매하게 되는 \"재화\" 그 자체인 셈.\n\n- 유닛명) 맥북 본체\n  - 옵션\n    - CPU: { i3, i5, i7, i9 }\n    - RAM: { 8GB, 16GB, 32GB, 64GB, 96GB }\n    - SSD: { 256GB, 512GB, 1TB }\n  - 최종 구성품 수: 4 * 5 * 3 = 60 개\n\n참고로 귀속 유닛 내 `IHubSaleUnitStock` 레코드의 총 수는 카테시안 곱 (Cartesian Sale) 으로\n구할 수 있다. 즉, 각각의 (가변형 \"select\" 타입) 옵션이 가질 수 있는 후보값들을 경우의 수로\n모두 곱한 값이 곧, 해당 유닛에서의 최종 구성품의 총 수효인 것. 물론, 단 하나의 가변형 \"select\"\n타입 옵션도 없다면, 해당 유닛에서의 최종 구성품 수는 오직 1 개에 그친다."
      },
      "IHubSaleUnitStockChoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "option_id": {
            "type": "string",
            "format": "uuid",
            "title": "귀속 옵션의 {@link IHubSaleUnitOption.id}",
            "description": "귀속 옵션의 {@link IHubSaleUnitOption.id}."
          },
          "candidate_id": {
            "type": "string",
            "format": "uuid",
            "title": "귀속 후보값의 {@link IHubSaleUnitOptionCandidate.id}",
            "description": "귀속 후보값의 {@link IHubSaleUnitOptionCandidate.id}."
          }
        },
        "required": [
          "id",
          "option_id",
          "candidate_id"
        ],
        "description": "최종 구성품의 선택 정보.\n\n`IHubSaleUnitStockChoice` 는 귀속 {@link IHubSaleUnitStock 스톡}이 각각 어느\n{@link IHubSaleUnitSelectableOption.variable 가변형 select 타입의 옵션}을 선택하였고,\n그 안에서 다시 어떤 {@link IHubSaleUnitOptionCandidate 후보값}을 선택하여 구성되었는 지를\n형상화한 엔티티이다.\n\n물론, 귀속 유닛에 그 어떠한 옵션도 없노라면, 이 엔티티 또한 무시해도 좋다."
      },
      "IHubSaleUnitStockPrice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "threshold": {
            "type": "integer",
            "title": "역치, 고정 금액 {@link fixed} 내 무료 API 호출 가능 수량",
            "description": "역치, 고정 금액 {@link fixed} 내 무료 API 호출 가능 수량."
          },
          "fixed": {
            "type": "number",
            "minimum": 0,
            "title": "고정비",
            "description": "고정비."
          },
          "variable": {
            "type": "number",
            "minimum": 0,
            "title": "변동비",
            "description": "변동비.\n\n{@link threshold} 를 초과하는 API 호출에 대하여, 각 건 마다 부과되는 금액."
          }
        },
        "required": [
          "id",
          "threshold",
          "fixed",
          "variable"
        ],
        "description": "스톡의 가격 정보.\n\n`IHubSaleUnitStockPrice` 는 스톡의 계단식 가격 정보를 형상화한 엔티티이다. 그리고 여기서\n말하는 계단식 가격이란, 각각이 고정비와 변동비를 모두 아우르며, 그러한 구간이 여럿 있는 것을\n뜻한다.\n\n계단형 가격 정보가 무엇인지는, 아래 예시를 보면 쉬이 이해할 수 있을 것이다.\n\n- 고정비 50,000 원에 API 1,000 건까지 무료, 초과분 1건당 100 원\n- 고정비 100,000 원에 API 2,500 건까지 무료, 초과분 1건당 75 원\n- 고정비 150,000 원에 API 4,000 건까지 무료, 초과분 1건당 50 원"
      },
      "IPageIHubSaleSnapshot.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleSnapshot.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubSaleSnapshot.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "매물의 ID",
            "description": "매물의 ID."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "스냅샷의 ID",
            "description": "스냅샷의 ID."
          },
          "latest": {
            "type": "boolean",
            "title": "마지막 스냅샷 여부",
            "description": "마지막 스냅샷 여부.\n\n본 스냅샷이 귀속 매물의 가장 마지막 스냅샷인가?\n\n단, 본 매물을 조회하는 유저의 관점에 따라, \"마지막\" 의 기준이 다르다.\n\n- 고객 관점: 가장 마지막에 승인된 매물\n- 판매자/관리자: 가장 마지막에 작성된 매물"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleChannel"
            },
            "title": "채널/카테고리 리스트",
            "description": "채널/카테고리 리스트.\n\n본 매물이 판매되는 채널과 카테고리들의 일람."
          },
          "aggregate": {
            "$ref": "#/components/schemas/IHubSaleAggregate",
            "title": "본 매물 (또는 스냅샷) 에 대한 집계/성과 정보",
            "description": "본 매물 (또는 스냅샷) 에 대한 집계/성과 정보."
          },
          "content": {
            "$ref": "#/components/schemas/IHubSaleContent.IInvert",
            "title": "컨텐츠 정보",
            "description": "컨텐츠 정보.\n\n판매자가 매물을 등록하며 작성한 서술 정보."
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnit.ISummary"
            },
            "minItems": 1,
            "title": "유닛 리스트",
            "description": "유닛 리스트.\n\n현 매물이 취급하는 제품들에 대하여 표현하는 레코드로써, 각각의 제품에 대하여\n설정할 수 있는 {@link IHubSaleUnitOption 옵션} 및, 옵션들을 선택하여\n구성할 수 있는 최종 구성품 {@link IHubSaleUnitStock 스톡}에 대한 정보를\n담고 있다."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그 값 리스트",
            "description": "검색 태그 값 리스트."
          },
          "version": {
            "type": "string",
            "title": "버전명",
            "description": "버전명.\n\n{@link ISwaggerInfo.version} 과 다른 값을 설정할 수 있다.\n\n즉, 서버 스펙 (스웨거 문서) 상 버전명과, 제품상 버전명이 다를 수 있음."
          },
          "version_description": {
            "type": "string",
            "title": "버전 설명",
            "description": "버전 설명."
          },
          "activated_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "스냅샷의 활성화 시각",
            "description": "스냅샷의 활성화 시각.\n\n본 스냅샷이 심사 승인되어, 최초 활성화된 시각."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "현 매물 (스냅샷) 의 API 들이 중단되는 시각",
            "description": "현 매물 (스냅샷) 의 API 들이 중단되는 시각.\n\n거래 대상물이 API 인 본 시스템의 특성상, 판매자가 매물을 판매 중단했따하여\n그것이 곧바로 삭제되어서는 안된다. 최소한의 이용 기간을 보장해주어야, 해당\nAPI 를 사용하는 고객들이 이에 대응할 것이 아니겠는가?\n\n때문에 매물에 대한 판매 중단시, 일정 유예 기간을 두고 사라지도록 하고 있다.\n\n물론, 단 한 번도 판매된 적 없는 매물이거든, 해당 없음."
          }
        },
        "required": [
          "id",
          "snapshot_id",
          "latest",
          "channels",
          "aggregate",
          "content",
          "units",
          "tags",
          "version",
          "version_description",
          "activated_at",
          "expired_at"
        ],
        "description": "매물 스냅샷의 요약 정보."
      },
      "IHubSaleSnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "매물의 ID",
            "description": "매물의 ID."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "스냅샷의 ID",
            "description": "스냅샷의 ID."
          },
          "latest": {
            "type": "boolean",
            "title": "마지막 스냅샷 여부",
            "description": "마지막 스냅샷 여부.\n\n본 스냅샷이 귀속 매물의 가장 마지막 스냅샷인가?\n\n단, 본 매물을 조회하는 유저의 관점에 따라, \"마지막\" 의 기준이 다르다.\n\n- 고객 관점: 가장 마지막에 승인된 매물\n- 판매자/관리자: 가장 마지막에 작성된 매물"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleChannel"
            },
            "title": "채널/카테고리 리스트",
            "description": "채널/카테고리 리스트.\n\n본 매물이 판매되는 채널과 카테고리들의 일람."
          },
          "aggregate": {
            "$ref": "#/components/schemas/IHubSaleAggregate",
            "title": "본 매물 (또는 스냅샷) 에 대한 집계/성과 정보",
            "description": "본 매물 (또는 스냅샷) 에 대한 집계/성과 정보."
          },
          "content": {
            "$ref": "#/components/schemas/IHubSaleContent",
            "title": "컨텐츠 정보",
            "description": "컨텐츠 정보.\n\n판매자가 매물을 등록하며 작성한 서술 정보."
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnit"
            },
            "minItems": 1,
            "title": "유닛 리스트",
            "description": "유닛 리스트.\n\n현 매물이 취급하는 제품들에 대하여 표현하는 레코드로써, 각각의 제품에 대하여\n설정할 수 있는 {@link IHubSaleUnitOption 옵션} 및, 옵션들을 선택하여\n구성할 수 있는 최종 구성품 {@link IHubSaleUnitStock 스톡}에 대한 정보를\n담고 있다."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그 값 리스트",
            "description": "검색 태그 값 리스트."
          },
          "version": {
            "type": "string",
            "title": "버전명",
            "description": "버전명.\n\n{@link ISwaggerInfo.version} 과 다른 값을 설정할 수 있다.\n\n즉, 서버 스펙 (스웨거 문서) 상 버전명과, 제품상 버전명이 다를 수 있음."
          },
          "version_description": {
            "type": "string",
            "title": "버전 설명",
            "description": "버전 설명."
          },
          "activated_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "스냅샷의 활성화 시각",
            "description": "스냅샷의 활성화 시각.\n\n본 스냅샷이 심사 승인되어, 최초 활성화된 시각."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "현 매물 (스냅샷) 의 API 들이 중단되는 시각",
            "description": "현 매물 (스냅샷) 의 API 들이 중단되는 시각.\n\n거래 대상물이 API 인 본 시스템의 특성상, 판매자가 매물을 판매 중단했따하여\n그것이 곧바로 삭제되어서는 안된다. 최소한의 이용 기간을 보장해주어야, 해당\nAPI 를 사용하는 고객들이 이에 대응할 것이 아니겠는가?\n\n때문에 매물에 대한 판매 중단시, 일정 유예 기간을 두고 사라지도록 하고 있다.\n\n물론, 단 한 번도 판매된 적 없는 매물이거든, 해당 없음."
          }
        },
        "required": [
          "id",
          "snapshot_id",
          "latest",
          "channels",
          "aggregate",
          "content",
          "units",
          "tags",
          "version",
          "version_description",
          "activated_at",
          "expired_at"
        ],
        "description": "매물의 스냅샷 정보.\n\n`IHubSaleSnapshot` 은 매물의 스냅샷을 형상화한 엔티티로써, DB 에서는 그 역할을 아래와 같이\n정의하고 있다.\n\n> {@link hub_sales IHubSale} 는 판매자가 등록한 \"제품 판매\" (세일즈) 정보를 형상화한 엔티티이다. 그리고 매물의 주 정보는 본 hub_sales 가 아닌, 하위 hub_sale_snapshots 에 기록된다. 판매자가 기 등록한 매물을 변경하면, 기존의 hub_sales 레코드가 변경되는 것이 아니라, 새로운 스냅샷 레코드가 생겨나는 것.\n>\n> 이는 고객이 특정 매물을 구입한 이후, {@link IHubSeller 판매자}가 해당 매물의\n> {@link IHubSaleUnitStock 구성품}이나 {@link IHubSaleUnitStockPrice 가격} 등을 변경하더라도,\n> 고객의 당시 구매 내역을 무결적으로 보존하기 위함이다.\n>\n> 또한, 판매자가 구성품이나 가격 등을 변경하며 각각의 경우에 대한 성과를 측정하는,\n> 이른바 A/B 테스트를 할 수 있게 지원하기 위함이기도 하다.\n\n단, 프론트 개발자가 사용할 DTO 수준에서는 {@link IHubSale 매물}과 스냅샷을 이렇게까지\n엄격하게 구분하지는 않으며, 대체로 매물과 스냅샷을 합쳐서 {@link IHubSale} 단위에서\n처리하고는 한다.\n\n다만 DTO 에서 엄격하게 구분짓지 않았다 하여, 스냅샷 개념이 중요하지 않다는 것은 결코 아니니,\n\"스냅샷\" 이라는 개념만큼은 제대로 숙지해두기 바란다."
      },
      "IHubSaleAudit.IRequest": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-audit.created_at"
                },
                {
                  "const": "-audit_rejected_at"
                },
                {
                  "const": "-audit.approved_at"
                },
                {
                  "const": "+audit.created_at"
                },
                {
                  "const": "+audit_rejected_at"
                },
                {
                  "const": "+audit.approved_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IPageIHubSaleAudit.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleAudit.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubSaleAudit.ISummary": {
        "type": "object",
        "properties": {
          "administrator": {
            "$ref": "#/components/schemas/IHubAdministrator.IInvert",
            "title": "심사를 발제한 관리자",
            "description": "심사를 발제한 관리자."
          },
          "rejected_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "심사 거절 일시",
            "description": "심사 거절 일시.\n\n가장 마지막 거절 내역의 일시가 기재됨."
          },
          "approved_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "심사 승인 일시",
            "description": "심사 승인 일시."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "title": {
            "type": "string",
            "title": "Title of the last snapshot",
            "description": "Title of the last snapshot."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the article",
            "description": "Creation time of the article."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modification time of the article",
            "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
          }
        },
        "required": [
          "administrator",
          "rejected_at",
          "approved_at",
          "id",
          "title",
          "created_at",
          "updated_at"
        ]
      },
      "IHubSaleCollection.ICreate": {
        "type": "object",
        "properties": {
          "sale_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "format": {
            "oneOf": [
              {
                "const": "txt"
              },
              {
                "const": "md"
              },
              {
                "const": "html"
              }
            ],
            "title": "본문 형식",
            "description": "본문 형식."
          },
          "title": {
            "type": "string",
            "title": "제목",
            "description": "제목."
          },
          "body": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "본문 서술 정보",
            "description": "본문 서술 정보."
          },
          "summary": {
            "type": "string",
            "description": "요약 정보"
          },
          "thumbnail": {
            "type": "string",
            "format": "url",
            "title": "제품 대표 이미지 리스트",
            "description": "제품 대표 이미지 리스트."
          },
          "background_color": {
            "oneOf": [
              {
                "const": "yellow"
              },
              {
                "const": "green"
              },
              {
                "const": "blue"
              },
              {
                "const": "violet"
              },
              {
                "const": "pink"
              },
              {
                "const": "orange"
              }
            ],
            "title": "배경 색상",
            "description": "배경 색상."
          }
        },
        "required": [
          "sale_ids",
          "format",
          "title",
          "body",
          "summary",
          "thumbnail",
          "background_color"
        ]
      },
      "IHubSaleCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "sales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSale.ISummary"
            },
            "minItems": 1,
            "title": "해당 컬렉션에 속한 판매 매물 리스트",
            "description": "해당 컬렉션에 속한 판매 매물 리스트."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "title": {
            "type": "string",
            "title": "제목",
            "description": "제목."
          },
          "format": {
            "$ref": "#/components/schemas/IHubSaleCollection.Type",
            "title": "본문 형식",
            "description": "본문 형식."
          },
          "body": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "본문 서술 정보",
            "description": "본문 서술 정보."
          },
          "summary": {
            "type": "string",
            "description": "요약 정보"
          },
          "thumbnail": {
            "type": "string",
            "format": "url",
            "title": "제품 대표 이미지 리스트",
            "description": "제품 대표 이미지 리스트."
          },
          "background_color": {
            "$ref": "#/components/schemas/IHubSaleCollection.CollectionColorType",
            "title": "배경 색상",
            "description": "배경 색상."
          },
          "sale_count": {
            "type": "number",
            "minimum": 1,
            "title": "귀속 매물 수",
            "description": "귀속 매물 수."
          }
        },
        "required": [
          "id",
          "sales",
          "created_at",
          "title",
          "format",
          "body",
          "summary",
          "thumbnail",
          "background_color",
          "sale_count"
        ],
        "description": "`hub` 에서 판매 매물을 묶음상품 형태로 관리하는 정보.\n\n{@link IHubSale}은 매물의 {@link IHubSaleUnit}을 묶는 인터페이스 라면\n`IHubSaleCollection`은 {@link IHubSale}의 상위 개념인 {@link IHubSale 매물}을 묶는 인터페이스이다."
      },
      "IHubSaleCollection.Type": {
        "oneOf": [
          {
            "const": "txt"
          },
          {
            "const": "md"
          },
          {
            "const": "html"
          }
        ]
      },
      "IHubSaleCollection.CollectionColorType": {
        "oneOf": [
          {
            "const": "yellow"
          },
          {
            "const": "green"
          },
          {
            "const": "blue"
          },
          {
            "const": "violet"
          },
          {
            "const": "pink"
          },
          {
            "const": "orange"
          }
        ]
      },
      "IHubSaleCollection.IRequest": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "+created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IPageIHubSaleCollection.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleCollection.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubSaleCollection.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "title": {
            "type": "string",
            "title": "제목",
            "description": "제목."
          },
          "format": {
            "$ref": "#/components/schemas/IHubSaleCollection.Type",
            "title": "본문 형식",
            "description": "본문 형식."
          },
          "body": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "본문 서술 정보",
            "description": "본문 서술 정보."
          },
          "summary": {
            "type": "string",
            "description": "요약 정보"
          },
          "thumbnail": {
            "type": "string",
            "format": "url",
            "title": "제품 대표 이미지 리스트",
            "description": "제품 대표 이미지 리스트."
          },
          "background_color": {
            "$ref": "#/components/schemas/IHubSaleCollection.CollectionColorType",
            "title": "배경 색상",
            "description": "배경 색상."
          },
          "sale_count": {
            "type": "number",
            "minimum": 1,
            "title": "귀속 매물 수",
            "description": "귀속 매물 수."
          }
        },
        "required": [
          "id",
          "created_at",
          "title",
          "format",
          "body",
          "summary",
          "thumbnail",
          "background_color",
          "sale_count"
        ]
      },
      "IHubChannelCategory.ICreate": {
        "type": "object",
        "properties": {
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "부모 카테고리의 {@link IHubChannelCategory.id}",
            "description": "부모 카테고리의 {@link IHubChannelCategory.id}."
          },
          "name": {
            "type": "string",
            "title": "채널 카테고리 이름",
            "description": "채널 카테고리 이름."
          },
          "background_color": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "inspired_red"
              },
              {
                "const": "apricot"
              },
              {
                "const": "yellow"
              },
              {
                "const": "green"
              },
              {
                "const": "blue"
              },
              {
                "const": "violet"
              },
              {
                "const": "pink"
              },
              {
                "const": "black"
              }
            ],
            "title": "카테고리 배경 색상",
            "description": "카테고리 배경 색상."
          },
          "background_image_url": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "카테고리 배경 이미지",
            "description": "카테고리 배경 이미지."
          }
        },
        "required": [
          "parent_id",
          "name",
          "background_color",
          "background_image_url"
        ],
        "description": "채널 카테고리 정보 생성 정보."
      },
      "PartialIHubChannelCategory.ICreate": {
        "type": "object",
        "properties": {
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "부모 카테고리의 {@link IHubChannelCategory.id}",
            "description": "부모 카테고리의 {@link IHubChannelCategory.id}."
          },
          "name": {
            "type": "string",
            "title": "채널 카테고리 이름",
            "description": "채널 카테고리 이름."
          },
          "background_color": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "inspired_red"
              },
              {
                "const": "apricot"
              },
              {
                "const": "yellow"
              },
              {
                "const": "green"
              },
              {
                "const": "blue"
              },
              {
                "const": "violet"
              },
              {
                "const": "pink"
              },
              {
                "const": "black"
              }
            ],
            "title": "카테고리 배경 색상",
            "description": "카테고리 배경 색상."
          },
          "background_image_url": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "카테고리 배경 이미지",
            "description": "카테고리 배경 이미지."
          }
        },
        "description": "Make all properties in T optional"
      },
      "IRecordMerge": {
        "type": "object",
        "properties": {
          "keep": {
            "type": "string",
            "format": "uuid",
            "title": "Target record to keep after merging",
            "description": "Target record to keep after merging.\n\nAfter merge process, {@link absorbed} records would be merged into\nthis {@link keep} record."
          },
          "absorbed": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "title": "To be absorbed to {@link keep} after merging",
            "description": "To be absorbed to {@link keep} after merging."
          }
        },
        "required": [
          "keep",
          "absorbed"
        ],
        "description": "Record Merge DTO.\n\n`IRecordMerge` is a structure for merging records.\n\nThe `merge` means that merging multiple {@link IRecordMerge.absorbed}\nrecords into {@link IRecordMerge.keep} instead of deleting\n{@link IRecordMerge.absorbed} records.\n\nIf there're some dependent tables of the target `table` having\nunique constraint on foriegn key column, such dependent tables\nalso perform the merge process, too.\n\nOf course, if there're another dependent tables under those\ndependents, they also perform the merge process recursively as well.\nSuch recursive merge process still works for self-recursive\n(tree-structured) tables."
      },
      "IHubChannel.ICreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "삭별자 코드"
          },
          "name": {
            "type": "string",
            "description": "채널 명"
          },
          "exclusive": {
            "type": "boolean",
            "description": "배타성 여부\n\n이 값이 `true` 일 경우, 해당 채널은 다른 채널과 단절되어,\n고객의 정보 일절 공유하지 아니함."
          }
        },
        "required": [
          "code",
          "name",
          "exclusive"
        ],
        "description": "계층 정보 생성 입력 정보."
      },
      "IHubChannel.IUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "채널 명"
          },
          "exclusive": {
            "type": "boolean",
            "description": "배타성 여부\n\n이 값이 `true` 일 경우, 해당 채널은 다른 채널과 단절되어,\n고객의 정보 일절 공유하지 아니함."
          }
        },
        "required": [
          "name",
          "exclusive"
        ],
        "description": "채널 수정 정보."
      },
      "IHubChannel.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubChannel.IRequest.ISearch",
            "description": "검색 조건"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-channel.code"
                },
                {
                  "const": "-channel.name"
                },
                {
                  "const": "-channel.created_at"
                },
                {
                  "const": "+channel.code"
                },
                {
                  "const": "+channel.name"
                },
                {
                  "const": "+channel.created_at"
                }
              ]
            },
            "description": "정렬 조건"
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "계층 정보 조회 및 페이지 정보"
      },
      "IHubChannel.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "채널 코드"
          },
          "name": {
            "type": "string",
            "description": "채널 명"
          }
        }
      },
      "IPageIHubChannel": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubChannel"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IPageIHubChannel.IHierarchical": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubChannel.IHierarchical"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubChannel.IHierarchical": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubChannelCategory.IHierarchical"
            },
            "title": "하위 카테고리 리스트",
            "description": "하위 카테고리 리스트."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "기본키"
          },
          "code": {
            "type": "string",
            "description": "삭별자 코드"
          },
          "name": {
            "type": "string",
            "description": "채널 명"
          },
          "exclusive": {
            "type": "boolean",
            "description": "배타성 여부\n\n이 값이 True일 경우 해당 채널은 단절되, 고객의 정보 공유하지 않음."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "레코드 생성일시"
          }
        },
        "required": [
          "categories",
          "id",
          "code",
          "name",
          "exclusive",
          "created_at"
        ],
        "description": "계층 정보."
      },
      "IHubSection.ICreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "name"
        ],
        "description": "섹션 생성 정보"
      },
      "IHubSection.IUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "description": "섹션 수정 정보"
      },
      "IHubSection.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubSection.IRequest.ISearch",
            "description": "검색 조건"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-section.code"
                },
                {
                  "const": "-section.name"
                },
                {
                  "const": "-section.created_at"
                },
                {
                  "const": "+section.code"
                },
                {
                  "const": "+section.name"
                },
                {
                  "const": "+section.created_at"
                }
              ]
            },
            "description": "정렬 조건"
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "섹션 정보 조회 및 페이지 정보"
      },
      "IHubSection.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "식별자 코드"
          },
          "name": {
            "type": "string",
            "description": "섹션 명"
          }
        }
      },
      "IPageIHubSection": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSection"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubOrderGoodCallAggregate.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubOrderGoodCallAggregate.IRequest.ISearch",
            "title": "검색 정보",
            "description": "검색 정보."
          },
          "term": {
            "oneOf": [
              {
                "const": "hour"
              },
              {
                "const": "day"
              },
              {
                "const": "week"
              },
              {
                "const": "month"
              },
              {
                "const": "quarter"
              },
              {
                "const": "year"
              }
            ],
            "title": "기간 타입",
            "description": "기간 타입."
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "required": [
          "term"
        ]
      },
      "IHubOrderGoodCallAggregate.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date"
          },
          "to": {
            "type": "string",
            "format": "date"
          },
          "sale_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "good_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "description": "검색 기준."
      },
      "IPageIHubOrderGoodCallAggregate": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubOrderGoodCallAggregate"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubOrderGoodCallAggregate": {
        "type": "object",
        "properties": {
          "date": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              }
            ]
          },
          "success": {
            "type": "integer"
          },
          "status_2xx": {
            "type": "integer"
          },
          "status_3xx": {
            "type": "integer"
          },
          "status_4xx": {
            "type": "integer"
          },
          "status_5xx": {
            "type": "integer"
          },
          "none": {
            "type": "integer"
          },
          "latency": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IAverage"
              }
            ],
            "title": "API 응답 지연 시간에 대한 통계 정보",
            "description": "API 응답 지연 시간에 대한 통계 정보.\n\n단 하나의 API 성공 송수신 내역도 없다면, 이 값은 `null`."
          }
        },
        "required": [
          "date",
          "success",
          "status_2xx",
          "status_3xx",
          "status_4xx",
          "status_5xx",
          "none",
          "latency"
        ]
      },
      "IAverage": {
        "type": "object",
        "properties": {
          "mean": {
            "type": "number"
          },
          "count": {
            "type": "integer"
          },
          "stdev": {
            "type": "number"
          }
        },
        "required": [
          "mean",
          "count",
          "stdev"
        ]
      },
      "IHubOrderGoodCallAggregate.IEntireRequest": {
        "type": "object",
        "properties": {
          "sale_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "good_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "IHubOrderGoodRanking.IEntireRequest": {
        "type": "object",
        "properties": {
          "sale_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "good_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "IPageIHubOrderGoodRanking": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubOrderGoodRanking"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubOrderGoodRanking": {
        "type": "object",
        "properties": {
          "sale": {
            "$ref": "#/components/schemas/IHubSale.ISummary",
            "title": "대상 매물의 요약 정보",
            "description": "대상 매물의 요약 정보."
          },
          "count": {
            "type": "integer",
            "title": "API 총 호출 횟수",
            "description": "API 총 호출 횟수."
          },
          "success": {
            "type": "integer",
            "title": "API 호출 중 성공 횟수",
            "description": "API 호출 중 성공 횟수."
          },
          "status_2xx": {
            "type": "integer",
            "title": "API 응답 201 ~ 299 응답 횟수",
            "description": "API 응답 201 ~ 299 응답 횟수."
          },
          "status_3xx": {
            "type": "integer",
            "title": "API 응답 301 ~ 399 응답 횟수",
            "description": "API 응답 301 ~ 399 응답 횟수."
          },
          "status_4xx": {
            "type": "integer",
            "title": "API 응답 401 ~ 499 응답 횟수",
            "description": "API 응답 401 ~ 499 응답 횟수."
          },
          "status_5xx": {
            "type": "integer",
            "title": "API 응답 501 ~ 599 응답 횟수",
            "description": "API 응답 501 ~ 599 응답 횟수."
          },
          "none": {
            "type": "integer",
            "title": "API 응답 필드가 null 일 경우의 횟수",
            "description": "API 응답 필드가 null 일 경우의 횟수."
          },
          "cost": {
            "type": "number",
            "exclusiveMinimum": true,
            "minimum": 0,
            "title": "API 청구 비용",
            "description": "API 청구 비용."
          },
          "value": {
            "type": "integer",
            "title": "랭킹 값",
            "description": "랭킹 값.\n\n가장 많이 호출된 API 순위이며, 동점자 처리는 다음과 같다.\n\n1. API 호출 건수가 가장 많은 매물\n2. API 호출 중 성공 횟수가 많은 매물\n3. 보다 더 빨리 생성된 매물"
          },
          "latency": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IAverage"
              }
            ],
            "title": "API 응답 지연 시간에 대한 통계 정보",
            "description": "API 응답 지연 시간에 대한 통계 정보.\n\n단 하나의 API 성공 송수신 내역도 없다면, 이 값은 `null`."
          }
        },
        "required": [
          "sale",
          "count",
          "success",
          "status_2xx",
          "status_3xx",
          "status_4xx",
          "status_5xx",
          "none",
          "cost",
          "value",
          "latency"
        ],
        "description": "구독된 API의 매물 API 정보."
      },
      "IPageIHubSaleCallRanking": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleCallRanking"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubSaleCallRanking": {
        "type": "object",
        "properties": {
          "sale": {
            "$ref": "#/components/schemas/IHubSale.ISummary",
            "title": "대상 매물의 요약 정보",
            "description": "대상 매물의 요약 정보."
          },
          "count": {
            "type": "integer",
            "title": "API 총 호출 횟수",
            "description": "API 총 호출 횟수."
          },
          "success": {
            "type": "integer",
            "title": "API 호출 중 성공 횟수",
            "description": "API 호출 중 성공 횟수."
          },
          "value": {
            "type": "integer",
            "title": "랭킹 값",
            "description": "랭킹 값.\n\n가장 많이 호출된 API 순위이며, 동점자 처리는 다음과 같다.\n\n1. API 호출 건수가 가장 많은 매물\n2. API 호출 중 성공 횟수가 많은 매물\n3. 보다 더 빨리 생성된 매물"
          }
        },
        "required": [
          "sale",
          "count",
          "success",
          "value"
        ],
        "description": "매물 API 호출량 기준 순위 정보."
      },
      "IHubCustomer.IRefresh": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "title": "갱신 토큰 값",
            "description": "갱신 토큰 값."
          }
        },
        "required": [
          "value"
        ],
        "description": "토큰을 갱신하려 할 때의 DTO"
      },
      "IHubCustomer.IAuthorized": {
        "type": "object",
        "properties": {
          "setHeaders": {
            "type": "object",
            "properties": {
              "Authorization": {
                "type": "string"
              }
            },
            "required": [
              "Authorization"
            ],
            "title": "헤더 설정값",
            "description": "헤더 설정값.\n\n클라이언트는 이 값대로 {@link IConnection.headers} 에 할당하면 된다.\n\n다만 관련 SDK 함수 호출시, 이 과정이 자동으로 이루어진다."
          },
          "token": {
            "$ref": "#/components/schemas/IHubCustomer.IToken",
            "title": "토큰 정보",
            "description": "토큰 정보."
          },
          "type": {
            "const": "customer",
            "title": "Discriminated union 타입의 구분자",
            "description": "Discriminated union 타입의 구분자."
          },
          "member": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubMember"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "member": "#/components/schemas/IHubMember"
              }
            },
            "title": "회원 정보",
            "description": "회원 정보.\n\n회원 가입 또는 로그인하지 아니한 경우, 이 정보는 `null`."
          },
          "citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubCitizen"
              }
            ],
            "title": "시민 정보",
            "description": "시민 정보.\n\n고객이 본인 인증을 행하였거나, 아니면 과거 그리하였거나."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "channel": {
            "$ref": "#/components/schemas/IHubChannel",
            "title": "귀속 채널 정보",
            "description": "귀속 채널 정보.\n\n어느 채널의 고객인가?"
          },
          "external_user": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubExternalUser"
              }
            ],
            "title": "외부 사용자 정보",
            "description": "외부 사용자 정보.\n\n외부 서비스로부터 접속한 고객의 경우에 해당."
          },
          "href": {
            "type": "string",
            "format": "uri",
            "title": "접속 주소",
            "description": "접속 주소.\n\n{@link window.location.href} 와 동일한 값."
          },
          "referrer": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "string",
                "maxLength": 0
              }
            ],
            "title": "유입 주소",
            "description": "유입 주소.\n\n{@link window.document.referrer} 와 동일한 값."
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ],
            "title": "접속 IP 주소",
            "description": "접속 IP 주소."
          },
          "readonly": {
            "type": "boolean",
            "title": "읽기 전용 여부",
            "description": "읽기 전용 여부."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시, 접속 일시와 동의어",
            "description": "레코드 생성 일시, 접속 일시와 동의어."
          }
        },
        "required": [
          "setHeaders",
          "token",
          "type",
          "member",
          "citizen",
          "id",
          "channel",
          "external_user",
          "href",
          "referrer",
          "ip",
          "readonly",
          "created_at"
        ]
      },
      "IHubCustomer.IToken": {
        "type": "object",
        "properties": {
          "access": {
            "type": "string",
            "title": "액세스 토큰",
            "description": "액세스 토큰."
          },
          "refresh": {
            "type": "string",
            "title": "갱신 토큰",
            "description": "갱신 토큰."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "토큰 만료 시간",
            "description": "토큰 만료 시간."
          },
          "refreshable_until": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "토큰 갱신 가능 시간",
            "description": "토큰 갱신 가능 시간."
          }
        },
        "required": [
          "access",
          "refresh",
          "expired_at",
          "refreshable_until"
        ],
        "description": "토큰 정보."
      },
      "IHubCustomer.ICreate": {
        "type": "object",
        "properties": {
          "channel_code": {
            "type": "string",
            "title": "귀속 채널의 {@link IHubChannel.code 코드}",
            "description": "귀속 채널의 {@link IHubChannel.code 코드}.\n\n어느 채널의 고객인가?"
          },
          "external_user": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubExternalUser.ICreate"
              }
            ],
            "title": "외부 사용자 정보",
            "description": "외부 사용자 정보.\n\n외부 서비스로부터 접속한 고객의 경우에 해당."
          },
          "href": {
            "type": "string",
            "format": "uri",
            "title": "접속 주소",
            "description": "접속 주소.\n\n{@link window.location.href} 와 동일한 값."
          },
          "referrer": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "string",
                "maxLength": 0
              }
            ],
            "title": "유입 주소",
            "description": "유입 주소.\n\n{@link window.document.referrer} 와 동일한 값."
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ],
            "title": "접속 IP 주소",
            "description": "접속 IP 주소.\n\n간혹 `next.js` 와 같이 서버 사이드 랜더링 및 서버 사이드 API 호출을 하는 경우,\n본 백엔드 서버에서 취득하는 클라이언트 IP 가 실은 고객의 것이 아닌, 또 다른 서버\n(`next.js`) 의 것일 수 있다.\n\n본 `IHubCustomer.ICreate.ip` 는 이처럼 서버 사이드 랜더링에 의한 API 호출일\n경우에 대비하기 위한 필드로써, 클라이언트의 실제 IP 를 정확하기 기록하기\n위함이다. 만일 이 경우에 해당하지 않는 경우, 이 속성값을 기입하지 않거나,\n`null` 값을 할당하면 된다."
          },
          "readonly": {
            "type": "boolean",
            "title": "읽기 전용 여부",
            "description": "읽기 전용 여부."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "토큰 만료 시간 설정",
            "description": "토큰 만료 시간 설정."
          }
        },
        "required": [
          "channel_code",
          "external_user",
          "href",
          "referrer"
        ]
      },
      "IHubExternalUser.ICreate": {
        "type": "object",
        "properties": {
          "application": {
            "type": "string",
            "title": "외부 서비스의 식별자 코드",
            "description": "외부 서비스의 식별자 코드."
          },
          "uid": {
            "type": "string",
            "title": "외부 서비스에서 해당 유저에 대한 식별자 키",
            "description": "외부 서비스에서 해당 유저에 대한 식별자 키."
          },
          "nickname": {
            "type": "string",
            "title": "외부 서비스 상에서의 유저 닉네임",
            "description": "외부 서비스 상에서의 유저 닉네임."
          },
          "password": {
            "type": "string",
            "title": "외부 서비스 유저에 대한 시스템 상 비밀번호",
            "description": "외부 서비스 유저에 대한 시스템 상 비밀번호.\n\n외부 서비스에서 해당 유저에 대해 발급해 준 비밀번호로써, 실제 사용자 비밀번호는\n결코 아니다. 다만 현재의 외부 시스템 유저와 동일한 {@link application} 및\n{@link code} 를 입력한 고객에 대하여, 이를 올바른 외부 시스템 유저로 볼 지,\n아니면 위반사항으로 볼 지 판별하기 위함이다."
          },
          "citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubCitizen.ICreate"
              }
            ],
            "title": "시민 인증 정보",
            "description": "시민 인증 정보."
          },
          "content": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubExternalUserContent.ICreate"
              }
            ],
            "title": "외부 사용자 정보 상세 정보",
            "description": "외부 사용자 정보 상세 정보.\n\nWRTN SSO에서 받아올경우만 사용."
          },
          "data": {
            "title": "외부 서비스로부터의 부가 정보",
            "description": "외부 서비스로부터의 부가 정보."
          }
        },
        "required": [
          "application",
          "uid",
          "nickname",
          "password",
          "citizen",
          "content",
          "data"
        ]
      },
      "IHubCitizen.ICreate": {
        "type": "object",
        "properties": {
          "mobile": {
            "type": "string",
            "pattern": "^[0-9]*$",
            "title": "핸드폰 번호",
            "description": "핸드폰 번호."
          },
          "name": {
            "type": "string",
            "title": "실명 또는 그에 준하는 이름",
            "description": "실명 또는 그에 준하는 이름."
          }
        },
        "required": [
          "mobile",
          "name"
        ],
        "description": "시민 인증 입력 정보."
      },
      "IHubExternalUserContent.ICreate": {
        "type": "object",
        "properties": {
          "jobs": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "title": "사용자 직업 정보 리스트",
            "description": "사용자 직업 정보 리스트.\n{@link IHubExternalUserContent.JobType}"
          },
          "gender": {
            "oneOf": [
              {
                "const": "m"
              },
              {
                "const": "f"
              },
              {
                "const": "none"
              }
            ],
            "title": "사용자 성별 정보",
            "description": "사용자 성별 정보.\n\n`m` : 남성\n`f` : 여성\n`none` : 성별 미공개"
          },
          "birthYear": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ],
            "title": "사용자 출생년도",
            "description": "사용자 출생년도."
          },
          "interests": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "title": "사용자 관심사 리스트",
            "description": "사용자 관심사 리스트."
          },
          "provider": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "WRTN 사용자 계정 제공자",
            "description": "WRTN 사용자 계정 제공자.\n\nex) \"google\", \"kakao\", \"naver\""
          },
          "purposes": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "title": "사용자 접근 목적",
            "description": "사용자 접근 목적."
          }
        },
        "required": [
          "jobs",
          "gender",
          "birthYear",
          "interests",
          "provider",
          "purposes"
        ]
      },
      "IHubMember.IJoin": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "title": "닉네임",
            "description": "닉네임."
          },
          "citizen": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubCitizen.ICreate"
              }
            ],
            "title": "시민 정보",
            "description": "시민 정보.\n\n본인 인증하여 가입하는 경우에 한함."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "이메일 주소",
            "description": "이메일 주소."
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "pattern": "^[A-Za-z0-9@$!%*#?&^]{8,15}$"
              }
            ],
            "title": "비밀번호",
            "description": "비밀번호."
          }
        },
        "required": [
          "nickname",
          "citizen",
          "email",
          "password"
        ],
        "description": "회원 가입 정보."
      },
      "IHubMember.IPasswordChange": {
        "type": "object",
        "properties": {
          "oldbie": {
            "type": "string",
            "title": "기존 비밀번호",
            "description": "기존 비밀번호."
          },
          "newbie": {
            "type": "string",
            "pattern": "^[A-Za-z0-9@$!%*#?&^]{8,15}$",
            "title": "새 비밀번호",
            "description": "새 비밀번호."
          }
        },
        "required": [
          "oldbie",
          "newbie"
        ],
        "description": "비밀번호 변경 요청 정보."
      },
      "IHubAuthenticateKey.ISearch": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubAuthenticateKey.IRequest.ISearch",
            "title": "검색 정보",
            "description": "검색 정보."
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "+created_at"
                }
              ]
            },
            "title": "정렬 기준",
            "description": "정렬 기준."
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IHubAuthenticateKey.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          }
        },
        "description": "검색 기준."
      },
      "IPageIHubAuthenticateKey": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubAuthenticateKey"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubAuthenticateKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "expired_at": {
            "type": "string",
            "format": "date"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "title",
          "value",
          "created_at"
        ]
      },
      "IHubAuthenticateKey.ICreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "channel_code": {
            "type": "string"
          },
          "expired_at": {
            "type": "string",
            "format": "date"
          }
        },
        "required": [
          "channel_code"
        ]
      },
      "IHubSSO.IAuthToken": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access token",
            "description": "Access token."
          }
        },
        "required": [
          "access_token"
        ],
        "description": "SSO 인증 토큰 정보."
      },
      "IHubSSO": {
        "type": "object",
        "properties": {
          "shouldJoin": {
            "type": "boolean",
            "title": "Ecosystem 회원가입 여부",
            "description": "Ecosystem 회원가입 여부."
          },
          "ssoUser": {
            "$ref": "#/components/schemas/IHubSSO.ISSOUser",
            "title": "SSO 사용자 정보",
            "description": "SSO 사용자 정보."
          }
        },
        "required": [
          "shouldJoin",
          "ssoUser"
        ],
        "description": "뤼튼 SSO 관련 인터페이스."
      },
      "IHubSSO.ISSOUser": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "title": "결과",
            "description": "결과."
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "title": "WRTN 사용자 ID",
                "description": "WRTN 사용자 ID."
              },
              "name": {
                "type": "string",
                "title": "WRTN 사용자 이름",
                "description": "WRTN 사용자 이름."
              },
              "wrtnUid": {
                "type": "string",
                "title": "WRTN uid",
                "description": "WRTN uid."
              },
              "email": {
                "type": "string",
                "title": "WRTN 이메일",
                "description": "WRTN 이메일."
              },
              "birthYear": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "number"
                  }
                ],
                "title": "WRTN 사용자 생년",
                "description": "WRTN 사용자 생년."
              },
              "gender": {
                "type": "string",
                "title": "WRTN 사용자 성별",
                "description": "WRTN 사용자 성별."
              },
              "interests": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "WRTN 사용자 관심사 리스트",
                "description": "WRTN 사용자 관심사 리스트."
              },
              "number": {
                "type": "string",
                "title": "WRTN 사용자 전화번호",
                "description": "WRTN 사용자 전화번호."
              },
              "provider": {
                "type": "string",
                "title": "WRTN 사용자 계정 제공자",
                "description": "WRTN 사용자 계정 제공자.\n\nex) \"google\", \"kakao\", \"naver\""
              },
              "company": {
                "type": "string",
                "title": "WRTN 사용자 회사",
                "description": "WRTN 사용자 회사."
              },
              "job": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "WRTN 사용자 직업 리스트",
                "description": "WRTN 사용자 직업 리스트."
              },
              "purpose": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "WRTN 사용자 목적",
                "description": "WRTN 사용자 목적."
              },
              "deviceToken": {
                "type": "string",
                "title": "WRTN 사용자 디바이스 토큰",
                "description": "WRTN 사용자 디바이스 토큰."
              }
            },
            "required": [
              "_id",
              "name",
              "email"
            ],
            "description": "사용자 정보 데이터"
          }
        },
        "required": [
          "result",
          "data"
        ],
        "description": "SSO 사용자 정보."
      },
      "IHubSSO.IUpdate": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access token",
            "description": "Access token."
          },
          "job": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "학생"
                },
                {
                  "const": "일반 사무직"
                },
                {
                  "const": "교육직(교수, 교사, 학원강사 등)"
                },
                {
                  "const": "개발자"
                },
                {
                  "const": "자영업자"
                },
                {
                  "const": "사업가(제조업, IT 등)"
                },
                {
                  "const": "마케터"
                },
                {
                  "const": "크리에이터(블로거, 유튜버 등)"
                },
                {
                  "const": "전문직(변호사, 의사 등)"
                },
                {
                  "const": "디자이너"
                },
                {
                  "const": "무직"
                },
                {
                  "const": "기타"
                }
              ]
            },
            "title": "직업 정보",
            "description": "직업 정보."
          },
          "birthYear": {
            "type": "number",
            "title": "생년",
            "description": "생년."
          },
          "gender": {
            "oneOf": [
              {
                "const": "m"
              },
              {
                "const": "f"
              },
              {
                "const": "none"
              }
            ],
            "title": "성별",
            "description": "성별.\n\n\"m\" | \"f\" | \"none\" 로 표기."
          },
          "nickname": {
            "type": "string",
            "title": "닉네임",
            "description": "닉네임."
          }
        },
        "required": [
          "access_token",
          "job"
        ],
        "description": "SSO 와 Ecosystem User 정보 수정."
      },
      "IPresignedUrl": {
        "type": "object",
        "properties": {
          "fileUploadUrl": {
            "type": "string",
            "title": "S3 Presigned URL",
            "description": "S3 Presigned URL."
          },
          "urlExpTsMillis": {
            "type": "string",
            "format": "date-time",
            "title": "S3 Presigned URL 만료 시간",
            "description": "S3 Presigned URL 만료 시간."
          },
          "bucket": {
            "type": "string",
            "title": "업로드되는 s3 bucket",
            "description": "업로드되는 s3 bucket."
          },
          "key": {
            "type": "string",
            "title": "업로드되는 s3 key",
            "description": "업로드되는 s3 key."
          }
        },
        "required": [
          "fileUploadUrl",
          "urlExpTsMillis",
          "bucket",
          "key"
        ],
        "description": "S3 Presigned URL.\n\nS3 객체 업로드를 위한 Presigned URL 정보."
      },
      "IBlockWord.IRequest": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "language": {
            "oneOf": [
              {
                "const": "ko"
              },
              {
                "const": "jp"
              }
            ]
          },
          "filterType": {
            "type": "array",
            "prefixItems": [
              {
                "const": "BLOCKWORD_REGEX"
              }
            ],
            "additionalItems": false
          }
        },
        "required": [
          "text",
          "language",
          "filterType"
        ]
      },
      "IBlockWord": {
        "type": "object",
        "properties": {
          "blockwords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBlockWord.IContent"
            }
          }
        },
        "required": [
          "blockwords"
        ]
      },
      "IBlockWord.IContent": {
        "type": "object",
        "properties": {
          "word": {
            "type": "string"
          },
          "range": {
            "$ref": "#/components/schemas/IBlockWord.IRange"
          }
        },
        "required": [
          "word",
          "range"
        ]
      },
      "IBlockWord.IRange": {
        "type": "object",
        "properties": {
          "start": {
            "type": "integer"
          },
          "end": {
            "type": "integer"
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "ICheckPrivacy.IRequest": {
        "type": "object",
        "properties": {
          "text": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "description": "개인정보가 포함되었는지를 판단할 텍스트"
          }
        },
        "required": [
          "text"
        ],
        "description": "개인정보 포함되었는지 여부를 판단하기 위한 요청 형식"
      },
      "ICheckPrivacy.IInvalid": {
        "type": "object",
        "properties": {
          "word": {
            "type": "string",
            "description": "개인정보에 걸린 단어"
          },
          "regex": {
            "type": "string",
            "description": "어떤 정규식에 걸렸는지"
          }
        },
        "required": [
          "word",
          "regex"
        ],
        "description": "개인 정보에 걸렸다면 어떤 단어와 어떤 개인정보에 걸렸는지"
      },
      "IHubCouponTicket.IRequest": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IPageIHubCouponTicket": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCouponTicket"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubCouponTicket": {
        "type": "object",
        "properties": {
          "coupon": {
            "$ref": "#/components/schemas/IHubCoupon",
            "title": "귀속 할인 쿠폰 정보",
            "description": "귀속 할인 쿠폰 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "티켓을 발급해 간 고객 정보",
            "description": "티켓을 발급해 간 고객 정보."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "티켓 발행 일시",
            "description": "티켓 발행 일시."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "티켓의 만료 일시",
            "description": "티켓의 만료 일시."
          }
        },
        "required": [
          "coupon",
          "id",
          "customer",
          "created_at",
          "expired_at"
        ],
        "description": "할인 쿠폰 티켓 발급 내역.\n\n`IHubCouponTicket` 은 고객이 발급받은 할인 쿠폰 티켓을 형상화한 엔티티이다.\n\n그리고 만일 대상 {@link IHubCoupon 할인 쿠폰} 사양 자체에 유효 기간이 있다면,\n이는 {@link expired_at} 에 그 기한이 기록되고, 그 시일이 지난 후에 자동으로 폐기된다.\n물론, 할인 쿠폰 티켓을 기한 내에 {@link IHubCouponTicketPayment 주문에 사용}했다면,\n상관없을 이야기다."
      },
      "IHubCouponTicket.ICreate": {
        "type": "object",
        "properties": {
          "coupon_id": {
            "type": "string",
            "format": "uuid",
            "description": "발급을 원하는 대상 할인 쿠폰의 {@link IHubCoupon.id}"
          }
        },
        "required": [
          "coupon_id"
        ],
        "description": "할인 쿠폰 티켓의 발급 신청 정보.\n\n오직 대상 {@link IHubCoupon 할인 쿠폰}이 공개된 경우에만 유효.\n\n비공개 할인 쿠폰의 티켓을 취득하려거든, {@link ITake} 를 사용할 것."
      },
      "IHubDepositCharge.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubDepositCharge.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "-value"
                },
                {
                  "const": "+created_at"
                },
                {
                  "const": "+value"
                },
                {
                  "const": "-publish.created_at"
                },
                {
                  "const": "-publish.paid_at"
                },
                {
                  "const": "-publish.cancelled_at"
                },
                {
                  "const": "+publish.created_at"
                },
                {
                  "const": "+publish.paid_at"
                },
                {
                  "const": "+publish.cancelled_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "입금 신청 정보 조회 및 페이지 정보."
      },
      "IHubDepositCharge.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "minimum": {
            "type": "number"
          },
          "maximum": {
            "type": "number"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "oneOf": [
              {
                "const": "published"
              },
              {
                "const": "pending"
              },
              {
                "const": "payed"
              },
              {
                "const": "cancelled"
              }
            ]
          },
          "publish": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "format": "date-time"
              },
              "to": {
                "type": "string",
                "format": "date-time"
              },
              "payment": {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "to": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "required": [
          "state"
        ]
      },
      "IPageIHubDepositCharge": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubDepositCharge"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubDepositCharge": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "기본키",
            "description": "기본키."
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "입금 신청한 고객",
            "description": "입금 신청한 고객."
          },
          "value": {
            "type": "number",
            "exclusiveMinimum": true,
            "minimum": 0,
            "title": "예치금의 입출금 금액",
            "description": "예치금의 입출금 금액.\n\n반드시 양의 수를 가지며, 입출금 여부는 {@link IHubDeposit.direction} 을 보면 된다.\n\n입출금에 대한 수 치를 각각 양/음수로 표현하고 싶다면, 이 또한 본 필드값에 귀속 {@link IHubDeposit.direction} 값을 곱 하면 된다."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "publish": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubDepositChargePublish"
              }
            ],
            "title": "예치금의 입금에 대한 결제 진행 정보",
            "description": "예치금의 입금에 대한 결제 진행 정보."
          }
        },
        "required": [
          "id",
          "customer",
          "value",
          "created_at",
          "publish"
        ],
        "description": "고객의 예치금 입금 신청.\n\n예치금이란 고객들이 선지불하여 미리 충전해놓은 금액을 의미한다.\n본 gen hub 는 거래 대상물인 API 특성상, 고객이 재화의 구매 시점 (API 호출 시점) 에 맞추어 현금을 즉시로 지불하는 것이 불가능하다.\n\n그 대신 본 시스템은 고객에게 예치금을 충전해두고, API 호출 시마다 이를 차감하는 방식으로 한다.\n그리고 {@link IHubDepositCharge} 는 이러한 예치금의 \"입금 신청\" 을 형상화한 엔티티이다.\n\n즉, {@link IHubDepositCharge} 는 고객이 예치금을 입급하겠다는 의사를 표현한 단계에 불과하며,\n아직 예치금 입금 이 완료된 단계가 아님에 주의하자."
      },
      "IHubDepositChargePublish": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "결제를 진행하는 과정의 기본키"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "레코드 생성 일시"
          },
          "paid_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "결제 완료 일시",
            "description": "결제 완료 일시.\n\n충전 신청 완료 일시와, 결제 일시는 다를 수 있다. \"가상 계좌 결제\" 등이 그러함."
          },
          "cancelled_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "결제 취소/환불 일시",
            "description": "결제 취소/환불 일시."
          }
        },
        "required": [
          "id",
          "created_at",
          "paid_at",
          "cancelled_at"
        ],
        "description": "\n예치금의 입금에 대한 결제 진행 정보.\n\n{@link IHubDepositChargePublish} 은 고객이 예치금 입금을 신청하고,\n이에 관하여 결제를 진행하는 과정을 형상화한 엔티티이다.\n\n참고로 {@link IHubDepositChargePublish} 레코드의 존재가 곧 결제의 완료를 뜻하는 것은 아니다.\n결제는 지불이 끝나야 비로소 완성되는 것이다.\n\n위에서 말한 \"결제를 진행하는 과정\" 이란 바로 이러한 의미인 것.\n\n다만 지불이 이루어진 이후로도, 돌연 그것이 취소되는 경우가 있으니, 이 또한 주의해야 한다."
      },
      "IHubDepositCharge.ICreate": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "exclusiveMinimum": true,
            "minimum": 0,
            "title": "예치금의 입출금 금액",
            "description": "예치금의 입출금 금액.\n\n반드시 양의 수를 가지며, 입출금 여부는 {@link IHubDeposit.direction} 을 보면 된다.\n\n입출금에 대한 수 치를 각각 양/음수로 표현하고 싶다면, 이 또한 본 필드값에 귀속 {@link IHubDeposit.direction} 값을 곱 하면 된다."
          }
        },
        "required": [
          "value"
        ],
        "description": "입금 신청 정보 수정."
      },
      "IHubDepositChargePublish.ICreate": {
        "type": "object",
        "properties": {
          "code": {
            "oneOf": [
              {
                "const": "iamport"
              },
              {
                "const": "toss.payments"
              }
            ],
            "description": "제공자 코드\n\nimport | toss.payments"
          },
          "store_id": {
            "type": "string",
            "description": "결제 생성 ID"
          },
          "uid": {
            "type": "string",
            "description": "결제 진행 유저 ID"
          }
        },
        "required": [
          "code",
          "store_id",
          "uid"
        ],
        "description": "결제 진행 정보 조회 및 페이지 정보"
      },
      "IHubDepositChargePublish.IRefundStore": {
        "type": "object",
        "properties": {
          "account": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubBankAccount"
              }
            ],
            "description": "환불 계정"
          },
          "reason": {
            "type": "string",
            "description": "환불 사유"
          }
        },
        "required": [
          "account",
          "reason"
        ],
        "description": "환불 정보 생성"
      },
      "IHubBankAccount": {
        "type": "object",
        "properties": {
          "bank": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "holder": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          }
        },
        "required": [
          "bank",
          "account",
          "holder",
          "mobile"
        ]
      },
      "IHubDepositHistory.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubDepositHistory.IRequest.ISearch",
            "description": "검색 조건"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-deposit.source"
                },
                {
                  "const": "-deposit.code"
                },
                {
                  "const": "-deposit.direction"
                },
                {
                  "const": "+deposit.source"
                },
                {
                  "const": "+deposit.code"
                },
                {
                  "const": "+deposit.direction"
                },
                {
                  "const": "-history.created_at"
                },
                {
                  "const": "+history.created_at"
                },
                {
                  "const": "-history.value"
                },
                {
                  "const": "+history.value"
                }
              ]
            },
            "description": "정렬 조건"
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "예치금 입출금 내역 조회 및 페이지 정보"
      },
      "IHubDepositHistory.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "deposit": {
            "$ref": "#/components/schemas/IHubDeposit.IRequest.ISearch",
            "title": "예치금 메타정보에 대한 검색",
            "description": "예치금 메타정보에 대한 검색."
          },
          "citizen_id": {
            "type": "string",
            "format": "uuid",
            "description": "귀속 시민 ID"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "minimum": {
            "type": "number",
            "minimum": 0
          },
          "maximum": {
            "type": "number",
            "minimum": 0
          }
        }
      },
      "IPageIHubDepositHistory": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubDepositHistory"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubDepositHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "기본키"
          },
          "citizen": {
            "$ref": "#/components/schemas/IHubCitizen",
            "description": "귀속 시민 {@link IHubCitizen}"
          },
          "deposit": {
            "$ref": "#/components/schemas/IHubDeposit",
            "description": "귀속 예치금 메타 정보 {@link IHubDeposit}"
          },
          "source_id": {
            "type": "string",
            "format": "uuid",
            "description": "예치금 입출금을 발생시킨 원천 레코드의 ID"
          },
          "value": {
            "type": "number",
            "exclusiveMinimum": true,
            "minimum": 0,
            "title": "예치금의 입출금 금액",
            "description": "예치금의 입출금 금액.\n\n반드시 양의 수를 가지며, 입출금 여부는 {@link IHubDeposit.direction} 을 보면 된다.\n\n입출금에 대한 수 치를 각각 양/음수로 표현하고 싶다면, 이 또한 본 필드값에 귀속 {@link IHubDeposit.direction} 값을 곱 하면 된다."
          },
          "balance": {
            "type": "number",
            "title": "예치금 변동 후의 잔고",
            "description": "예치금 변동 후의 잔고."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "레코드 생성 일시"
          }
        },
        "required": [
          "id",
          "citizen",
          "deposit",
          "source_id",
          "value",
          "balance",
          "created_at"
        ],
        "description": "{@link IHubDepositHistory}는 고객의 예치금 입출금 내역을 형상화한 엔티티이다.\n\n일종의 회계 원장 테이블이라 보면 된다."
      },
      "IHubCartCommodity.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubCartCommodity.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-seller.created_at"
                },
                {
                  "const": "-seller.goods.payments.real"
                },
                {
                  "const": "-seller.goods.published_count"
                },
                {
                  "const": "-seller.reviews.average"
                },
                {
                  "const": "-seller.reviews.count"
                },
                {
                  "const": "-goods.publish_count"
                },
                {
                  "const": "-goods.payments"
                },
                {
                  "const": "-reviews.average"
                },
                {
                  "const": "-reviews.count"
                },
                {
                  "const": "-sale.created_at"
                },
                {
                  "const": "-sale.opened_at"
                },
                {
                  "const": "-sale.closed_at"
                },
                {
                  "const": "-sale.content.title"
                },
                {
                  "const": "-sale.view_count"
                },
                {
                  "const": "+seller.created_at"
                },
                {
                  "const": "+seller.goods.payments.real"
                },
                {
                  "const": "+seller.goods.published_count"
                },
                {
                  "const": "+seller.reviews.average"
                },
                {
                  "const": "+seller.reviews.count"
                },
                {
                  "const": "+goods.publish_count"
                },
                {
                  "const": "+goods.payments"
                },
                {
                  "const": "+reviews.average"
                },
                {
                  "const": "+reviews.count"
                },
                {
                  "const": "+sale.created_at"
                },
                {
                  "const": "+sale.opened_at"
                },
                {
                  "const": "+sale.closed_at"
                },
                {
                  "const": "+sale.content.title"
                },
                {
                  "const": "+sale.view_count"
                },
                {
                  "const": "-commodity.created_at"
                },
                {
                  "const": "+commodity.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "장바구니에 담은 상품 목록 조회 또는 페이지 정보."
      },
      "IHubCartCommodity.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "sale": {
            "$ref": "#/components/schemas/IHubSale.IRequest.ISearch",
            "title": "상품의 매물",
            "description": "상품의 매물."
          }
        }
      },
      "IPageIHubCartCommodity": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCartCommodity"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubCartDiscountable.IRequest": {
        "type": "object",
        "properties": {
          "commodity_ids": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            ],
            "title": "대상 장바구니 아이템들의 ID 리스트",
            "description": "대상 장바구니 아이템들의 ID 리스트.\n\n만일 이 값을 NULL 로 둘 경우, {@link IHubCart 장바구니}에 담긴 모든\n{@link IHubCartCommodity 원재료}들이, 그 대상이 된다."
          },
          "pseudos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCartCommodity.ICreate"
            },
            "title": "상품 원자재 입력 정보",
            "description": "상품 원자재 입력 정보.\n\n장바구니에 {@link IHubCartCommodity 원재료}을 실제로 입력하기 전, 해당\n{@link IHubCartCommodity 원재료}이 실제로 장바구니에 입력된 상황을\n가정하여 미리 할인 정보를 받아볼 수 있다.\n\n즉, `IHubCartDiscountable` 은 아직 장바구니에 담지 않은\n{@link IHubSale 상품}에 대하여도 할인 정보를 요청할 수 있다는 뜻."
          }
        },
        "required": [
          "commodity_ids",
          "pseudos"
        ],
        "description": "장바구니 할인 조합 요청 정보."
      },
      "IHubCartCommodity.ICreate": {
        "type": "object",
        "properties": {
          "sale_id": {
            "type": "string",
            "format": "uuid",
            "title": "매물 아이디",
            "description": "매물 아이디."
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCartCommodityStock.ICreate"
            },
            "minItems": 1,
            "title": "최종 구성품 목록",
            "description": "최종 구성품 목록."
          }
        },
        "required": [
          "sale_id",
          "stocks"
        ],
        "description": "장바구니에 담은 상품 생성 입력 정보."
      },
      "IHubCartCommodityStock.ICreate": {
        "type": "object",
        "properties": {
          "unit_id": {
            "type": "string",
            "format": "uuid",
            "title": "매물 유닛 아이디",
            "description": "매물 유닛 아이디."
          },
          "stock_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 스톡의 아이디",
            "description": "대상 스톡의 아이디.\n\n참고로 백엔드 서버에서는 대상 스톡이 {@link choices} 의 선택 정보와 일치하는\n지 검증한다. 따라서 잘못된 값을 입력시, 장바구니 상품 등록 기닝이 제대로\n동작하지 않으니, 이 점 주의하기 바란다."
          },
          "price_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 스톡 가격의 아이디",
            "description": "대상 스톡 가격의 아이디."
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCartCommodityStockChoice.ICreate"
            },
            "title": "제품 최종 선택",
            "description": "제품 최종 선택.\n\n{@link IHubCartCommodityStockChoice.ICreate} 참조."
          }
        },
        "required": [
          "unit_id",
          "stock_id",
          "price_id",
          "choices"
        ],
        "description": "장바구니에 담은 매물의 최종 구성품 입력 정보."
      },
      "IHubCartCommodityStockChoice.ICreate": {
        "type": "object",
        "properties": {
          "option_id": {
            "type": "string",
            "title": "옵션 아이디",
            "description": "옵션 아이디."
          },
          "candidate_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "선택한 후보 아이템 아이디",
            "description": "선택한 후보 아이템 아이디."
          },
          "value": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ],
            "title": "서술형 옵션에 대하여 고객이 기재한 값",
            "description": "서술형 옵션에 대하여 고객이 기재한 값."
          }
        },
        "required": [
          "option_id",
          "candidate_id",
          "value"
        ],
        "description": "장바구니에 담은 최종 구성품의 옵션 선택 입력 정보."
      },
      "IHubCartDiscountable": {
        "type": "object",
        "properties": {
          "deposit": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ],
            "title": "사용할 수 있는 예치금 총량",
            "description": "사용할 수 있는 예치금 총량.\n\n만일 현 {@link IHubCustomer 고객}이 아직 {@link IHubCitizen 시민}\n인증하지 않았다면, `null` 값이 기재된다."
          },
          "combinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCartDiscountable.ICombination"
            },
            "title": "적용할 수 있는 할인 쿠폰 조합 리스트",
            "description": "적용할 수 있는 할인 쿠폰 조합 리스트.\n\n이는 동시에 적용하여 중복 할인을 받을 수 있는 {@link IHubCoupon 할인 쿠폰}들의\n조합들을 배열로 나열한 경우로써, 할인 총액이 높은 순서부터 배치되어있다.\n\n즉, 기대 할인 총액 {@link IHubCouponCombination.amount} 가 높은 조합부터\n내림차순으로 정렬이 되어있다는 뜻."
          }
        },
        "required": [
          "deposit",
          "combinations"
        ],
        "description": "장바구니에 적용할 수 있는 할인 수단 정보.\n\n`IHubCartDiscountable` 은 {@link IHubCustomer 고객}이\n{@link IHubCart 장바구니}에 담았거나 혹은 담으려고 하는\n{@link IHubCartCommodity 원재료}들에 대하여, 사용할 수 있는\n{@link IHubMileageAggregate 마일리지의 총량}이나\n{@link IHubCouponCombination 할인 쿠폰의 조합}들을 형상화한 엔티티이다.\n\n참고로 여기서 말하는 아이템이란, 비단 장바구니에 담겨진 {@link IHubCartItem}\n뿐 아니라, 아직 장바구니에 담지 않았으되 담으려고 하는 {@link IHubCartItem.ICreate}\n또한 포함해서 지칭하는 말이다. 즉, `IHubCartDiscountable` 은 아직 장바구니에 담지 않은\n{@link IHubSale 상품}에 대하여도 할인 정보를 요청할 수 있다는 뜻이다."
      },
      "IHubCartDiscountable.ICombination": {
        "type": "object",
        "properties": {
          "coupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCoupon"
            },
            "title": "할인 쿠폰 리스트",
            "description": "할인 쿠폰 리스트.\n\n아직 티켓으로 발행하지 않았으되, 발급 가능한 할인 쿠폰들의 목록."
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCouponTicket"
            },
            "title": "기 발행한 할인 쿠폰 티켓 리스트",
            "description": "기 발행한 할인 쿠폰 티켓 리스트."
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCartDiscountable.IEntry"
            },
            "title": "각각 할인 쿠폰의 고정비 감소 총액 목록",
            "description": "각각 할인 쿠폰의 고정비 감소 총액 목록."
          },
          "amount": {
            "type": "number",
            "title": "본 조합에 의한 고정비 감소 총액",
            "description": "본 조합에 의한 고정비 감소 총액."
          }
        },
        "required": [
          "coupons",
          "tickets",
          "entries",
          "amount"
        ],
        "description": "적용 가능 할인 쿠폰 조합."
      },
      "IHubCartDiscountable.IEntry": {
        "type": "object",
        "properties": {
          "commodity_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 원재료의 {@link IHubCartCommodity.id}",
            "description": "대상 원재료의 {@link IHubCartCommodity.id}."
          },
          "pseudo": {
            "type": "boolean",
            "title": "가짜 여부",
            "description": "가짜 여부.\n\n실제 {@link IHubCartCommodity 장바구니 원재료}가 아닌,\n특정 {@link IHubSale 매물}로부터 임의로 조합한 가짜 원재료인지 여부."
          },
          "coupon_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 할인 쿠폰의 {@link IHubCoupon.id}",
            "description": "대상 할인 쿠폰의 {@link IHubCoupon.id}."
          },
          "amount": {
            "type": "number",
            "title": "할인 쿠폰에 의한 고정비 감소 총액",
            "description": "할인 쿠폰에 의한 고정비 감소 총액."
          }
        },
        "required": [
          "commodity_id",
          "pseudo",
          "coupon_id",
          "amount"
        ],
        "description": "개별 할인 쿠폰과 장바구니 원재료의 맵핑 정보.\n\n각 할인쿠폰이 각 장바구니 원재료에 대하여 얼만큼의 고정비 감소를 낳는지 기술한 정보."
      },
      "IHubOrderGoodIssueComment.ICreate": {
        "type": "object",
        "properties": {
          "format": {
            "oneOf": [
              {
                "const": "txt"
              },
              {
                "const": "md"
              },
              {
                "const": "html"
              }
            ],
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "body": {
            "type": "string",
            "title": "Content body of comment",
            "description": "Content body of comment."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "format",
          "body",
          "files"
        ],
        "description": "이슈 게시글 댓글 입력 정보."
      },
      "IHubOrderGoodIssueComment.ISnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
          },
          "format": {
            "$ref": "#/components/schemas/IBbsArticleComment.Format",
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "body": {
            "type": "string",
            "title": "Content body of comment",
            "description": "Content body of comment."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "body",
          "files"
        ]
      },
      "IHubOrderGoodIssueFeeAccept.ICreate": {
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "수임료 청구받은 고객",
            "description": "수임료 청구받은 고객."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "published_at": {
            "type": "string",
            "format": "date-time",
            "title": "수임료 수락의 효력 개시 일시",
            "description": "수임료 수락의 효력 개시 일시."
          }
        },
        "required": [
          "customer",
          "created_at",
          "published_at"
        ],
        "description": "수임료 수락을 위한 입력 정보."
      },
      "IHubOrderGoodIssueFee.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubOrderGoodIssueFee.IRequest.ISearch",
            "title": "검색 조건",
            "description": "검색 조건."
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-fee.price"
                },
                {
                  "const": "-fee.created_at"
                },
                {
                  "const": "+fee.price"
                },
                {
                  "const": "+fee.created_at"
                }
              ]
            },
            "title": "정렬 조건",
            "description": "정렬 조건."
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "수임료 검색 정보 또는 페이지 정보."
      },
      "IHubOrderGoodIssueFee.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "min_price": {
            "type": "number",
            "title": "수임료 최소 금액",
            "description": "수임료 최소 금액."
          },
          "max_price": {
            "type": "number",
            "title": "수임료 최대 금액",
            "description": "수임료 최대 금액."
          }
        }
      },
      "IPageIHubOrderGoodIssueFee": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubOrderGoodIssueFee"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubOrderGoodIssue.ICreate": {
        "type": "object",
        "properties": {
          "format": {
            "oneOf": [
              {
                "const": "txt"
              },
              {
                "const": "md"
              },
              {
                "const": "html"
              }
            ],
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "이슈 게시글 입력 정보."
      },
      "IHubOrderGood.IExecute": {
        "type": "object",
        "properties": {
          "unit_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 유닛의 {@link IHubSaleUnit.id}",
            "description": "대상 유닛의 {@link IHubSaleUnit.id}."
          },
          "method": {
            "oneOf": [
              {
                "const": "get"
              },
              {
                "const": "post"
              },
              {
                "const": "patch"
              },
              {
                "const": "put"
              },
              {
                "const": "delete"
              },
              {
                "const": "head"
              }
            ],
            "title": "API 호출을 위한 METHOD",
            "description": "API 호출을 위한 METHOD."
          },
          "path": {
            "type": "string",
            "title": "API 호출을 위한 PATH",
            "description": "API 호출을 위한 PATH."
          },
          "arguments": {
            "type": "array",
            "items": {},
            "title": "함수에 입력할 파라미터 리스트",
            "description": "함수에 입력할 파라미터 리스트."
          }
        },
        "required": [
          "unit_id",
          "method",
          "path",
          "arguments"
        ]
      },
      "IExecutionResultany": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IExecutionResult.IFailure"
          },
          {
            "$ref": "#/components/schemas/IExecutionResult.ISuccessany"
          }
        ]
      },
      "IExecutionResult.IFailure": {
        "type": "object",
        "properties": {
          "success": {
            "const": false
          },
          "error": {}
        },
        "required": [
          "success",
          "error"
        ]
      },
      "IExecutionResult.ISuccessany": {
        "type": "object",
        "properties": {
          "success": {
            "const": true
          },
          "value": {}
        },
        "required": [
          "success",
          "value"
        ]
      },
      "IHubOrderGoodHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "method": {
            "$ref": "#/components/schemas/IHubOrderGoodHistory.MethodType",
            "title": "요청한 메소드",
            "description": "요청한 메소드."
          },
          "path": {
            "type": "string",
            "title": "요청한 경로",
            "description": "요청한 경로."
          },
          "status": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ],
            "title": "응답받은 상태 코드",
            "description": "응답받은 상태 코드."
          },
          "arguments": {
            "title": "요청한 인자",
            "description": "요청한 인자."
          },
          "output": {
            "title": "응답받은 결과",
            "description": "응답받은 결과."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "responded_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "응답 받은 일시",
            "description": "응답 받은 일시."
          }
        },
        "required": [
          "id",
          "method",
          "path",
          "status",
          "arguments",
          "output",
          "created_at",
          "responded_at"
        ]
      },
      "IHubOrderGoodHistory.MethodType": {
        "oneOf": [
          {
            "const": "get"
          },
          {
            "const": "post"
          },
          {
            "const": "patch"
          },
          {
            "const": "put"
          },
          {
            "const": "delete"
          },
          {
            "const": "head"
          }
        ]
      },
      "IHubOrderGood.IOpen": {
        "type": "object",
        "properties": {
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문 계약의 개시 일시",
            "description": "주문 계약의 개시 일시.\n\n주문 계약의 개시 시점을 설정한다.\n\n주문의 확정 시점과 다르게, 효력의 발생 시점을 그보다 뒤로 미룰 수 있다.\n그리고 계약 효력의 발생 시점은, 그것이 도래하기 전까지, 계속 편집할 수 있다.\n또한 월 고정비 과금은, 본 개시 일자를 기준으로 계상된다.\n\n참고로 고객이 판매자의 API 를 구입한 후, 이를 검토하고 개발하는 과정이\n필요하기에, 본디 계약의 효력 발휘 일시는 주문 확정보다 더 뒤로 밀릴 수밖에\n없는 법."
          }
        },
        "required": [
          "opened_at"
        ]
      },
      "IHubOrderGood.IClose": {
        "type": "object",
        "properties": {
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문 계약의 종료 일시",
            "description": "주문 계약의 종료 일시.\n\n주문 계약의 종료 시점을 설정한다.\n\n단, 계약의 종료 시점을 지금 즉시로 할 수 없다. 계약 개시 시점을 기준으로,\n최소 1 개월의 기간이 지나야만 취소할 수 있다. 그리고 이미 계약애 개시된\n상태라면, 마찬가지로 1 개월 단위로만 계약 종료가 가능하다."
          }
        },
        "required": [
          "closed_at"
        ]
      },
      "IHubOrder.ICreate": {
        "type": "object",
        "properties": {
          "goods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubOrderGood.ICreate"
            },
            "title": "제품 정보",
            "description": "제품 정보."
          }
        },
        "required": [
          "goods"
        ],
        "description": "주문 입력 정보."
      },
      "IHubOrderGood.ICreate": {
        "type": "object",
        "properties": {
          "commodity_id": {
            "type": "string",
            "format": "uuid",
            "title": "구성품 식별자",
            "description": "구성품 식별자."
          }
        },
        "required": [
          "commodity_id"
        ],
        "description": "주문을 구성하는 개별 상품 입력 정보."
      },
      "IHubOrderDiscountable.IRequest": {
        "type": "object",
        "properties": {
          "good_ids": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "minItems": 1
              }
            ],
            "title": "대상 상품의 {@link IHubOrderGood.id} 목록",
            "description": "대상 상품의 {@link IHubOrderGood.id} 목록.\n\n만일 `null` 값을 할당한다면, 대상 {@link IHubOrder 주문}의\n모든 상품들을 대상으로 할인 조합을 계산한다."
          }
        },
        "required": [
          "good_ids"
        ],
        "description": "주문 할인 조합 요청 정보."
      },
      "IHubOrderDiscountable": {
        "type": "object",
        "properties": {
          "deposit": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ],
            "title": "사용할 수 있는 예치금 총량",
            "description": "사용할 수 있는 예치금 총량.\n\n만일 현 {@link IHubCustomer 고객}이 아직 {@link IHubCitizen 시민}\n인증하지 않았다면, `null` 값이 기재된다."
          },
          "combinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubOrderDiscountable.ICombination"
            },
            "title": "적용할 수 있는 할인 쿠폰 조합 리스트",
            "description": "적용할 수 있는 할인 쿠폰 조합 리스트.\n\n이는 동시에 적용하여 중복 할인을 받을 수 있는 {@link IHubCoupon 할인 쿠폰}들의\n조합들을 배열로 나열한 경우로써, 할인 총액이 높은 순서부터 배치되어있다.\n\n즉, 기대 할인 총액 {@link IHubCouponCombination.amount} 가 높은 조합부터\n내림차순으로 정렬이 되어있다는 뜻."
          }
        },
        "required": [
          "deposit",
          "combinations"
        ],
        "description": "주문에 사용할 수 있는 할인 수단 정보.\n\n`IHubOrderDiscountable` 은 현재 신청 단계에 있는 {@link IHubOrder 주문}에\n대하여, {@link IHubCustomer 고객}이 사용할 수 있는\n{@link IHubMileage 마일리지}의 총량이나 예치금 총량 및\n{@link IHubCouponCombination 할인 쿠폰의 조합}들을 형상화한 엔티티이다."
      },
      "IHubOrderDiscountable.ICombination": {
        "type": "object",
        "properties": {
          "coupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCoupon"
            },
            "title": "할인 쿠폰 리스트",
            "description": "할인 쿠폰 리스트.\n\n아직 티켓으로 발행하지 않았으되, 발급 가능한 할인 쿠폰들의 목록."
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCouponTicket"
            },
            "title": "기 발행한 할인 쿠폰 티켓 리스트",
            "description": "기 발행한 할인 쿠폰 티켓 리스트."
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubOrderDiscountable.IEntry"
            },
            "title": "각각 할인 쿠폰의 고정비 감소 총액 목록",
            "description": "각각 할인 쿠폰의 고정비 감소 총액 목록."
          },
          "amount": {
            "type": "number",
            "title": "본 조합에 의한 고정비 감소 총액",
            "description": "본 조합에 의한 고정비 감소 총액."
          }
        },
        "required": [
          "coupons",
          "tickets",
          "entries",
          "amount"
        ],
        "description": "적용 가능 할인 쿠폰 조합."
      },
      "IHubOrderDiscountable.IEntry": {
        "type": "object",
        "properties": {
          "good_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 상품의 {@link IHubOrderGood.id}",
            "description": "대상 상품의 {@link IHubOrderGood.id}."
          },
          "coupon_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 할인 쿠폰의 {@link IHubCoupon.id}",
            "description": "대상 할인 쿠폰의 {@link IHubCoupon.id}."
          },
          "amount": {
            "type": "number",
            "title": "할인 쿠폰에 의한 고정비 감소 총액",
            "description": "할인 쿠폰에 의한 고정비 감소 총액."
          }
        },
        "required": [
          "good_id",
          "coupon_id",
          "amount"
        ],
        "description": "개별 할인 쿠폰과 주문 상품의 맵핑 정보.\n\n각 할인쿠폰이 각 주문 상품에 대하여 얼만큼의 고정비 감소를 낳는지 기술한 정보."
      },
      "IHubOrderPrice.ICreate": {
        "type": "object",
        "properties": {
          "coupon_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "title": "적용할 할인 쿠폰들의 {@link IHubCoupon.id} 리스트",
            "description": "적용할 할인 쿠폰들의 {@link IHubCoupon.id} 리스트."
          }
        },
        "required": [
          "coupon_ids"
        ],
        "description": "주문 가격의 편집 정보."
      },
      "IHubOrderPrice": {
        "type": "object",
        "properties": {
          "ticket_payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubCouponTicketPayment"
            },
            "title": "할인 쿠폰 티켓의 지급 내역 리스트",
            "description": "할인 쿠폰 티켓의 지급 내역 리스트."
          },
          "value": {
            "type": "number",
            "minimum": 0,
            "title": "명목상 지불 총액",
            "description": "명목상 지불 총액."
          },
          "deposit": {
            "type": "number",
            "minimum": 0,
            "title": "고정비 예치금 지불액",
            "description": "고정비 예치금 지불액."
          },
          "ticket": {
            "type": "number",
            "minimum": 0,
            "title": "고정비 할인 쿠폰 티켓 지불액",
            "description": "고정비 할인 쿠폰 티켓 지불액."
          }
        },
        "required": [
          "ticket_payments",
          "value",
          "deposit",
          "ticket"
        ],
        "description": "주문 가격 정보.\n\n`IHubOrderPrice` 는 {@link IHubOrder 주문}시 결제해야 할 가격을 상세화한\n엔티티로써, {@link IHubCouponTicket 할인 쿠폰 티켓} 내지 예치금 및\n{@link IHubMileage 마일리지}를 통한 차감액 정보를 함께 포함한디.\n\n항목상 거진 {@link IHubSaleUnitStockPrice.fixed 고정비}에 관한 것을 다루되,\n{@link IHubCoupon 할인 쿠폰} 중 퍼센트 단위 할인의 경우에는 변동비에도 영향을\n준다."
      },
      "IHubCouponTicketPayment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "ticket": {
            "$ref": "#/components/schemas/IHubCouponTicket",
            "title": "귀속 할인 쿠폰 티켓",
            "description": "귀속 할인 쿠폰 티켓."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "티켓 지급 일시",
            "description": "티켓 지급 일시."
          }
        },
        "required": [
          "id",
          "ticket",
          "created_at"
        ],
        "description": "할인 쿠폰 티켓 지불 (결제) 내역.\n\n{@link IHubCouponTicketPayment} 는 할인 쿠폰 티켓 {@link IHubCouponTicket} 의\n{@link IHubOrder 주문}에 대한 지급 정보를 형상화한 엔티티로써,\n{@link IHubCustomer 소비자}가 자신이 발급받은 할인 쿠폰 티켓을 주문에 사용하여\n결제 금액을 차감받았을 때 사용한다.\n\n그리고 {@link IHubOrder} 자체가 주문이 완료된 상황에 쓰이는 엔티티가 아닌, 주문\n신청 단계도 함께 표현하기 위하여 설계된 엔티티인 바, 본 `IHubCouponTicketPayment`\n레코드가 생성되었다하여 실제로 귀속 티켓이 사라지는 것은 아니다. 고객이\n{@link IHubOrder.published_at 주문을 확정}하기 전까지, 티켓은 일종의 예치 상태로\n이해하면 된다.\n\n또한, 본 레코드는 고객 스스로가 티켓의 지급을 번복하여 삭제할 수도 있지만, 귀속 주문\n그 자체가 취소되어 함께 삭제되기도 한다."
      },
      "IHubOrderPublish.ICreate": {
        "type": "object",
        "properties": {
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문 계약의 개시 일시 일괄 적용",
            "description": "주문 계약의 개시 일시 일괄 적용.\n\n주문 계약의 개시 시점을 모든 {@link IHubOrderGood 상품}들에 대하여\n일괄 설정한다.\n\n주문의 확정 시점과 다르게, 효력의 발생 시점을 그보다 뒤로 미룰 수 있다.\n그리고 계약 효력의 발생 시점은, 그것이 도래하기 전까지, 계속 편집할 수 있다.\n또한 월 고정비 과금은, 본 개시 일자를 기준으로 계상된다.\n\n참고로 고객이 판매자의 API 를 구입한 후, 이를 검토하고 개발하는 과정이\n필요하기에, 본디 계약의 효력 발휘 일시는 주문 확정보다 더 뒤로 밀릴 수밖에\n없는 법.\n\n> 각 주문 상품 별로 개시 일시를 다르게 설정하는 것도 가능하다."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문 계약의 종료 일시 일괄 적용",
            "description": "주문 계약의 종료 일시 일괄 적용.\n\n주문 계약의 종료 시점을 모든 {@link IHubOrderGood 상품}들에 대하여\n일괄 설정한다.\n\n단, 계약의 종료 시점을 지금 즉시로 할 수 없다. 계약 개시 시점을 기준으로,\n최소 1 개월의 기간이 지나야만 취소할 수 있다. 그리고 이미 계약애 개시된\n상태라면, 마찬가지로 1 개월 단위로만 계약 종료가 가능하다.\n\n> 각 주문 상품 별로 종료 일시를 다르게 설정하는 것도 가능하다."
          }
        },
        "required": [
          "opened_at",
          "closed_at"
        ],
        "description": "주문의 확정 입력 정보."
      },
      "IHubOrderPublish.IOpen": {
        "type": "object",
        "properties": {
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문 계약의 개시 일시 일괄 적용",
            "description": "주문 계약의 개시 일시 일괄 적용.\n\n주문 계약의 개시 시점을 모든 {@link IHubOrderGood 상품}들에 대하여\n일괄 설정한다.\n\n주문의 확정 시점과 다르게, 효력의 발생 시점을 그보다 뒤로 미룰 수 있다.\n그리고 계약 효력의 발생 시점은, 그것이 도래하기 전까지, 계속 편집할 수 있다.\n또한 월 고정비 과금은, 본 개시 일자를 기준으로 계상된다.\n\n참고로 고객이 판매자의 API 를 구입한 후, 이를 검토하고 개발하는 과정이\n필요하기에, 본디 계약의 효력 발휘 일시는 주문 확정보다 더 뒤로 밀릴 수밖에\n없는 법.\n\n> 각 주문 상품 별로 개시 일시를 다르게 설정하는 것도 가능하다."
          }
        },
        "required": [
          "opened_at"
        ],
        "description": "계약 시작 일시 편집 정보."
      },
      "IHubOrderPublish.IClose": {
        "type": "object",
        "properties": {
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "주문 계약의 종료 일시 일괄 적용",
            "description": "주문 계약의 종료 일시 일괄 적용.\n\n주문 계약의 종료 시점을 모든 {@link IHubOrderGood 상품}들에 대하여\n일괄 설정한다.\n\n단, 계약의 종료 시점을 지금 즉시로 할 수 없다. 계약 개시 시점을 기준으로,\n최소 1 개월의 기간이 지나야만 취소할 수 있다. 그리고 이미 계약애 개시된\n상태라면, 마찬가지로 1 개월 단위로만 계약 종료가 가능하다.\n\n> 각 주문 상품 별로 종료 일시를 다르게 설정하는 것도 가능하다."
          }
        },
        "required": [
          "closed_at"
        ],
        "description": "주문 계약의 종료 일시 편집 정보."
      },
      "IHubOrderGoodHistory.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubOrderGoodHistory.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-history.created_at"
                },
                {
                  "const": "+history.created_at"
                },
                {
                  "const": "-history.responded_at"
                },
                {
                  "const": "+history.responded_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IHubOrderGoodHistory.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "unit_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "IPageIHubOrderGoodHistory.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubOrderGoodHistory.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubOrderGoodHistory.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "responded_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        },
        "required": [
          "id",
          "status",
          "created_at",
          "responded_at"
        ]
      },
      "IHubSaleInquiryComment.ICreate": {
        "type": "object",
        "properties": {
          "format": {
            "oneOf": [
              {
                "const": "txt"
              },
              {
                "const": "md"
              },
              {
                "const": "html"
              }
            ],
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "body": {
            "type": "string",
            "title": "Content body of comment",
            "description": "Content body of comment."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "format",
          "body",
          "files"
        ],
        "description": "질의문 댓글 생성에 필요한 입력 정보."
      },
      "IHubSaleInquiryComment.ISnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
          },
          "format": {
            "$ref": "#/components/schemas/IBbsArticleComment.Format",
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "body": {
            "type": "string",
            "title": "Content body of comment",
            "description": "Content body of comment."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "body",
          "files"
        ]
      },
      "IHubSaleQuestion.ICreate": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "boolean"
          },
          "format": {
            "oneOf": [
              {
                "const": "txt"
              },
              {
                "const": "md"
              },
              {
                "const": "html"
              }
            ],
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "secret",
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "매물 스냅샷에 대한 질문의 상세 입력 정보."
      },
      "IBbsArticle.ICreate": {
        "type": "object",
        "properties": {
          "format": {
            "oneOf": [
              {
                "const": "txt"
              },
              {
                "const": "md"
              },
              {
                "const": "html"
              }
            ],
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "Store content type of the article."
      },
      "IHubSaleReview.ICreate": {
        "type": "object",
        "properties": {
          "good_id": {
            "type": "string",
            "format": "uuid"
          },
          "score": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "format": {
            "oneOf": [
              {
                "const": "txt"
              },
              {
                "const": "md"
              },
              {
                "const": "html"
              }
            ],
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "good_id",
          "score",
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "매물 스냅샷에 대한 리뷰 생성 입력 정보."
      },
      "IHubSaleReview.IUpdate": {
        "type": "object",
        "properties": {
          "format": {
            "oneOf": [
              {
                "const": "txt"
              },
              {
                "const": "md"
              },
              {
                "const": "html"
              }
            ],
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "score": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "format",
          "title",
          "score",
          "body",
          "files"
        ],
        "description": "매물 스냅샷에 대한 리뷰 수정 정보."
      },
      "IHubBookmarkSale": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "북마크 ID",
            "description": "북마크 ID."
          },
          "sale": {
            "$ref": "#/components/schemas/IHubSale",
            "title": "북마크 대상 매물 정보",
            "description": "북마크 대상 매물 정보."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "북마크 생성 일시",
            "description": "북마크 생성 일시."
          }
        },
        "required": [
          "id",
          "sale",
          "created_at"
        ],
        "description": "매물 북마크 정보.\n\n`IHubSaleBookmark` 은 {@link IHubSale 매물}를 북마크 할시 생기는 정보다."
      },
      "IHubSaleRecommend.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubSaleRecommend.IRequest.ISearch",
            "title": "검색 정보",
            "description": "검색 정보."
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-seller.created_at"
                },
                {
                  "const": "-seller.goods.payments.real"
                },
                {
                  "const": "-seller.goods.published_count"
                },
                {
                  "const": "-seller.reviews.average"
                },
                {
                  "const": "-seller.reviews.count"
                },
                {
                  "const": "-goods.publish_count"
                },
                {
                  "const": "-goods.payments"
                },
                {
                  "const": "-reviews.average"
                },
                {
                  "const": "-reviews.count"
                },
                {
                  "const": "-sale.created_at"
                },
                {
                  "const": "-sale.opened_at"
                },
                {
                  "const": "-sale.closed_at"
                },
                {
                  "const": "-sale.content.title"
                },
                {
                  "const": "-sale.view_count"
                },
                {
                  "const": "+seller.created_at"
                },
                {
                  "const": "+seller.goods.payments.real"
                },
                {
                  "const": "+seller.goods.published_count"
                },
                {
                  "const": "+seller.reviews.average"
                },
                {
                  "const": "+seller.reviews.count"
                },
                {
                  "const": "+goods.publish_count"
                },
                {
                  "const": "+goods.payments"
                },
                {
                  "const": "+reviews.average"
                },
                {
                  "const": "+reviews.count"
                },
                {
                  "const": "+sale.created_at"
                },
                {
                  "const": "+sale.opened_at"
                },
                {
                  "const": "+sale.closed_at"
                },
                {
                  "const": "+sale.content.title"
                },
                {
                  "const": "+sale.view_count"
                }
              ]
            },
            "title": "정렬 기준",
            "description": "정렬 기준."
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IHubSaleRecommend.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "sale": {
            "$ref": "#/components/schemas/IHubSale.IRequest.ISearch"
          }
        },
        "required": [
          "sale"
        ]
      },
      "IPageIHubSaleRecommend.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleRecommend.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubSaleRecommend.ISummary": {
        "type": "object",
        "properties": {
          "seller": {
            "$ref": "#/components/schemas/IHubSeller.IInvert",
            "title": "본 매물을 작성한 판매자",
            "description": "본 매물을 작성한 판매자."
          },
          "section": {
            "$ref": "#/components/schemas/IHubSection",
            "title": "귀속 섹션",
            "description": "귀속 섹션."
          },
          "audit": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubSaleAudit.IInvert"
              }
            ],
            "title": "심사 정보",
            "description": "심사 정보.\n\n만일 이 값이 `null` 이거나 혹은 내부 속성값 {@link IHubSaleAudit.approved_at} 이\n`null` 인 경우, 고객은 이를 일절 조회하거나 열람/구매할 수 없다. 오직 판매 당사자와\n관리자만이 해당 매물의 존재를 인지 가능."
          },
          "bookmarked_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "북마크로 추가한 시점",
            "description": "북마크로 추가한 시점."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "매물의 ID",
            "description": "매물의 ID."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "스냅샷의 ID",
            "description": "스냅샷의 ID."
          },
          "latest": {
            "type": "boolean",
            "title": "마지막 스냅샷 여부",
            "description": "마지막 스냅샷 여부.\n\n본 스냅샷이 귀속 매물의 가장 마지막 스냅샷인가?\n\n단, 본 매물을 조회하는 유저의 관점에 따라, \"마지막\" 의 기준이 다르다.\n\n- 고객 관점: 가장 마지막에 승인된 매물\n- 판매자/관리자: 가장 마지막에 작성된 매물"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleChannel"
            },
            "title": "채널/카테고리 리스트",
            "description": "채널/카테고리 리스트.\n\n본 매물이 판매되는 채널과 카테고리들의 일람."
          },
          "aggregate": {
            "$ref": "#/components/schemas/IHubSaleAggregate",
            "title": "본 매물 (또는 스냅샷) 에 대한 집계/성과 정보",
            "description": "본 매물 (또는 스냅샷) 에 대한 집계/성과 정보."
          },
          "content": {
            "$ref": "#/components/schemas/IHubSaleContent.IInvert",
            "title": "컨텐츠 정보",
            "description": "컨텐츠 정보.\n\n판매자가 매물을 등록하며 작성한 서술 정보."
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnit.ISummary"
            },
            "minItems": 1,
            "title": "유닛 리스트",
            "description": "유닛 리스트.\n\n현 매물이 취급하는 제품들에 대하여 표현하는 레코드로써, 각각의 제품에 대하여\n설정할 수 있는 {@link IHubSaleUnitOption 옵션} 및, 옵션들을 선택하여\n구성할 수 있는 최종 구성품 {@link IHubSaleUnitStock 스톡}에 대한 정보를\n담고 있다."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그 값 리스트",
            "description": "검색 태그 값 리스트."
          },
          "version": {
            "type": "string",
            "title": "버전명",
            "description": "버전명.\n\n{@link ISwaggerInfo.version} 과 다른 값을 설정할 수 있다.\n\n즉, 서버 스펙 (스웨거 문서) 상 버전명과, 제품상 버전명이 다를 수 있음."
          },
          "version_description": {
            "type": "string",
            "title": "버전 설명",
            "description": "버전 설명."
          },
          "activated_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "스냅샷의 활성화 시각",
            "description": "스냅샷의 활성화 시각.\n\n본 스냅샷이 심사 승인되어, 최초 활성화된 시각."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "현 매물 (스냅샷) 의 API 들이 중단되는 시각",
            "description": "현 매물 (스냅샷) 의 API 들이 중단되는 시각.\n\n거래 대상물이 API 인 본 시스템의 특성상, 판매자가 매물을 판매 중단했따하여\n그것이 곧바로 삭제되어서는 안된다. 최소한의 이용 기간을 보장해주어야, 해당\nAPI 를 사용하는 고객들이 이에 대응할 것이 아니겠는가?\n\n때문에 매물에 대한 판매 중단시, 일정 유예 기간을 두고 사라지도록 하고 있다.\n\n물론, 단 한 번도 판매된 적 없는 매물이거든, 해당 없음."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "paused_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 일시정지 일시",
            "description": "판매 일시정지 일시.\n\n판매자가 모종의 이유로 API 판매를 일시적으로 중단한 상태.\n\n고객은 여전히 리스트 및 상세 페이지에서 해당 매물을 열람할 수 있으되, 해당 매물에는\n\"판매자가 일시 중지된 상품입니다\" 라는 라벨이 붙는다."
          },
          "suspended_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 중단 일시",
            "description": "판매 중단 일시.\n\n판매자가 모종의 이유로 판매를 중단한 상태.\n\n고객은 해당 매물을 리스트 및 상세 페이지에서 일절 조회할 수 업다. 언뜻 보면\nsoft delete 와 비슷해보이나, 판매 당사자와 관리자는 여전히 이를 조회할 수 있고,\n언제든지 판매를 재개할 수 있다는 점이 다르다.\n\n또한 판매자 중단되었다한들, 해당 매물의 기 구매자들은 여전히 해당 API 를 사용할\n수 있다. API 의 중단 시점은 {@link IHubSaleSnapshot.expired_at} 속성을 참고할\n것."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 개시 일시",
            "description": "판매 개시 일시."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "판매 종료 일시",
            "description": "판매 종료 일시.\n\n이 값이 NULL 이거든, 판매가 영원히 계속된다."
          }
        },
        "required": [
          "seller",
          "section",
          "audit",
          "bookmarked_at",
          "id",
          "snapshot_id",
          "latest",
          "channels",
          "aggregate",
          "content",
          "units",
          "tags",
          "version",
          "version_description",
          "activated_at",
          "expired_at",
          "created_at",
          "paused_at",
          "suspended_at",
          "opened_at",
          "closed_at"
        ]
      },
      "IHubShelfOrderGood.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IHubShelfOrderGood.IRequest.ISearch",
            "description": "검색 조건"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-order.created_at"
                },
                {
                  "const": "-order.publish.created_at"
                },
                {
                  "const": "-good.opened_at"
                },
                {
                  "const": "-good.closed_at"
                },
                {
                  "const": "-seller.created_at"
                },
                {
                  "const": "-seller.goods.payments.real"
                },
                {
                  "const": "-seller.goods.published_count"
                },
                {
                  "const": "-seller.reviews.average"
                },
                {
                  "const": "-seller.reviews.count"
                },
                {
                  "const": "-goods.publish_count"
                },
                {
                  "const": "-goods.payments"
                },
                {
                  "const": "-reviews.average"
                },
                {
                  "const": "-reviews.count"
                },
                {
                  "const": "-sale.created_at"
                },
                {
                  "const": "-sale.opened_at"
                },
                {
                  "const": "-sale.closed_at"
                },
                {
                  "const": "-sale.content.title"
                },
                {
                  "const": "-sale.view_count"
                },
                {
                  "const": "+order.created_at"
                },
                {
                  "const": "+order.publish.created_at"
                },
                {
                  "const": "+good.opened_at"
                },
                {
                  "const": "+good.closed_at"
                },
                {
                  "const": "+seller.created_at"
                },
                {
                  "const": "+seller.goods.payments.real"
                },
                {
                  "const": "+seller.goods.published_count"
                },
                {
                  "const": "+seller.reviews.average"
                },
                {
                  "const": "+seller.reviews.count"
                },
                {
                  "const": "+goods.publish_count"
                },
                {
                  "const": "+goods.payments"
                },
                {
                  "const": "+reviews.average"
                },
                {
                  "const": "+reviews.count"
                },
                {
                  "const": "+sale.created_at"
                },
                {
                  "const": "+sale.opened_at"
                },
                {
                  "const": "+sale.closed_at"
                },
                {
                  "const": "+sale.content.title"
                },
                {
                  "const": "+sale.view_count"
                }
              ]
            },
            "description": "정렬 조건"
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IHubShelfOrderGood.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "good": {
            "$ref": "#/components/schemas/IHubOrderGood.IRequest.ISearch"
          },
          "schedule_state": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "active"
              },
              {
                "const": "paused"
              }
            ]
          }
        }
      },
      "IPageIHubShelfOrderGood": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubShelfOrderGood"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubShelfOrderGood": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key.\n\n실제로는 {@link IHubOrderGood.id} 그 자체."
          },
          "good": {
            "$ref": "#/components/schemas/IHubOrderGood.IInvert",
            "title": "상품의 역 참조 정",
            "description": "상품의 역 참조 정."
          },
          "schedule_state": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "active"
              },
              {
                "const": "paused"
              }
            ],
            "title": "본 함수를 실행하는 스케쥴 리스트",
            "description": "본 함수를 실행하는 스케쥴 리스트."
          }
        },
        "required": [
          "id",
          "good",
          "schedule_state"
        ]
      },
      "IHubSeller.IJoin": {
        "type": "object",
        "properties": {},
        "description": "판매자 회원 가입 입력 정보."
      },
      "IHubOrderGoodIssueFee.ICreate": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "minimum": 0,
            "title": "수임료 금액",
            "description": "수임료 금액."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "value",
          "created_at"
        ],
        "description": "수임료 청구를 위한 입력 정보.\n\n수임료를 수락한 경우에만 값이 존재한다."
      },
      "IHubSaleInquiryAnswer.ICreate": {
        "type": "object",
        "properties": {
          "format": {
            "oneOf": [
              {
                "const": "txt"
              },
              {
                "const": "md"
              },
              {
                "const": "html"
              }
            ],
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "답변글을 작성하는 데 필요한 입력 정보."
      },
      "IHubSaleInquiryAnswer.ISnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
          },
          "format": {
            "$ref": "#/components/schemas/IBbsArticle.Format",
            "title": "Format of body",
            "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "title",
          "body",
          "files"
        ]
      },
      "IHubSale.ICreate": {
        "type": "object",
        "properties": {
          "section_code": {
            "type": "string",
            "title": "귀속 섹션의 {@link IHubSection.code}",
            "description": "귀속 섹션의 {@link IHubSection.code}."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "본 매물의 판매가 자동 개시되는 시각",
            "description": "본 매물의 판매가 자동 개시되는 시각."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "본 매물의 판매가 자동 종료되는 시각",
            "description": "본 매물의 판매가 자동 종료되는 시각."
          },
          "__approve": {
            "type": "boolean",
            "title": "자동 승인 처리 여부",
            "description": "자동 승인 처리 여부.\n\n임시 변수, 향후 없어질 것."
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleChannel.ICreate"
            },
            "minItems": 1,
            "title": "채널/카테고리 리스트",
            "description": "채널/카테고리 리스트.\n\n본 매물이 판매되는 채널과 카테고리들의 일람."
          },
          "content": {
            "$ref": "#/components/schemas/IHubSaleContent.ICreate",
            "title": "컨텐츠 정보",
            "description": "컨텐츠 정보.\n\n판매자가 매물을 등록하며 작성한 서술 정보."
          },
          "units": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IHubSaleUnit.ICreate.IReleaseUnitCreate"
                },
                {
                  "$ref": "#/components/schemas/IHubSaleUnit.ICreate.IAPIUnitCreate"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "workflow": "#/components/schemas/IHubSaleUnit.ICreate.IReleaseUnitCreate",
                  "api": "#/components/schemas/IHubSaleUnit.ICreate.IAPIUnitCreate"
                }
              }
            },
            "minItems": 1,
            "title": "유닛 리스트",
            "description": "유닛 리스트."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그값 리스트",
            "description": "검색 태그값 리스트."
          },
          "version": {
            "type": "string",
            "title": "버전명",
            "description": "버전명.\n\n{@link ISwaggerInfo.version} 과 다른 값을 설정할 수 있다.\n\n즉, 서버 스펙 (스웨거 문서) 상 버전명과, 스냅샷 상 버전명이 서로 다를 수 있음."
          },
          "version_description": {
            "type": "string",
            "title": "버전 설명",
            "description": "버전 설명."
          }
        },
        "required": [
          "section_code",
          "opened_at",
          "closed_at",
          "channels",
          "content",
          "units",
          "tags",
          "version",
          "version_description"
        ],
        "description": "매물 입력 정보."
      },
      "IHubSaleSnapshot.IUpdateVersionDescription": {
        "type": "object",
        "properties": {
          "version_description": {
            "type": "string",
            "title": "버전 설명",
            "description": "버전 설명."
          }
        },
        "required": [
          "version_description"
        ]
      },
      "IPageIHubSaleUnitParameter": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubSaleUnitParameter"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IHubSaleUnitParameter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 시간",
            "description": "레코드 생성 시간."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 수정 일시",
            "description": "레코드 수정 일시."
          },
          "key": {
            "type": "string",
            "title": "Key 값",
            "description": "Key 값."
          },
          "value": {
            "type": "string",
            "title": "해당 Key 값에 대한 Value 값",
            "description": "해당 Key 값에 대한 Value 값."
          },
          "in": {
            "oneOf": [
              {
                "const": "header"
              },
              {
                "const": "query"
              }
            ],
            "title": "파리미터 타입",
            "description": "파리미터 타입.\n\n현재 쿠키 타입은 지원 안 함."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "description": "해당 키에 대한 설명"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "key",
          "value",
          "in",
          "description"
        ],
        "description": "매물 유닛에 대한 파라미터 정보.\n\n판매자 서버로 전송될 추가 파라미터에 대한 정의."
      },
      "IHubSaleUnitParameter.ICreate": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "Key 값",
            "description": "Key 값."
          },
          "value": {
            "type": "string",
            "title": "해당 Key 값에 대한 Value 값",
            "description": "해당 Key 값에 대한 Value 값."
          },
          "in": {
            "oneOf": [
              {
                "const": "header"
              },
              {
                "const": "query"
              }
            ],
            "title": "파리미터 타입",
            "description": "파리미터 타입.\n\n현재 쿠키 타입은 지원 안 함."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "description": "해당 키에 대한 설명"
          }
        },
        "required": [
          "key",
          "value",
          "in",
          "description"
        ],
        "description": "파라미터 입력 정보."
      },
      "IHubSaleUnitParameter.IUpdate": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "title": "해당 Key 값에 대한 Value 값",
            "description": "해당 Key 값에 대한 Value 값."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "description": "해당 키에 대한 설명"
          }
        },
        "required": [
          "value",
          "description"
        ],
        "description": "파라미터 수정 정보.\n\n오직 값과 설명문만 편집 가능."
      },
      "IStudioAccount.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioAccount.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-account.code"
                },
                {
                  "const": "-account.created_at"
                },
                {
                  "const": "+account.code"
                },
                {
                  "const": "+account.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 및 검색 요청 정보."
      },
      "IStudioAccount.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "const": "member"
              },
              {
                "const": "enterprise"
              }
            ]
          },
          "code": {
            "type": "string"
          }
        }
      },
      "IPageIStudioAccount.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccount.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioAccount": {
        "type": "object",
        "properties": {
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IHubMember"
              },
              {
                "$ref": "#/components/schemas/IStudioEnterprise.IInvertFromAccount"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "member": "#/components/schemas/IHubMember",
                "enterprise": "#/components/schemas/IStudioEnterprise.IInvertFromAccount"
              }
            },
            "title": "소유자 정보",
            "description": "소유자 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "code": {
            "type": "string",
            "title": "식별자 코드",
            "description": "식별자 코드."
          },
          "created_at": {
            "type": "string",
            "title": "계정 생성 일시",
            "description": "계정 생성 일시."
          }
        },
        "required": [
          "owner",
          "id",
          "code",
          "created_at"
        ],
        "description": "계정 엔티티.\n\n`IStudioAccount` 는 스튜디오 시스템의 계정을 형상화한 엔티티이다. 계정은\n고유 식별자 코드를 가지는 하나의 주체 단위로써, {@link IStudioRepository 저장소}\n등을 소유할 수 있다. 가령 깃허브에서 특정 저장소의 주소가\nhttps://github.com/samchon/typia 라면, 이 중 \"samchon\" 이 계정의 식별자이자,\n\"typia\" 라는 저장소의 소유 주체인 것.\n\n그리고 여기서 말하는 계정이란, 그 주체가 반드시 사람을 지칭하지 않는다. 계정주가\n{@link IHubMember 회원}일 수도 있지만, {@link IStudioEnterprise 기업}일 수도 있기\n때문이다. 예를 들어 https://github.com/Microsoft/TypeScript 의 경우, 계정주가\n사람이 아닌, 기업 \"Microsoft\" 가 된다.\n\n이외에 계정은 그 소유주를 바꿀 수 있다. 그리고 소유주를 바꿀 때, 그 주체가 개인에서\n기업으로 변경되는 것 또한 가능하다. 예를 들어 개인으로 시작했던 계정과 저장소가\n흥행하여, 향후 기업으로 승격하는 경우가 그러하다."
      },
      "IStudioAccountSchedule.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioAccountSchedule.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-account.code"
                },
                {
                  "const": "-account.created_at"
                },
                {
                  "const": "+account.code"
                },
                {
                  "const": "+account.created_at"
                },
                {
                  "const": "-schedule.created_at"
                },
                {
                  "const": "-repository.code"
                },
                {
                  "const": "-repository.title"
                },
                {
                  "const": "-repository.created_at"
                },
                {
                  "const": "-release.document.title"
                },
                {
                  "const": "-release.version"
                },
                {
                  "const": "-release.created_at"
                },
                {
                  "const": "-release.opened_at"
                },
                {
                  "const": "-bucket.name"
                },
                {
                  "const": "-bucket.created_at"
                },
                {
                  "const": "-bucket.updated_at"
                },
                {
                  "const": "-workflow.summary"
                },
                {
                  "const": "-workflow.title"
                },
                {
                  "const": "+schedule.created_at"
                },
                {
                  "const": "+repository.code"
                },
                {
                  "const": "+repository.title"
                },
                {
                  "const": "+repository.created_at"
                },
                {
                  "const": "+release.document.title"
                },
                {
                  "const": "+release.version"
                },
                {
                  "const": "+release.created_at"
                },
                {
                  "const": "+release.opened_at"
                },
                {
                  "const": "+bucket.name"
                },
                {
                  "const": "+bucket.created_at"
                },
                {
                  "const": "+bucket.updated_at"
                },
                {
                  "const": "+workflow.summary"
                },
                {
                  "const": "+workflow.title"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 및 검색 요청 정보."
      },
      "IStudioAccountSchedule.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "repository": {
            "$ref": "#/components/schemas/IStudioRepository.IRequest.ISearch"
          },
          "release": {
            "$ref": "#/components/schemas/IStudioRepositoryRelease.IRequest.ISearch"
          },
          "workflow": {
            "$ref": "#/components/schemas/IStudioWorkflow.IRequest.ISearch"
          },
          "release_node_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "IStudioRepository.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/IStudioAccount.IRequest.ISearch"
          },
          "title": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IStudioRepositoryRelease.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/IStudioRepositoryReleaseDocument.IRequest.ISearch"
          },
          "version_from": {
            "type": "string"
          },
          "version_to": {
            "type": "string"
          },
          "date_from": {
            "type": "string",
            "format": "date-time"
          },
          "date_to": {
            "type": "string",
            "format": "date-time"
          },
          "channel_category_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "IStudioRepositoryReleaseDocument.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "title_or_body": {
            "type": "string"
          }
        }
      },
      "IStudioWorkflow.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "title_or_summary": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "IPageIStudioAccountSchedule.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountSchedule.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioAccountSchedule.ISummary": {
        "type": "object",
        "properties": {
          "repository": {
            "$ref": "#/components/schemas/IStudioRepository.ISummary",
            "title": "귀속 저장소",
            "description": "귀속 저장소."
          },
          "release": {
            "$ref": "#/components/schemas/IStudioRepositoryRelease.ISummary",
            "title": "귀속 커밋. 가장 최신본이다",
            "description": "귀속 커밋. 가장 최신본이다."
          },
          "workflow": {
            "$ref": "#/components/schemas/IStudioWorkflow.ISummary",
            "title": "워크플로우 문서",
            "description": "워크플로우 문서."
          },
          "purpose": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "app"
              },
              {
                "const": "agent"
              }
            ],
            "title": "앱 구분 목적",
            "description": "앱 구분 목적."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "schedule",
            "title": "Discriminator",
            "description": "Discriminator."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 수정 일시",
            "description": "레코드 수정 일시."
          },
          "intervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountScheduleInterval"
            },
            "title": "스케쥴 실행 간격",
            "description": "스케쥴 실행 간격."
          },
          "of_good": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioAccountScheduleOfGood"
              }
            ],
            "title": "내가 주문한 상품의 정보",
            "description": "내가 주문한 상품의 정보.\n\n내가 주문한 상품으로 부터 생성된 스케쥴 일 경우 `null`이 아님."
          }
        },
        "required": [
          "repository",
          "release",
          "workflow",
          "purpose",
          "id",
          "type",
          "created_at",
          "updated_at",
          "intervals",
          "of_good"
        ],
        "description": "계정 스케쥴 요약 정보."
      },
      "IStudioRepository.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "account": {
            "$ref": "#/components/schemas/IStudioAccount.ISummary",
            "title": "귀속 계정 정보",
            "description": "귀속 계정 정보."
          },
          "code": {
            "type": "string",
            "title": "저장소의 식별자 코드",
            "description": "저장소의 식별자 코드."
          },
          "disclosure": {
            "$ref": "#/components/schemas/IStudioRepository.Disclosure",
            "title": "저장소의 공개 수준",
            "description": "저장소의 공개 수준.\n\n- `public`: 모든 회원이 열람 가능한 공개 저장소.\n- `protected`: 직원들만 열람 가능한 보호 저장소.\n- `private`: 권한을 부여받은 이들만 열람 가능한 비공개 저장소."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "저장소 제목",
            "description": "저장소 제목."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그값 리스트",
            "description": "검색 태그값 리스트."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "저장소 생성 일시",
            "description": "저장소 생성 일시."
          }
        },
        "required": [
          "id",
          "account",
          "code",
          "disclosure",
          "title",
          "tags",
          "created_at"
        ],
        "description": "저장소 요약 정보."
      },
      "IStudioRepositoryRelease.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "commit": {
            "$ref": "#/components/schemas/IStudioRepositoryCommit.ISummary",
            "title": "커밋 정보",
            "description": "커밋 정보."
          },
          "document": {
            "$ref": "#/components/schemas/IStudioRepositoryReleaseDocument.ISummary",
            "title": "문서 정보",
            "description": "문서 정보."
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubChannelCategory"
            },
            "title": "분류 카테고리 리스트",
            "description": "분류 카테고리 리스트."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그 리스트",
            "description": "검색 태그 리스트."
          },
          "version": {
            "type": "string",
            "title": "버전명",
            "description": "버전명."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "릴리즈 레코드 생성 일시",
            "description": "릴리즈 레코드 생성 일시."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "배포 시작 일시",
            "description": "배포 시작 일시."
          }
        },
        "required": [
          "id",
          "commit",
          "document",
          "categories",
          "tags",
          "version",
          "created_at",
          "opened_at"
        ]
      },
      "IStudioRepositoryCommit.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "원천 커밋의 ID",
            "description": "원천 커밋의 ID.\n\n만약 아무런 기반 없는 최초 커밋시, `null` 값이 할당된다."
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "커밋을 행한 고객",
            "description": "커밋을 행한 고객."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋의 제목",
            "description": "커밋의 제목."
          },
          "latest": {
            "type": "boolean",
            "title": "가장 최신 커밋 여부",
            "description": "가장 최신 커밋 여부."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "커밋 생성 일시",
            "description": "커밋 생성 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "커밋 수정 일시",
            "description": "커밋 수정 일시."
          },
          "archived_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "커밋 기록 확정 일시",
            "description": "커밋 기록 확정 일시.\n\n커밋의 모든 변경사항을 서버에 기록함으로써, 이를 확정하고 완결짓는다.\n\n커밋을 기록한 이후로는, 일절 수정 및 삭제가 불가능하다."
          }
        },
        "required": [
          "id",
          "parent_id",
          "customer",
          "title",
          "latest",
          "created_at",
          "updated_at",
          "archived_at"
        ],
        "description": "커밋의 요약 정보."
      },
      "IStudioRepositoryReleaseDocument.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "title": {
            "type": "string",
            "title": "제목",
            "description": "제목."
          },
          "body": {
            "type": "string",
            "title": "본문 서술부",
            "description": "본문 서술부."
          }
        },
        "required": [
          "id",
          "title",
          "body"
        ],
        "description": "저장소 배포본의 요약 정보."
      },
      "IStudioAccountScheduleInterval": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "인터벌 고유 id",
            "description": "인터벌 고유 id."
          },
          "studio_account_schedule_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 스케줄러의 id",
            "description": "대상 스케줄러의 id."
          },
          "duration": {
            "type": "string",
            "format": "duration",
            "description": "duration value"
          },
          "started_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "스케쥴의 최초 실행 시작 일시",
            "description": "스케쥴의 최초 실행 시작 일시."
          },
          "paused_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "스케쥴의 일시 중단 일시",
            "description": "스케쥴의 일시 중단 일시."
          },
          "closed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "스케쥴 중단 일시",
            "description": "스케쥴 중단 일시."
          },
          "created_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "updated_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "레코드 수정 일시",
            "description": "레코드 수정 일시."
          },
          "deleted_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "레코드 삭제 일시",
            "description": "레코드 삭제 일시."
          }
        },
        "required": [
          "id",
          "studio_account_schedule_id",
          "duration",
          "started_at",
          "paused_at",
          "closed_at",
          "created_at",
          "updated_at",
          "deleted_at"
        ]
      },
      "IStudioAccountScheduleOfGood": {
        "type": "object",
        "properties": {
          "good": {
            "$ref": "#/components/schemas/IHubOrderGood.IInvert",
            "title": "주문의 역 참조 정보",
            "description": "주문의 역 참조 정보."
          },
          "unit": {
            "$ref": "#/components/schemas/IHubSaleUnit.ISummary",
            "title": "유닛의 역 참조 정보",
            "description": "유닛의 역 참조 정보."
          }
        },
        "required": [
          "good",
          "unit"
        ],
        "description": "스튜디오 계정 주문 스케쥴 정보."
      },
      "IStudioAccountSchedule": {
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "스케쥴을 생성한 고객",
            "description": "스케쥴을 생성한 고객."
          },
          "repository": {
            "$ref": "#/components/schemas/IStudioRepository.IStandalone",
            "title": "귀속 저장소",
            "description": "귀속 저장소."
          },
          "node": {
            "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.IInvert",
            "title": "귀속 릴리즈 노드",
            "description": "귀속 릴리즈 노드."
          },
          "workflow": {
            "$ref": "#/components/schemas/IStudioWorkflow",
            "title": "워크플로우 문서",
            "description": "워크플로우 문서."
          },
          "arguments": {
            "type": "array",
            "items": {},
            "title": "파라미터에 입력할 인자값 리스트",
            "description": "파라미터에 입력할 인자값 리스트."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "schedule",
            "title": "Discriminator",
            "description": "Discriminator."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 수정 일시",
            "description": "레코드 수정 일시."
          },
          "intervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountScheduleInterval"
            },
            "title": "스케쥴 실행 간격",
            "description": "스케쥴 실행 간격."
          },
          "of_good": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioAccountScheduleOfGood"
              }
            ],
            "title": "내가 주문한 상품의 정보",
            "description": "내가 주문한 상품의 정보.\n\n내가 주문한 상품으로 부터 생성된 스케쥴 일 경우 `null`이 아님."
          }
        },
        "required": [
          "customer",
          "repository",
          "node",
          "workflow",
          "arguments",
          "id",
          "type",
          "created_at",
          "updated_at",
          "intervals",
          "of_good"
        ],
        "description": "계정 단위 스케쥴 정보.\n\n`IStudioAccountSchedule` 는 {@link IStudioAccount 계정} 단위로 설정한\n스케쥴 정보를 형상화한 엔티티이다. 그리고 여기서 말하는 스케쥴이란, 일정 주기를\n기준으로, 반복 실행되는 {@link IStudioRepositoryReleaseNode 릴리즈 노드}를\n뜻한다.\n\n참고로 대상 릴리즈 노드는 그 타입이 반드시 {@link IStudioWorkflow 워크플로우}여야\n하며, 귀속 {@link IStudioRepositoryRelease 릴리즈}는 구 버전이라도 상관 없다."
      },
      "IStudioRepositoryReleaseNode.IInvert": {
        "type": "object",
        "properties": {
          "release": {
            "$ref": "#/components/schemas/IStudioRepositoryRelease.IInvert",
            "title": "배포 프로그램 정보",
            "description": "배포 프로그램 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "release_id": {
            "type": "string",
            "format": "uuid",
            "title": "부모 릴리즈의 {@link IStudioRepositoryRelease.id}",
            "description": "부모 릴리즈의 {@link IStudioRepositoryRelease.id}."
          },
          "type": {
            "const": "release",
            "title": "Discriminator of connectors",
            "description": "Discriminator of connectors."
          },
          "bucket": {
            "$ref": "#/components/schemas/IStudioRepositoryBucket.ISummary",
            "title": "대상 버킷의 참조 정보",
            "description": "대상 버킷의 참조 정보."
          },
          "accessor": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "릴리즈 대상 노드 (함수) 의 접근자",
            "description": "릴리즈 대상 노드 (함수) 의 접근자."
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.IParameter"
            },
            "title": "함수의 파라미터에 대한 타입 정보 리스트",
            "description": "함수의 파라미터에 대한 타입 정보 리스트."
          },
          "output": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IString"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.ITuple"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IOneOf"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INull"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IUnknown"
              }
            ],
            "title": "리턴 타입 정보",
            "description": "리턴 타입 정보.\n\n리턴 타입이 `void` (또는 `Promise<void>`) 인 경우에는 `null`."
          },
          "async": {
            "type": "boolean",
            "title": "비동기 함수 여부",
            "description": "비동기 함수 여부."
          },
          "purpose": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "app"
              },
              {
                "const": "agent"
              }
            ],
            "title": "릴리즈 추출 목적",
            "description": "릴리즈 추출 목적."
          },
          "summary": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "요약 설명문",
            "description": "요약 설명문."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "상세 설명문",
            "description": "상세 설명문."
          }
        },
        "required": [
          "release",
          "id",
          "release_id",
          "type",
          "bucket",
          "accessor",
          "parameters",
          "output",
          "async",
          "purpose",
          "summary",
          "description"
        ],
        "description": "배포 프로그램에 대한 역 참조 정보."
      },
      "IStudioRepositoryRelease.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "릴리즈를 행한 고객 정보",
            "description": "릴리즈를 행한 고객 정보."
          },
          "repository": {
            "$ref": "#/components/schemas/IStudioRepository.IStandalone",
            "title": "귀속 저장소 정보",
            "description": "귀속 저장소 정보."
          },
          "commit": {
            "$ref": "#/components/schemas/IStudioRepositoryCommit",
            "title": "릴리즈 대상 커밋",
            "description": "릴리즈 대상 커밋."
          },
          "components": {
            "$ref": "#/components/schemas/ISwaggerComponents",
            "title": "네임드 타입 컬렉션",
            "description": "네임드 타입 컬렉션."
          },
          "document": {
            "$ref": "#/components/schemas/IStudioRepositoryReleaseDocument",
            "title": "릴리즈에 대한 문서화",
            "description": "릴리즈에 대한 문서화."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그 리스트",
            "description": "검색 태그 리스트."
          },
          "version": {
            "type": "string",
            "title": "버전명",
            "description": "버전명."
          },
          "program_url": {
            "type": "string",
            "format": "uri",
            "title": "빌드된 프로그램의 URL",
            "description": "빌드된 프로그램의 URL."
          },
          "debug_url": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "디버그용 URL",
            "description": "디버그용 URL."
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubChannelCategory"
            },
            "title": "분류 카테고리 리스트",
            "description": "분류 카테고리 리스트."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "릴리즈 레코드 생성 일시",
            "description": "릴리즈 레코드 생성 일시."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "배포 시작 일시",
            "description": "배포 시작 일시."
          }
        },
        "required": [
          "id",
          "customer",
          "repository",
          "commit",
          "components",
          "document",
          "tags",
          "version",
          "program_url",
          "debug_url",
          "categories",
          "created_at",
          "opened_at"
        ],
        "description": "하위 노드로부터의 역 참조 정보."
      },
      "IStudioWorkflow": {
        "type": "object",
        "properties": {
          "extension": {
            "const": "workflow",
            "title": "확장자는 \"workflow\" 로 고정",
            "description": "확장자는 \"workflow\" 로 고정."
          },
          "valid": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ],
            "title": "유효성 여부",
            "description": "유효성 여부.\n\n워크플로우가 실행 가능한 지 여부를 나타낸다.\n\n최소 compile 이나 execute 함수를 실행해야 그 유효성을 확인할 수 있으며,\n그 전까지 본 속성의 값은 `null` 이다.\n\n물론, 릴리즈된 워크플로우라면, 이 값은 무조건 `true` 일 수 밖에 없다."
          },
          "icon": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "대표 아이콘의 URL",
            "description": "대표 아이콘의 URL."
          },
          "thumbnail": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "워크플로우 썸네일 이미지",
            "description": "워크플로우 썸네일 이미지.\n\n워크플로우 에디터 상 미니맵 혹은 축소 버전 이미지에 해당한다."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "워크플로우 제목",
            "description": "워크플로우 제목."
          },
          "summary": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "워크플로우 함수에 대한 요약 설명",
            "description": "워크플로우 함수에 대한 요약 설명."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "워크플로우 함수에 대한 상세 설명",
            "description": "워크플로우 함수에 대한 상세 설명."
          },
          "data": {
            "$ref": "#/components/schemas/IStudioWorkflowData",
            "title": "워크플로우 문서의 본 데이터",
            "description": "워크플로우 문서의 본 데이터."
          },
          "namespace": {
            "type": "string",
            "title": "워크플로우 네임스페이스 식별자",
            "description": "워크플로우 네임스페이스 식별자."
          },
          "meta_version": {
            "type": "string",
            "title": "메타 버전",
            "description": "메타 버전."
          },
          "connector_icons": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "title": "사용된 커넥터들의 아이콘 리스트",
            "description": "사용된 커넥터들의 아이콘 리스트."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "Snapshot ID",
            "description": "Snapshot ID."
          },
          "type": {
            "const": "workflow",
            "title": "버킷의 유형",
            "description": "버킷의 유형."
          },
          "commit_id": {
            "type": "string",
            "format": "uuid",
            "title": "최종 수정된 스냅샷의 귀속 커밋 ID",
            "description": "최종 수정된 스냅샷의 귀속 커밋 ID."
          },
          "migration": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioRepositoryBucketMigration"
              }
            ],
            "title": "Studio1.0 에서 마이그레이션 된 정보",
            "description": "Studio1.0 에서 마이그레이션 된 정보."
          },
          "path": {
            "type": "string",
            "title": "버킷의 전체 경로",
            "description": "버킷의 전체 경로."
          },
          "location": {
            "type": "string",
            "title": "버킷의 귀속 폴더 경로",
            "description": "버킷의 귀속 폴더 경로."
          },
          "name": {
            "type": "string",
            "title": "버킷의 파일 이름",
            "description": "버킷의 파일 이름."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "버킷의 최초 생성 일시",
            "description": "버킷의 최초 생성 일시.\n\n즉, 해당 버킷을 최초 생성한 커밋의 일시와 동일."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "버킷의 최종 수정 일시",
            "description": "버킷의 최종 수정 일시.\n\n즉, 해당 버킷을 최종 수정한 커밋의 일시와 동일."
          }
        },
        "required": [
          "extension",
          "valid",
          "icon",
          "thumbnail",
          "title",
          "summary",
          "description",
          "data",
          "namespace",
          "meta_version",
          "connector_icons",
          "id",
          "snapshot_id",
          "type",
          "commit_id",
          "migration",
          "path",
          "location",
          "name",
          "created_at",
          "updated_at"
        ],
        "description": "워크플로우 문서 파일.\n\n`IStudioWorkflow` 는 워크플로우 문서 파일을 형상화한 엔티티로써,\n{@link IStudioRepository 저장소}에서 관리하는 파일의 일종이기에,\n{@link IStudioRepositoryBucket 버킷}의 서브타입이기도 하다.\n\n따라서 워크플로우 문서를 수정할 때마다, 새로운 스냅샷 레코드가 발행되어 누적되며,\n이러한 편집은 {@link IStudioRepositoryCommit 커밋} 단위로 이루어진다.\n\n또한, 스튜디오의 워크플로우 문서는 비주얼 프로그래밍을 위한 컴포넌트들을\n형상화한 것이다. 따라서 워크플로우 문서는 실제로 프로그래밍 코드로 변환 가능하며\n(TypeScript), 빌드 (컴파일 + 번들링) 시 단독 실행 가능한 프로그램이 된다.\n\n물론, 귀속 저장소를 {@link IStudioRepositoryRelease 릴리즈}하여, 본 워크플로우\n문서와 함께 여타 워크플로우 문서나 커넥터 함수들을 함께 묶어 빌드하고 배포할 수도\n있다.\n\n- 워크플로우 단독 빌드: 테스트용\n- 릴리즈: 배포용"
      },
      "IStudioWorkflowData": {
        "type": "object",
        "properties": {
          "components": {
            "$ref": "#/components/schemas/ISwaggerComponents",
            "title": "네임드 타입 콜렉션",
            "description": "네임드 타입 콜렉션.\n\n현 워크플로우 문서와 동 저장소의 스크립트들에 사용되는 타입들에 대한 콜렉션.\n\n릴리즈나 스웨거 커넥터 노드에서 사용되는 타입과는 구분된다."
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowParameter"
            },
            "title": "파라미터 타입 리스트",
            "description": "파라미터 타입 리스트."
          },
          "arguments": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IAstExpression"
                }
              }
            ],
            "title": "파라미터에 기본 입력한 인자값 리스트",
            "description": "파라미터에 기본 입력한 인자값 리스트."
          },
          "output": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IString"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.ITuple"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IOneOf"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INull"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IUnknown"
              }
            ],
            "title": "리턴 타입",
            "description": "리턴 타입.\n\n`null` 값은 곧 `void` 타입의 리턴을 뜻함."
          },
          "variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowVariable"
            },
            "title": "워크플로우가 사용할 변수 리스트",
            "description": "워크플로우가 사용할 변수 리스트.\n\n각 변수는 {@link IAstWorkflowVariableIdentifier} 로 지칭할 수 있다."
          },
          "releases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryRelease"
            },
            "title": "사용된 릴리즈 리스트",
            "description": "사용된 릴리즈 리스트.\n\n릴리즈 내 각 노드들을 각각 커넥터로 사용할 수 있다."
          },
          "scripts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowScriptConnector"
            },
            "title": "사용된 스크립트 커넥터 리스트",
            "description": "사용된 스크립트 커넥터 리스트."
          },
          "swaggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowSwagger"
            },
            "title": "사용된 스웨거 리스트",
            "description": "사용된 스웨거 리스트.\n\n스웨거 내 endpoint 들을 각각 커넥터로 사용할 수 있다."
          },
          "statements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowStatement"
            },
            "title": "현행 워크플로우 내 배치된 Statement 노드 리스트",
            "description": "현행 워크플로우 내 배치된 Statement 노드 리스트.\n\n각 노드 간에는 화살표 연결 관계에 의하여 circular recursive relationship 이\n성립 가능하기에, 트리 구조가 아닌 상호간의 ID 에 대한 key-mapping 을 실시한다."
          },
          "chatbot_config": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IChatbotConfigV1"
              }
            ],
            "discriminator": {
              "propertyName": "chatbot_session_parameter_version",
              "mapping": {
                "v1": "#/components/schemas/IChatbotConfigV1"
              }
            },
            "title": "chatbot(agent)으로 사용할 때 세팅",
            "description": "chatbot(agent)으로 사용할 때 세팅."
          }
        },
        "required": [
          "components",
          "parameters",
          "arguments",
          "output",
          "releases",
          "scripts",
          "swaggers",
          "statements"
        ],
        "description": "워크플로우 문서의 본 데이터.\n\n`IStudioWorkflowMetadata` 는 워크플로우 문서의 본 데이터를 형상화한 엔티티이다.\n\n이 곳에는 워크플로우 문서에 배치한 각 커넥터 노드들과 그들의 연결 부호에 대한\n정보들이 있다. 그리고 워크플로우 문서 또한 하나의 함수로 해석되기에, 워크플로우\n그 자체에 대한 메타 정보들도 함께 포함되어있다.\n\n참고로 {@link IStudioWorkflowConnector 커넥터}가 각 노드로부터 분리되어있는\n이유는, 하나의 커넥터 함수가 여러 커넥터 노드에서 두루 두루 쓰일 수 있기 때문이다\n({@link IStudioWorkflowCallStatement}). 그리고 각 워크플로우의 각 노드가\n프로그래밍 상 AST 노드처럼 트리 구조가 아닌 상호간\n{@link IStudioWorkflowStatement.id} 를 간접 참조하는 key-mapping 구조인 이유\n또한 비슷한데, 워크플로우의 각 노드는 상호간의 화살표 연결 관계에 따라\ncircular recursive relationship 이 성립할 수 있기 때문이다."
      },
      "IStudioWorkflowParameter": {
        "type": "object",
        "properties": {
          "schema": {
            "$ref": "#/components/schemas/ISwaggerSchema",
            "title": "파라미터의 타입 정보",
            "description": "파라미터의 타입 정보."
          },
          "required": {
            "type": "boolean",
            "title": "필수 여부",
            "description": "필수 여부."
          },
          "title": {
            "type": "string",
            "title": "파라미터의 제목",
            "description": "파라미터의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "파라미터에 대한 상세 설명",
            "description": "파라미터에 대한 상세 설명."
          }
        },
        "required": [
          "schema",
          "required",
          "title",
          "description"
        ],
        "description": "워크플로우 문서의 파라미터 정보.\n\n`IStudioWorkflowParameter` 는 {@link IStudioWorkflowParameter 워크플로우 문서}의\n각 파라미터에 대한 타입 및 서술 정보를 형상화한 엔티티이다. 워크플로우 문서도 그 빌드\n결과물이 일종의 함수이기에 가능한 것.\n\n참고로 워크플로우 문서의 각 파라미터는 AST 노드 상\n{@link IAstWorkflowParameterIdentifier} 로 지칭할 수 있다."
      },
      "IAstExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IAstArrayLiteralExpression"
          },
          {
            "$ref": "#/components/schemas/IAstBinaryExpression"
          },
          {
            "$ref": "#/components/schemas/IAstCallExpression"
          },
          {
            "$ref": "#/components/schemas/IAstConditionalExpression"
          },
          {
            "$ref": "#/components/schemas/IAstElementAccessExpression"
          },
          {
            "$ref": "#/components/schemas/IAstNonNullExpression"
          },
          {
            "$ref": "#/components/schemas/IAstObjectLiteralExpression"
          },
          {
            "$ref": "#/components/schemas/IAstParenthesizedExpression"
          },
          {
            "$ref": "#/components/schemas/IAstPrefixUnaryExpression"
          },
          {
            "$ref": "#/components/schemas/IAstPostfixUnaryExpression"
          },
          {
            "$ref": "#/components/schemas/IAstPropertyAccessExpression"
          },
          {
            "$ref": "#/components/schemas/IAstSpreadElementExpression"
          },
          {
            "$ref": "#/components/schemas/IAstTemplateExpression"
          },
          {
            "$ref": "#/components/schemas/IAstIdentifier"
          },
          {
            "$ref": "#/components/schemas/IAstTrueLiteral"
          },
          {
            "$ref": "#/components/schemas/IAstFalseLiteral"
          },
          {
            "$ref": "#/components/schemas/IAstNumericLiteral"
          },
          {
            "$ref": "#/components/schemas/IAstNoSubstitutionTemplateLiteral"
          },
          {
            "$ref": "#/components/schemas/IAstStringLiteral"
          },
          {
            "$ref": "#/components/schemas/IAstNullLiteral"
          },
          {
            "$ref": "#/components/schemas/IAstArrayFilterExpression"
          },
          {
            "$ref": "#/components/schemas/IAstArrayFlatExpression"
          },
          {
            "$ref": "#/components/schemas/IAstArrayFunctionParameterIdentifier"
          },
          {
            "$ref": "#/components/schemas/IAstArrayFunctionIndexIdentifier"
          },
          {
            "$ref": "#/components/schemas/IAstArrayMapExpression"
          },
          {
            "$ref": "#/components/schemas/IAstObjectFlatExpression"
          },
          {
            "$ref": "#/components/schemas/IAstObjectEntriesExpression"
          },
          {
            "$ref": "#/components/schemas/IAstWorkflowParameterIdentifier"
          },
          {
            "$ref": "#/components/schemas/IAstWorkflowVariableIdentifier"
          },
          {
            "$ref": "#/components/schemas/IAstWorkflowCallStatementResultIdentifier"
          },
          {
            "$ref": "#/components/schemas/IAstWorkflowEnvironmentVariableIdentifier"
          },
          {
            "$ref": "#/components/schemas/IAstWorkflowLoopStatementElementIdentifier"
          },
          {
            "$ref": "#/components/schemas/IAstWorkflowLoopStatementResultIdentifier"
          },
          {
            "$ref": "#/components/schemas/IAstWorkflowSecretIdentifier"
          },
          {
            "$ref": "#/components/schemas/IAstWorkflowMetadataIdentifier"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "ArrayLiteralExpression": "#/components/schemas/IAstArrayLiteralExpression",
            "BinaryExpression": "#/components/schemas/IAstBinaryExpression",
            "CallExpression": "#/components/schemas/IAstCallExpression",
            "ConditionalExpression": "#/components/schemas/IAstConditionalExpression",
            "ElementAccessExpression": "#/components/schemas/IAstElementAccessExpression",
            "NonNullExpression": "#/components/schemas/IAstNonNullExpression",
            "ObjectLiteralExpression": "#/components/schemas/IAstObjectLiteralExpression",
            "ParenthesizedExpression": "#/components/schemas/IAstParenthesizedExpression",
            "PrefixUnaryExpression": "#/components/schemas/IAstPrefixUnaryExpression",
            "PostfixUnaryExpression": "#/components/schemas/IAstPostfixUnaryExpression",
            "PropertyAccessExpression": "#/components/schemas/IAstPropertyAccessExpression",
            "SpreadElementExpression": "#/components/schemas/IAstSpreadElementExpression",
            "TemplateExpression": "#/components/schemas/IAstTemplateExpression",
            "Identifier": "#/components/schemas/IAstIdentifier",
            "TrueLiteral": "#/components/schemas/IAstTrueLiteral",
            "FalseLiteral": "#/components/schemas/IAstFalseLiteral",
            "NumericLiteral": "#/components/schemas/IAstNumericLiteral",
            "NoSubstitutionTemplateLiteral": "#/components/schemas/IAstNoSubstitutionTemplateLiteral",
            "StringLiteral": "#/components/schemas/IAstStringLiteral",
            "NullLiteral": "#/components/schemas/IAstNullLiteral",
            "ArrayFilterExpression": "#/components/schemas/IAstArrayFilterExpression",
            "ArrayFlatExpression": "#/components/schemas/IAstArrayFlatExpression",
            "ArrayFunctionParameterIdentifier": "#/components/schemas/IAstArrayFunctionParameterIdentifier",
            "ArrayFunctionIndexIdentifier": "#/components/schemas/IAstArrayFunctionIndexIdentifier",
            "ArrayMapExpression": "#/components/schemas/IAstArrayMapExpression",
            "ObjectFlatExpression": "#/components/schemas/IAstObjectFlatExpression",
            "ObjectEntriesExpression": "#/components/schemas/IAstObjectEntriesExpression",
            "WorkflowParameterIdentifier": "#/components/schemas/IAstWorkflowParameterIdentifier",
            "WorkflowVariableIdentifier": "#/components/schemas/IAstWorkflowVariableIdentifier",
            "WorkflowCallStatementResultIdentifier": "#/components/schemas/IAstWorkflowCallStatementResultIdentifier",
            "WorkflowEnvironmentVariableIdentifier": "#/components/schemas/IAstWorkflowEnvironmentVariableIdentifier",
            "WorkflowLoopStatementElementIdentifier": "#/components/schemas/IAstWorkflowLoopStatementElementIdentifier",
            "WorkflowLoopStatementResultIdentifier": "#/components/schemas/IAstWorkflowLoopStatementResultIdentifier",
            "WorkflowSecretIdentifier": "#/components/schemas/IAstWorkflowSecretIdentifier",
            "WorkflowMetadataIdentifier": "#/components/schemas/IAstWorkflowMetadataIdentifier"
          }
        },
        "title": "AST 상 표현식 전체에 대한 유니언 타입",
        "description": "AST 상 표현식 전체에 대한 유니언 타입."
      },
      "IAstArrayLiteralExpression": {
        "type": "object",
        "properties": {
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAstExpression"
            },
            "title": "배열 내 각 원소들의 표현식 리스트",
            "description": "배열 내 각 원소들의 표현식 리스트."
          },
          "type": {
            "const": "ArrayLiteralExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "elements",
          "type"
        ],
        "description": "배열 표현식.\n\n```typescript\n[...elements]\n```"
      },
      "IAstBinaryExpression": {
        "type": "object",
        "properties": {
          "left": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "좌항 표현식",
            "description": "좌항 표현식."
          },
          "operator": {
            "$ref": "#/components/schemas/IAstBinaryExpression.Operator",
            "title": "연산자",
            "description": "연산자."
          },
          "right": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "우항 표현식",
            "description": "우항 표현식."
          },
          "type": {
            "const": "BinaryExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "left",
          "operator",
          "right",
          "type"
        ],
        "description": "이진 표현식.\n\n좌항과 연산자 및 우항으로 표현되는 식을 뜻한다.\n\n```typescript\nleft operator right\n```"
      },
      "IAstBinaryExpression.Operator": {
        "oneOf": [
          {
            "const": "+"
          },
          {
            "const": "-"
          },
          {
            "const": "*"
          },
          {
            "const": "/"
          },
          {
            "const": "%"
          },
          {
            "const": "=="
          },
          {
            "const": "==="
          },
          {
            "const": "!="
          },
          {
            "const": "!=="
          },
          {
            "const": "<"
          },
          {
            "const": "<="
          },
          {
            "const": ">"
          },
          {
            "const": ">="
          },
          {
            "const": "??"
          },
          {
            "const": "||"
          },
          {
            "const": "&&"
          },
          {
            "const": "&"
          },
          {
            "const": "|"
          },
          {
            "const": "^"
          },
          {
            "const": "<<"
          },
          {
            "const": ">>"
          },
          {
            "const": ">>>"
          },
          {
            "const": "="
          },
          {
            "const": "+="
          },
          {
            "const": "-="
          },
          {
            "const": "*="
          },
          {
            "const": "/="
          },
          {
            "const": "%="
          },
          {
            "const": "??="
          },
          {
            "const": "||="
          },
          {
            "const": "&&="
          },
          {
            "const": "&="
          },
          {
            "const": "|="
          },
          {
            "const": "^="
          },
          {
            "const": "<<="
          },
          {
            "const": ">>="
          },
          {
            "const": ">>>="
          }
        ],
        "title": "연산자의 종류",
        "description": "연산자의 종류."
      },
      "IAstCallExpression": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "함수 표현식",
            "description": "함수 표현식."
          },
          "questionDotToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "?."
              }
            ],
            "title": "Nullish coalescing 연산자 토큰",
            "description": "Nullish coalescing 연산자 토큰."
          },
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAstExpression"
            },
            "title": "인수들의 표현식 리스트",
            "description": "인수들의 표현식 리스트."
          },
          "type": {
            "const": "CallExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "expression",
          "questionDotToken",
          "arguments",
          "type"
        ],
        "description": "함수 호출 표현식.\n\n```typescript\nexpression(...arguments)\n```"
      },
      "IAstConditionalExpression": {
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/IAstExpression"
          },
          "whenTrue": {
            "$ref": "#/components/schemas/IAstExpression"
          },
          "whenFalse": {
            "$ref": "#/components/schemas/IAstExpression"
          },
          "type": {
            "const": "ConditionalExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "condition",
          "whenTrue",
          "whenFalse",
          "type"
        ],
        "description": "삼항 연산자 표현식\n\n```typescript\ncondntion ? whenTrue : whenFalse\n```"
      },
      "IAstElementAccessExpression": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "원본 객체 표현식",
            "description": "원본 객체 표현식."
          },
          "questionDotToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "?."
              }
            ],
            "title": "Nullish coalescing 연산자",
            "description": "Nullish coalescing 연산자."
          },
          "argumentExpression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "원소 접근 표현식",
            "description": "원소 접근 표현식."
          },
          "type": {
            "const": "ElementAccessExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "expression",
          "questionDotToken",
          "argumentExpression",
          "type"
        ],
        "description": "원소에 대한 멤버 접근 표현식.\n\n```typescript\nexpression[argumentExpression]\nexpression?.[argumentExpression]\n```"
      },
      "IAstNonNullExpression": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "대상 표현식",
            "description": "대상 표현식."
          },
          "type": {
            "const": "NonNullExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "expression",
          "type"
        ],
        "description": "Non-null 표현식.\n\n식별자 표현식의 뒷켠에 느낌표 (`!`) 를 붙이면, 해당 식별자는\n`null` 및 `undefined` 가 아님을 단언하는 표현식이 된다.\n\n```typescript\nconst nullable: number | null = null;\nconst nonNull: number = nullable!;\n```"
      },
      "IAstObjectLiteralExpression": {
        "type": "object",
        "properties": {
          "properties": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IAstPropertyAssignment"
                },
                {
                  "$ref": "#/components/schemas/IAstShorthandPropertyAssignment"
                },
                {
                  "$ref": "#/components/schemas/IAstSpreadAssignment"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "PropertyAssignment": "#/components/schemas/IAstPropertyAssignment",
                  "ShorthandPropertyAssignment": "#/components/schemas/IAstShorthandPropertyAssignment",
                  "SpreadAssignment": "#/components/schemas/IAstSpreadAssignment"
                }
              }
            },
            "title": "속성 표현식 리스트",
            "description": "속성 표현식 리스트."
          },
          "type": {
            "const": "ObjectLiteralExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "properties",
          "type"
        ],
        "description": "오브젝트 표현식.\n\n```typescript\nconnst value = 3;\nconst obj = {\n  someKey: \"value\", // PropertyAssignment\n  value, // ShorthandPropertyAssignment\n  ...another, // SpreadAssignment\n}\n```"
      },
      "IAstPropertyAssignment": {
        "type": "object",
        "properties": {
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IAstStringLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstNoSubstitutionTemplateLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstNumericLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstComputedPropertyName"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "StringLiteral": "#/components/schemas/IAstStringLiteral",
                "NoSubstitutionTemplateLiteral": "#/components/schemas/IAstNoSubstitutionTemplateLiteral",
                "NumericLiteral": "#/components/schemas/IAstNumericLiteral",
                "Identifier": "#/components/schemas/IAstIdentifier",
                "ComputedPropertyName": "#/components/schemas/IAstComputedPropertyName"
              }
            },
            "title": "속성명에 대한 표현식",
            "description": "속성명에 대한 표현식."
          },
          "initializer": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "부여한 초기 할당값 표현식",
            "description": "부여한 초기 할당값 표현식."
          },
          "type": {
            "const": "PropertyAssignment",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "name",
          "initializer",
          "type"
        ],
        "description": "속성 부여 (Property Assignment).\n\n왼쪽 속성명이 `name` 이고, 오른쪽에 할당한 값 `value` 가 `initializer`.\n\n```typescript\nconst obj = {\n  \"something\": value, // StringLiteral\n  `nothing`: value, // NoSubstitutionTemplateLiteral\n  [key]: value, // ComputedPropertyName\n}\n```"
      },
      "IAstStringLiteral": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "title": "글자를 형상화한 텍스트 문자열",
            "description": "글자를 형상화한 텍스트 문자열.\n\n단, 템플릿 리터럴의 경우는 {@link IAstTemplateLiteralExpression} 을 사용할 것."
          },
          "type": {
            "const": "StringLiteral",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "text",
          "type"
        ],
        "description": "String 글자."
      },
      "IAstNoSubstitutionTemplateLiteral": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "title": "텍스트 값",
            "description": "텍스트 값."
          },
          "type": {
            "const": "NoSubstitutionTemplateLiteral",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "text",
          "type"
        ],
        "description": "치환 없는 템플릿 표현식이되.\n\n`IAstNoSubstitutionTemplateLiteral` 는 템플릿 표현식이되, 단 하나의 변수 바인딩도\n없는 경우에 사용하는 구조체이다. 물론 이후에 템플릿 표현식에 변수 바인딩이 추가되는\n경우, 대상 노드는 필히 {@link IAstTemplateExpression} 으로 변경되어야 한다."
      },
      "IAstNumericLiteral": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "title": "숫자를 형상화한 텍스트",
            "description": "숫자를 형상화한 텍스트.\n\n이 값에는 다소의 특수 문자가 포함될 수 있다.\n\n단 음수를 표현하려는 경우 포함하면, 음수 부호 `-` 를 글자에 포함하면 안되며,\n이는 {@link IAstPrefixUnaryExpression} 를 씌워야 한다.\n\n- `1_000_000`\n- `0x17e5a2b`\n- `1.7e+3`"
          },
          "type": {
            "const": "NumericLiteral",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "text",
          "type"
        ],
        "description": "숫자 글자."
      },
      "IAstIdentifier": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "title": "식별자를 형상화한 텍스트",
            "description": "식별자를 형상화한 텍스트.\n\n단일 식별자 대상이어야지, 속성 접근 표현식이나 원소 접근 표현식이어서는 안 된다.\n\n단, 프로그래밍 AST 에 익숙하지 않은 개발자들을 위하여, 초기에는 허용해 줌."
          },
          "type": {
            "const": "Identifier",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "text",
          "type"
        ],
        "description": "식별자 표현식.\n\n```typescript\nexport const value: number = 0;\n\nvalue // -> (`IAstIdentifier.text` := \"value\") 인 식별자 표현식\n```\n\n참고로 대상 식별자를 형상화한 {@link IAstIdentifier.text} 가 원칙상\n{@link IAstPropertyAccessExpression 속성 접근 표현식}이나\n{@link IAstElementAccessExpression 원소 접근 표현식}을 대신해서는 안 된다.\n다시 말해, 아래 두 가지 경우는 허용되지 않는다는 의미이다.\n\n- `value.x`\n- `value[0]`\n\n다만 프로그래밍 AST 에 익숙하지 않은 개발자들을 위하여, Studio 개발 초기에는 이를 허용."
      },
      "IAstComputedPropertyName": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "가변 속성명에 대한 표현식",
            "description": "가변 속성명에 대한 표현식."
          },
          "type": {
            "const": "ComputedPropertyName",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "expression",
          "type"
        ],
        "description": "계산된 속성 이름 (가변 속성 이름).\n\n아래 코드 중 `[key]` 부분이 가변 속성, `ComputedPropertyName` 이다.\n\n```typescript\nconst value = \"something\";\nconst obj = {\n  [key]: value,\n}\n```"
      },
      "IAstShorthandPropertyAssignment": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/IAstIdentifier",
            "title": "변수명에 대한 식별자 표현식",
            "description": "변수명에 대한 식별자 표현식."
          },
          "type": {
            "const": "ShorthandPropertyAssignment",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "name",
          "type"
        ],
        "description": "단축 속성 할당.\n\n오직 변수명만을 열겨함으로써 해당 변수명을 그대로 속성명으로 사용하고,\n값 또한 동시에 할당하는 표현식.\n\n```typescript\nconst value = \"shorthand\";\nconst x = {\n  value,\n  other: \"something\";\n}\n```"
      },
      "IAstSpreadAssignment": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "Spread 할당 오브젝트에 대한 표현식",
            "description": "Spread 할당 오브젝트에 대한 표현식."
          },
          "type": {
            "const": "SpreadAssignment",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "expression",
          "type"
        ],
        "description": "Spread 속성 할당.\n\n```typescript\nconst x = { value: 1 };\nconst y = {\n  something: \"nothing\",\n  ...x,\n}\n```"
      },
      "IAstParenthesizedExpression": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "description": "괄호 내부의 표현식"
          },
          "type": {
            "const": "ParenthesizedExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "expression",
          "type"
        ],
        "description": "괄호 표현식.\n\n```typescript\n(expression)\n```"
      },
      "IAstPrefixUnaryExpression": {
        "type": "object",
        "properties": {
          "operator": {
            "$ref": "#/components/schemas/IAstPrefixUnaryExpression.Operator",
            "title": "전위 연산자의 종류",
            "description": "전위 연산자의 종류."
          },
          "operand": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "피 연산자 표현식",
            "description": "피 연산자 표현식."
          },
          "type": {
            "const": "PrefixUnaryExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "operator",
          "operand",
          "type"
        ],
        "description": "전위 연산자 표현식.\n\n```typescript\n++x;\n!y;\n~z;\n```"
      },
      "IAstPrefixUnaryExpression.Operator": {
        "oneOf": [
          {
            "const": "++"
          },
          {
            "const": "--"
          },
          {
            "const": "+"
          },
          {
            "const": "-"
          },
          {
            "const": "~"
          },
          {
            "const": "!"
          }
        ]
      },
      "IAstPostfixUnaryExpression": {
        "type": "object",
        "properties": {
          "operator": {
            "$ref": "#/components/schemas/IAstPostfixUnaryExpression.Operator",
            "title": "후위 연산자의 종류",
            "description": "후위 연산자의 종류."
          },
          "operand": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "피 연산자 표현식",
            "description": "피 연산자 표현식."
          },
          "type": {
            "const": "PostfixUnaryExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "operator",
          "operand",
          "type"
        ],
        "description": "후위 연산자 표현식.\n\n```typescript\nx++;\ny--;\n```"
      },
      "IAstPostfixUnaryExpression.Operator": {
        "oneOf": [
          {
            "const": "++"
          },
          {
            "const": "--"
          }
        ]
      },
      "IAstPropertyAccessExpression": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "원본 객체 표현식",
            "description": "원본 객체 표현식."
          },
          "questionDotToken": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "?."
              }
            ],
            "title": "Nullish coalescing 연산자",
            "description": "Nullish coalescing 연산자."
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IAstIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowCallStatementResultIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowLoopStatementResultIdentifier"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "Identifier": "#/components/schemas/IAstIdentifier",
                "WorkflowCallStatementResultIdentifier": "#/components/schemas/IAstWorkflowCallStatementResultIdentifier",
                "WorkflowLoopStatementResultIdentifier": "#/components/schemas/IAstWorkflowLoopStatementResultIdentifier"
              }
            },
            "title": "속성 식별자 표현식",
            "description": "속성 식별자 표현식.\n\n만약 사용되는 {@link name} 객체의 타입이 {@link IAstIdentifier} 가 아닌\n{@link IAstWorkflowCallStatementResultIdentifier} 나\n{@link IAstWorkflowLoopStatementResultIdentifier} 라면, 이는\n{@link expression} 아래의 상황에 해당한다.\n\n즉 {@link expression} 을 통하여 간접 참조하는 객체가,\n{@link IStudioWorkflowForEachStatement} 나\n{@link IStudioWorkflowWhileStatement} 등의 반복문을 통하여 생성된 배열\n변수인 것.\n\n```typescript\n{\n  type: \"PropertyAccessExpression\",\n  expression: {\n    type: \"ElementAccessExpression\",\n    expression: {\n      type: \"WorkflowLoopStatementResultIdentifier\",\n      loop_statement_id: \"some_for_each_statement_id\",\n    },\n    questionDotToken: null,\n    argumentExpression: {\n      type: \"NumericLiteral\",\n      text: \"0\",\n    },\n  },\n  questionDotToken: null,\n  name: {\n    type: \"WorkflowCallStatementResultIdentifier\",\n    call_statement_id: \"some_call_statement_id_placed_in_a_block_of_loop_node\",\n  },\n}\n```"
          },
          "type": {
            "const": "PropertyAccessExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "expression",
          "questionDotToken",
          "name",
          "type"
        ],
        "description": "속성에 대한 접근 표현식.\n\n```typescript\nexression.name\nexpression?.name\n{\n  expression := {\n    type := \"ElementAccessExpression\",\n    expression := IAstWorkflowLoopStatementResultIdentifier,\n    argumentExpression := NumericLiteral(0)\n  },\n  name := IAstWorkflowCallStatementResultIdentifier\n}\n```"
      },
      "IAstWorkflowCallStatementResultIdentifier": {
        "type": "object",
        "properties": {
          "call_statement_id": {
            "type": "string",
            "title": "대상 커넥터 함수 호출문 식별자",
            "description": "대상 커넥터 함수 호출문 식별자.\n\n대상 커넥터 함수 호출문의 {@link IStudioWorkflowCallStatement.id} 값을 넣어주면 된다."
          },
          "type": {
            "const": "WorkflowCallStatementResultIdentifier",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "call_statement_id",
          "type"
        ],
        "description": "워크플로우 커넥터 함수 호출문의 리턴 결과 표현식.\n\n{@link IStudioWorkflow 워크플로우 문서}에서 커넥터 함수를 호출한 경우,\n이 때의 함수 호출문은 {@link IStudioWorkflowCallStatement} 로 표현된다.\n그리고 커넥터 함수에서의 리턴값은, **모종의 변수**에 저장된다.\n\n`IAstWorkflowCallStatementResultIdentifier` 는 바로 이러한 커넥터 함수의 리턴값을\n저장한 **모종의 변수**를 식별하는 표현식이다. 즉\n`IAstWorkflowCallStatementResultIdentifier` 는 {@link IAstIdentifier} 의 일종이되,\n커넥터 함수 호출문의 리턴값을 저장한 **모종의 변수**를 위한 전용 식별자 표현식인 것.\n\n```typescript\nconst value = doSomething(); // value 에 대한 식별자 표현식\n```"
      },
      "IAstWorkflowLoopStatementResultIdentifier": {
        "type": "object",
        "properties": {
          "loop_statement_id": {
            "type": "string",
            "title": "대상 반복문의 식별자",
            "description": "대상 반복문의 식별자.\n\n대상 반복문의 {@link IStudioWorkflowForEachStatement.id} 나\n{@link IStudioWorkflowWhileStatement} 값을 넣어주면 된다."
          },
          "type": {
            "const": "WorkflowLoopStatementResultIdentifier",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "loop_statement_id",
          "type"
        ],
        "description": "워크플로우 Loop 문의 리턴값에 대한 식별자 표현식.\n\n{@link IStudioWorkflow 워크플로우 문서}에서 {@link IStudioWorkflowForEachStatement}\n이나 {@link IStudioWorkflowWhileStatement} 등의 반복문이 사용된 경우, 해당 반복문\n블록 내에서 {@link IStudioWorkflowCallStatement 커넥터 함수 호출} 등으로\n인하여 생성된 {@link IAstWorkflowCallStatementResultIdentifier 모든 지역 변수}들은,\n반복문 블록 시작 전에 선언된 배열에 삽입된다.\n\n> 단, 반복문 내에서 {@link IStudioWorkflowBreakStatement break} 나\n> {@link IStudioWorkflowContinueStatement continue} 문 등이 쓰인 경우라면, 지역\n> 변수들은 배열에 삽입되지 않는다.\n\n`IAstWorkflowLoopStatementResultIdentifier` 는 바로 이러한 반복문에서 생성된\n지역 변수들을 담아둔 배열을 식별하는 표현식이다.\n즉 `IAstWorkflowLoopStatementResultIdentifier` 는 {@link IAstIdentifier} 의\n일종이되, 반복문 결과물 배열만을 위한 전용 식별자 표현식인 것.\n\n물론 반복문이 이중 삼중으로 쓰인 경우에도,\n`IAstWorkflowLoopStatementResultIdentifier` 가 지칭하는 배열 변수 또한\n그보다 상위 루프문의 배열에 삽입된다.\n\n만약 위 내용이 잘 이해되지 않는다면, 아래 예제 코드를 살펴보자. 아래 예제 코드의\n`pointers` 변수가 바로 본 `IAstWorkflowLoopStatementResultIdentifier` 가 지칭하는\n대상인 것.\n\n```typescript\ninterface Pointer {\n  x: number;\n  y: number;\n  z: number;\n}\nconst pointers: Pointer[] = [];\n\nfor (let i: number = 0; i < 10; ++i) {\n  // For loop 내에서 3 개의 커넥터 함수를 호출\n  const x: number = computeX(i);\n  const y: number = computeY(i);\n  const z: number = computeZ(i);\n\n  // continue 나 break 노드 존재시 해당 없음\n  if (x === y && y === z) continue;\n  else if (x < 0) break;\n\n  // For loop block 이 끝나면서,\n  // 생성된 지역변수들을 모두 배열에 담는다\n  pointers.push({ x, y, z });\n}\n\n// 그리고 이를 For loop 바깥에서 활용 가능\nconst emended: IPointer[] = emendPointers(pointers);\n```"
      },
      "IAstSpreadElementExpression": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "Spread 대상 객체에 대한 표현식",
            "description": "Spread 대상 객체에 대한 표현식."
          },
          "type": {
            "const": "SpreadElementExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "expression",
          "type"
        ],
        "description": "Spreada element (`...`) 표현식.\n\n```typescript\n...expression\n```"
      },
      "IAstTemplateExpression": {
        "type": "object",
        "properties": {
          "head": {
            "$ref": "#/components/schemas/IAstTemplateHead",
            "title": "템플릿 문자열의 첫 부분",
            "description": "템플릿 문자열의 첫 부분."
          },
          "spans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAstTemplateSpan"
            },
            "title": "이후 템플릿 대상 식별자와 문자들의 페어 리스트",
            "description": "이후 템플릿 대상 식별자와 문자들의 페어 리스트."
          },
          "type": {
            "const": "TemplateExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "head",
          "spans",
          "type"
        ],
        "description": "템플릿 문자열 표현식.\n\n```typescript\n{\n  text: \"Hello, ${customer}! Welcome to ${store} site!\",\n  head: `Hello, `\n  spans: [\n    { expression: customer, text: `! Welcome to` },\n    { expression: store, text: ` site!` },\n  ],\n}\n```"
      },
      "IAstTemplateHead": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "title": "가장 처음의 문자열 부문",
            "description": "가장 처음의 문자열 부문.\n\n만일 첫 글자부터 바인딩이 시작된다면, 빈 문자열 `\"\"` 로 둘 것."
          },
          "type": {
            "const": "TemplateHead",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "text",
          "type"
        ],
        "description": "템플릿 문자열 표현식의 헤더부.\n\n```typescript\n`나의 이름은 ${mname} 이다.`\n\n// head => \"나의 이름은 \"\n```"
      },
      "IAstTemplateSpan": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "바인딩 표현식",
            "description": "바인딩 표현식."
          },
          "text": {
            "type": "string",
            "title": "이후의 텍스트 문자열 부문",
            "description": "이후의 텍스트 문자열 부문."
          },
          "type": {
            "const": "TemplateSpan",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "expression",
          "text",
          "type"
        ],
        "description": "템플릿 문자열을 구성하는 바인딩 포현식과 텍스트의 페어.\n\n```typescript\n`${expression} text`\n```"
      },
      "IAstTrueLiteral": {
        "type": "object",
        "properties": {
          "type": {
            "const": "TrueLiteral",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "type"
        ],
        "description": "`true` 글자."
      },
      "IAstFalseLiteral": {
        "type": "object",
        "properties": {
          "type": {
            "const": "FalseLiteral",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "type"
        ],
        "description": "`false` 글자."
      },
      "IAstNullLiteral": {
        "type": "object",
        "properties": {
          "type": {
            "const": "NullLiteral",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "type"
        ],
        "description": "`null` 글자."
      },
      "IAstArrayFilterExpression": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "현행 `Array.filter()` 표현식의 식별자 ID",
            "description": "현행 `Array.filter()` 표현식의 식별자 ID."
          },
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "대상 배열의 표현식",
            "description": "대상 배열의 표현식.\n\n`Array.filter()` 함수를 적용할 대상 배열의 표현식."
          },
          "condition": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "필터 조건식",
            "description": "필터 조건식.\n\n`Array.filter()` 함수 내에서의 변환 표현식.\n\n```typescript\nexpression.filter(\n  // this is the transformer\n  (value, i) =>\n    i <= 5 || value > 10,\n);\n```"
          },
          "type": {
            "const": "ArrayFilterExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "id",
          "expression",
          "condition",
          "type"
        ],
        "description": "`Array.filter()` 함수 표현식.\n\n`IAstArrayFilterExpression` 은 원본 배열로부터 특정 조건식을 만족하는 원소들만을\n추려서 새로운 배열을 만들어주는 `Array.filter()` 함수를 형상화한 인터페이스이다.\n\n각각 {@link expression} 과 {@link condition} 는 대상 배열 및 조건식을 나타내며,\n{@link id} 는 `Array.filter()` 이 사용하게 될 콜백 함수의 개별 (파라미터) 원소 및\n인덱스 번호를 식별하는데 사용되는 데 쓰인다. 구체적으로는 콜백 함수의 파라미터\n`Array.filter((element, index) => ...)` 에서 개별 원소를 지칭하는\n{@link IAstArrayFunctionParameterIdentifier.expression_id} 및 인덱스 번호를\n형상화한 {@link IAstArrayFunctionIndexIdentifier.expression_id} 를 위하여 존재한다.\n\n아래는 `IAstArrayFilterExpression` 의 활용 예시.\n\n### 코드 예시\n```typescript\nconst array: number[] = [...];\narray.filter((value, index) => index <= 5 || value > 10);\n```\n\n### 표현식\n```typescript\n{\n  id: \"some_filter_expression_id\",\n  type: \"ArrayFilterExpression\",\n  expression: {\n    type: \"Identifier\",\n    text: \"array\",\n  },\n  condition: {\n    type: \"BinaryExpression\",\n    left: {\n      type: \"BinaryExpression\",\n      left: {\n        type: \"Identifier\",\n        text: \"value\",\n      },\n      operator: \"<=\",\n      right: {\n        type: \"NumericLiteral\",\n        text: \"5\",\n      },\n    },\n    operator: \"&&\",\n    right: {\n      type: \"BinaryExpression\",\n      left: {\n        type: \"Identifier\",\n        text: \"value\",\n      },\n      operator: \">\",\n      right: {\n        type: \"NumericLiteral\",\n        text: \"10\",\n      },\n    },\n  },\n}\n```"
      },
      "IAstArrayFlatExpression": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "병합할 대상 배열들에 대한 표현식들",
            "description": "병합할 대상 배열들에 대한 표현식들."
          },
          "type": {
            "const": "ArrayFlatExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "expression",
          "type"
        ],
        "description": "Array 직렬화 표현식.\n\n`IAstArrayFlatExpression` 은 `Array.flat()` 함수를 형상화한 인터페이스로써,\n다차원의 배열을 평탄화, 내부 원소들을 이어붙여 한 차원 줄인 배열을 만들어주는\n개념이다.\n\n```typescript\nconst x: T[][] = [[...], [...], [...]];\nconst y: T[] = x.flat();\n```"
      },
      "IAstArrayFunctionParameterIdentifier": {
        "type": "object",
        "properties": {
          "expression_id": {
            "type": "string",
            "title": "대상 {@link IAstArrayMapExpression 맵 표현식} 등의 식별자",
            "description": "대상 {@link IAstArrayMapExpression 맵 표현식} 등의 식별자."
          },
          "index": {
            "const": 0,
            "title": "파라미터의 순서",
            "description": "파라미터의 순서.\n\n사용된 배열 변환 함수가 `Array.reduce((x, y, i))` 등일 때를 위한 속성.\n\n현재는 오직 {@link IAstArrayMapExpression} 만 있으니,\n0 으로 그 값을 고정하여 사용할 것."
          },
          "type": {
            "const": "ArrayFunctionParameterIdentifier",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "expression_id",
          "index",
          "type"
        ],
        "description": "`Array.map()` 함수의 개별 원소의 식별자.\n\n`ArrayFunctionParameterIdentifier` 는 배열 변환 함수 표현식에서, 콜백 함수의\n파라미터를 식별하는데 사용되는 인터페이스이다.\n\n가령 사용된 배열 변환 함수 표현식이 {@link IAstArrayMapExpression} 이라면,\n이 때 `ArrayFunctionParameterIdentifier` 는 `Array.map((value) => ({ ... }))`\n에서 `value` 를 식별하는 데 사용되며, {@link IAstArrayMapExpression.id} 값이\n{@link IAstArrayFunctionParameterIdentifier.expression_id} 와 일치해야 한다.\n\n아래는 `IAstArrayFunctionParameterIdentifier` 와 {@link IAstArrayMapExpression} 의\n활용 예시.\n\n### 코드 예시\n```typescript\nconst array: number[] = [];\narray.map((value, index) => {\n  return {\n    id: value + index,\n    age: 20,\n  };\n});\n```\n\n### 표현식\n```typescript\n{\n  type: \"ArrayMapExpression\",\n  id: \"some_map_expression_id\",\n  expression: {\n    type: \"Identifier\",\n    text: \"array\",\n  },\n  transformer: {\n    type: \"ObjectLiteralExpression\",\n    properties: [\n      {\n        type: \"PropertyAssignment\",\n        name: {\n          type: \"Identifier\",\n          text: \"id\",\n        },\n        initializer: {\n          type: \"BinaryExpression\",\n          left: {\n            type: \"ArrayFunctionParameterIdentifier\",\n            expression_id: \"some_map_expression_id\",\n            index: 0,\n          },\n          operator: \"+\",\n          right: {\n            type: \"ArrayFunctionIndexIdentifier\",\n            expression_id: \"some_map_expression_id\",\n          },\n        },\n      },\n      {\n        type: \"PropertyAssignment\",\n        name: {\n          type: \"Identifier\",\n          text: \"age\",\n        },\n        initializer: {\n          type: \"NumericLiteral\",\n          text: \"20\",\n        },\n      },\n    ],\n  },\n}\n```"
      },
      "IAstArrayFunctionIndexIdentifier": {
        "type": "object",
        "properties": {
          "expression_id": {
            "type": "string",
            "title": "대상 {@link IAstArrayMapExpression 맵 표현식} 등의 식별자",
            "description": "대상 {@link IAstArrayMapExpression 맵 표현식} 등의 식별자."
          },
          "type": {
            "const": "ArrayFunctionIndexIdentifier",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "expression_id",
          "type"
        ],
        "description": "`Array.map()` 함수 내 인덱스 번호 식별자.\n\n`ArrayFunctionIndexIdentifier` 는 배열 변환 함수 표현식에서, 콜백 함수의\n인덱스 번호를 식별하는데 사용되는 인터페이스이다.\n\n가령 사용된 배열 변환 함수 표현식이 {@link IAstArrayMapExpression} 이라면,\n이 때 `ArrayFunctionIndexIdentifier` 는 `Array.map((_, index) => ({ ... }))`\n에서 `index` 를 식별하는 데 사용되며, {@link IAstArrayMapExpression.id} 값이\n{@link IAstArrayFunctionIndexIdentifier.expression_id} 와 일치해야 한다.\n\n아래는 `IAstArrayFunctionIndexIdentifier` 와 {@link IAstArrayMapExpression} 의\n활용 예시.\n\n### 코드 예시\n```typescript\nconst array: number[] = [...];\narray.map((value) => {\n  return {\n    id: value + index,\n    age: 20,\n  };\n});\n```\n\n### 표현식\n```typescript\n{\n  type: \"ArrayMapExpression\",\n  id: \"some_map_expression_id\",\n  expression: {\n    type: \"Identifier\",\n    text: \"array\",\n  },\n  transformer: {\n    type: \"ObjectLiteralExpression\",\n    properties: [\n      {\n        type: \"PropertyAssignment\",\n        name: {\n          type: \"Identifier\",\n          text: \"id\",\n        },\n        initializer: {\n          type: \"BinaryExpression\",\n          left: {\n            type: \"ArrayFunctionParameterIdentifier\",\n            expression_id: \"some_map_expression_id\",\n            index: 0,\n          },\n          operator: \"+\",\n          right: {\n            type: \"ArrayFunctionIndexIdentifier\",\n            expression_id: \"some_map_expression_id\",\n          },\n        },\n      },\n      {\n        type: \"PropertyAssignment\",\n        name: {\n          type: \"Identifier\",\n          text: \"age\",\n        },\n        initializer: {\n          type: \"NumericLiteral\",\n          text: \"20\",\n        },\n      },\n    ],\n  },\n}\n```"
      },
      "IAstArrayMapExpression": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "현행 `Array.map()` 표현식의 식별자 ID",
            "description": "현행 `Array.map()` 표현식의 식별자 ID."
          },
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "대상 배열의 표현식",
            "description": "대상 배열의 표현식.\n\n`Array.map()` 함수를 적용할 대상 배열의 표현식."
          },
          "transformer": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "변환식",
            "description": "변환식.\n\n`Array.map()` 함수 내에서의 변환 표현식.\n\n```typescript\nexpression.map(\n  (value) => ({ // this is the transformer\n    id: value.id + 1,\n    age: 20\n  }),\n);\n```"
          },
          "type": {
            "const": "ArrayMapExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "id",
          "expression",
          "transformer",
          "type"
        ],
        "description": "`Array.map()` 함수 표현식.\n\n`IAstArrayMapExpression` 은 원본 배열을 또다른 타입의 배열로 변환해주는\n`Array.map()` 함수를 형상화한 인터페이스이다.\n\n각각 {@link expression} 과 {@link transformer} 는 대상 배열 및 변환식을 나타내며,\n{@link id} 는 `Array.map()` 이 사용하게 될 콜백 함수의 개별 (파라미터) 원소 및\n인덱스 번호를 식별하는데 사용되는 데 쓰인다. 구체적으로는 콜백 함수의 파라미터\n`Array.map((element, index) => ...)` 에서 개별 원소를 지칭하는\n{@link IAstArrayFunctionParameterIdentifier.expression_id} 및 인덱스 번호를\n형상화한 {@link IAstArrayFunctionIndexIdentifier.expression_id} 를 위하여 존재한다.\n\n아래는 `IAstArrayMapExpression` 의 활용 예시.\n\n### 코드 예시\n```typescript\nconst array: number[] = [...];\narray.map((value, index) => {\n  return {\n    id: value + index,\n    age: 20,\n  };\n});\n```\n\n### 표현식\n```typescript\n{\n  type: \"ArrayMapExpression\",\n  id: \"some_map_expression_id\",\n  expression: {\n    type: \"Identifier\",\n    text: \"array\",\n  },\n  transformer: {\n    type: \"ObjectLiteralExpression\",\n    properties: [\n      {\n        type: \"PropertyAssignment\",\n        name: {\n          type: \"Identifier\",\n          text: \"id\",\n        },\n        initializer: {\n          type: \"BinaryExpression\",\n          left: {\n            type: \"ArrayFunctionParameterIdentifier\",\n            expression_id: \"some_map_expression_id\",\n            index: 0,\n          },\n          operator: \"+\",\n          right: {\n            type: \"ArrayFunctionIndexIdentifier\",\n            expression_id: \"some_map_expression_id\",\n          },\n        },\n      },\n      {\n        type: \"PropertyAssignment\",\n        name: {\n          type: \"Identifier\",\n          text: \"age\",\n        },\n        initializer: {\n          type: \"NumericLiteral\",\n          text: \"20\",\n        },\n      },\n    ],\n  },\n}\n```"
      },
      "IAstObjectFlatExpression": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "병합할 대상 객체들에 대한 표현식들",
            "description": "병합할 대상 객체들에 대한 표현식들."
          },
          "type": {
            "const": "ObjectFlatExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "expression",
          "type"
        ],
        "description": "객체 병합 표현식.\n\n`IAstObjectFlatExpression` 은 배열에 담긴 오브젝트들을, 하나의 오브젝트로\n병합해주는 개념을 형상화한 인터페이스이다.\n\n```typescript\nconst objects: Record<string, T>[] = [\n  { ... },\n  { ... },\n  { ... }\n];\n-> Object.assign({}, ...objects)\n```"
      },
      "IAstObjectEntriesExpression": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "대상 오브젝트 표현식",
            "description": "대상 오브젝트 표현식."
          },
          "type": {
            "const": "ObjectEntriesExpression",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "expression",
          "type"
        ],
        "description": "`Object.entries()` 표현식.\n\n오브젝트의 모든 키 밸류 값을 배열로 반환하는 표현식.\n\n단, JS 고유의 `Object.entries()` 와는 다르게, 키 밸류의 튜플 타입이 아닌,\n아래와 같이 오브젝트 타입으로 리턴된다.\n\n```typescript\nObject.entries(obj).map(([key, value]) => ({ key, value }))\n```"
      },
      "IAstWorkflowParameterIdentifier": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "title": "대상 파라미터의 번호",
            "description": "대상 파라미터의 번호.\n\n[0 ~ N) 범위의 자연수 값이다."
          },
          "type": {
            "const": "WorkflowParameterIdentifier",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "index",
          "type"
        ],
        "description": "워크플로우 파라미터 식별자 표현식.\n\n{@link IStudioWorkflow 워크플로우 문서}도 개념상 하나의 함수로 표현되며, 그에 따라\n{@link IStudioWorkflowParameter 자체 파라미터}를 가질 수 있다. 그리고\n`IAstWorkflowParameterIdentifier` 는 워크플로우 문서 내에 배치된 노드 중, 귀속\n워크플로우 문서의 파라미터를 식별하는 표현식이다.\n\n즉 `IAstWorkflowParameterIdentifier` 는 {@link IAstIdentifier} 의 일종이되,\n워크플로우 파라미터만을 위한 전용 식별자 표현식인 것.\n\n```typescript\nexport namespace Workflow {\n  export function main(p0: number, p1: number) {\n    p0; // { type: \"WorkflowParameterIdentifier\", index: 0 }\n    p1; // { type: \"WorkflowParameterIdentifier\", index: 1 }\n  }\n}\n```"
      },
      "IAstWorkflowVariableIdentifier": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "title": "대상 변수명",
            "description": "대상 변수명.\n\n워크플로우 데이터 상 {@link IStudioWorkflowVariable.name} 에 해당."
          },
          "type": {
            "const": "WorkflowVariableIdentifier",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "text",
          "type"
        ],
        "description": "워크플로우 변수 식별자 표현식.\n\n{@link IStudioWorkflow 워크플로우}에는 사용자 정의 변수\n{@link IStudioWorkflowVariable} 을 선언할 수 있다.\n`IAstWorkflowVariableIdentifier` 는 이러한 사용자 정의 변수에 대한 식별자.\n\n따라서, {@link text} 는 {@link IStudioWorkflowData.variables} 내 선언된\n{@link IStudioWorkflowVariable.name} 값과 일치해야 한다."
      },
      "IAstWorkflowEnvironmentVariableIdentifier": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "title": "대상 전역 변수의 {@link IStudioAccountSecret.key 키 값}",
            "description": "대상 전역 변수의 {@link IStudioAccountSecret.key 키 값}."
          },
          "type": {
            "const": "WorkflowEnvironmentVariableIdentifier",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "text",
          "type"
        ],
        "description": "환경 변수 식별자 표현식.\n\n`WorkflowEnvironmentVariableIdentifier` 는 스튜디오 시스템에서 사용되는\n환경 변수를 식별하는 표현식이다."
      },
      "IAstWorkflowLoopStatementElementIdentifier": {
        "type": "object",
        "properties": {
          "loop_statement_id": {
            "type": "string",
            "title": "대상 반복문의 식별자",
            "description": "대상 반복문의 식별자.\n\n대상 반복문의 {@link IStudioWorkflowForEachStatement.id} 값을 넣어주면 된다."
          },
          "type": {
            "const": "WorkflowLoopStatementElementIdentifier",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "loop_statement_id",
          "type"
        ],
        "description": "워크플로우 반복문의 개별 원소에 대한 식별자 표현식.\n\n`IAstWorkflowLoopStatementElementIdentifier` 는\n{@link IStudioWorkflow 워크플로우 문서}에서 사용된 반복문\n{@link IStudioWorkflowForEachStatement} 에서의 개별 원소를 식별하는 표현식이다.\n\n즉 `IAstWorkflowLoopStatementElementIdentifier` 는 {@link IAstIdentifier} 의\n일종이되, 반복문의 개별 원소만을 위한 전용 식별자 표현식인 것.\n\n아래 코드를 보면 그 의미가 쉬이 이해될 듯.\n\n```typescript\nfor (const elem of array) {\n  elem // 변수 elem 을 지칭하는 식별자 표현식\n}\n```"
      },
      "IAstWorkflowSecretIdentifier": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "title": "대상 전역 변수의 {@link IStudioAccountSecret.key 키 값}",
            "description": "대상 전역 변수의 {@link IStudioAccountSecret.key 키 값}."
          },
          "index": {
            "type": "integer",
            "title": "대상 전역 변수의 인덱스",
            "description": "대상 전역 변수의 인덱스.\n\n만일 대상 전역 변수 세트의 값이 복수개일 경우, 이 속성을 통하여\n특정 값을 선택할 수 있다."
          },
          "type": {
            "const": "WorkflowSecretIdentifier",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "text",
          "type"
        ],
        "description": "시크릿 변수 식별자 표현식.\n\n`WorkflowSecretVariableIdentifier` 는 {@link IStudioAccount 스튜디오 계정}에\n설정한 {@link IStudioAccountSecret 시크릿 변수 세트}를 식별하는 표현식으로써,\n{@link IStudioAccountSecret.key} 값을 {@link text} 에 설정하여 사용한다."
      },
      "IAstWorkflowMetadataIdentifier": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "title": "워크플로우 메타데이터 식별자의 이름",
            "description": "워크플로우 메타데이터 식별자의 이름."
          },
          "type": {
            "const": "WorkflowMetadataIdentifier",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\nDiscriminated Union 타입의 식별자 역할."
          }
        },
        "required": [
          "text",
          "type"
        ],
        "description": "`WorkflowMetadataIdentifier` 는 스튜디오 시스템에서\n워크플로우를 실행하는데 필요한 동적인 메타데이터를 식별하는 표현식이다."
      },
      "IStudioWorkflowVariable": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "변수의 이름",
            "description": "변수의 이름."
          },
          "schema": {
            "$ref": "#/components/schemas/ISwaggerSchema",
            "title": "변수의 타입 정보",
            "description": "변수의 타입 정보."
          }
        },
        "required": [
          "name",
          "schema"
        ],
        "description": "워크플로우 문서에 선언한 변수.\n\n참고로 워크플로우 문서의 각 별도 선언 변수는 AST 노드 상\n{@link IAstWorkflowVariableIdentifier} 로 지칭할 수 있다."
      },
      "IStudioRepositoryRelease": {
        "type": "object",
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryReleaseNode"
            },
            "minItems": 1,
            "title": "배포본을 구성하는 개별 노드 (함수) 리스트",
            "description": "배포본을 구성하는 개별 노드 (함수) 리스트."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "릴리즈를 행한 고객 정보",
            "description": "릴리즈를 행한 고객 정보."
          },
          "repository": {
            "$ref": "#/components/schemas/IStudioRepository.IStandalone",
            "title": "귀속 저장소 정보",
            "description": "귀속 저장소 정보."
          },
          "commit": {
            "$ref": "#/components/schemas/IStudioRepositoryCommit",
            "title": "릴리즈 대상 커밋",
            "description": "릴리즈 대상 커밋."
          },
          "components": {
            "$ref": "#/components/schemas/ISwaggerComponents",
            "title": "네임드 타입 컬렉션",
            "description": "네임드 타입 컬렉션."
          },
          "document": {
            "$ref": "#/components/schemas/IStudioRepositoryReleaseDocument",
            "title": "릴리즈에 대한 문서화",
            "description": "릴리즈에 대한 문서화."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그 리스트",
            "description": "검색 태그 리스트."
          },
          "version": {
            "type": "string",
            "title": "버전명",
            "description": "버전명."
          },
          "program_url": {
            "type": "string",
            "format": "uri",
            "title": "빌드된 프로그램의 URL",
            "description": "빌드된 프로그램의 URL."
          },
          "debug_url": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "디버그용 URL",
            "description": "디버그용 URL."
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHubChannelCategory"
            },
            "title": "분류 카테고리 리스트",
            "description": "분류 카테고리 리스트."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "릴리즈 레코드 생성 일시",
            "description": "릴리즈 레코드 생성 일시."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "배포 시작 일시",
            "description": "배포 시작 일시."
          }
        },
        "required": [
          "nodes",
          "id",
          "customer",
          "repository",
          "commit",
          "components",
          "document",
          "tags",
          "version",
          "program_url",
          "debug_url",
          "categories",
          "created_at",
          "opened_at"
        ],
        "description": "저장소로부터의 배포 프로그램 정보.\n\n`IStudioRepositoryRelease` 는 {@link IHubRepository 저장소}에서 특징\n{@link IHubRepositoryCommit 커밋}을 대상으로 배포한 프로그램을 형상화한\n엔티티이다.\n\n따라서 본 `IStudioRepositoryRelease` 엔티티에는 저장소를 구성하는 각\n{@link IStudioRepositoryFile 파일} 및 {@link IStudioWorkflow 워크플로우}\n버킷들로부터, {@link hub_customers 고객}이 선택한 요소 (함수) 들을 기점으로하여\n{@link IStudioRepositoryReleaseNode} 레코드들이 구성된다. 그리고 이들에 대한\n메타데이터 (타입) 정보와 함께, 컴파일 및 번들링된 결과물이 저장된다.\n\n이들을 널리 배포하는 것이 바로 릴리즈인 것."
      },
      "IStudioWorkflowScriptConnector": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "script",
            "title": "Discriminant type",
            "description": "Discriminant type."
          },
          "path": {
            "type": "string",
            "title": "대상 버킷의 경로",
            "description": "대상 버킷의 경로.\n\n참조 대상 버킷을 현행 워크플로우 기준의 상대 경로로 표현함."
          },
          "accessor": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IAstElementAccessExpression"
              },
              {
                "$ref": "#/components/schemas/IAstPropertyAccessExpression"
              },
              {
                "$ref": "#/components/schemas/IAstIdentifier"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "ElementAccessExpression": "#/components/schemas/IAstElementAccessExpression",
                "PropertyAccessExpression": "#/components/schemas/IAstPropertyAccessExpression",
                "Identifier": "#/components/schemas/IAstIdentifier"
              }
            },
            "title": "함수에 대한 접근자",
            "description": "함수에 대한 접근자."
          },
          "kind": {
            "oneOf": [
              {
                "const": "function"
              },
              {
                "const": "workflow"
              }
            ],
            "title": "내장 커넥터 함수의 종료",
            "description": "내장 커넥터 함수의 종료.\n\n- workflow: 또다른 워크플로우를 함수처럼 경우\n- function: 유저가 직접 작성한 단독 함수"
          },
          "async": {
            "type": "boolean",
            "title": "비동기 함수 여부",
            "description": "비동기 함수 여부."
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowParameter"
            },
            "title": "파라미터 리스트",
            "description": "파라미터 리스트."
          },
          "output": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IString"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.ITuple"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IOneOf"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INull"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IUnknown"
              }
            ],
            "title": "함수의  리턴 타입",
            "description": "함수의  리턴 타입."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "함수에 대한 상세 설명",
            "description": "함수에 대한 상세 설명."
          },
          "summary": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "함수에 대한 요약 설명",
            "description": "함수에 대한 요약 설명."
          }
        },
        "required": [
          "id",
          "type",
          "path",
          "accessor",
          "kind",
          "async",
          "parameters",
          "output",
          "description",
          "summary"
        ],
        "description": "워크플로우상 스크립트 함수의 커넥터 정보.\n\n`IStudioWorkflowScriptConnector` 는 {@link IStudioWorkflow 워크플로우}에 배치한\n스크립트 함수의 커넥터를 형상화한 엔티티이다. 그리고 여기서 말하는 \"스크립트 함수\" 란,\n워크플로우 문서에서 {@link IStudioWorkflowCallExpression} 노드로 호출할 수 있는 동\n{@link IStudioRepository 저장소}의 어딘가 {@link IStudioRepositoryFile 파일}에 쓰인\n타입스크립트 함수를 뜻한다.\n\n만일 호출하고자 하는 함수가 동 저장소에 타입스크립트로 작성된 것이 아닌, 외부 저장소의\n{@link IStudioWorkflowRelease 릴리즈} 본에 존재한다면\n{@link IStudioWorkflowScriptConnector} 타입을 대신 사용하도록 한다. 그리고 만일\n호출하고자 하는 함수가 외부 Rest API 라면, {@link IStudioWorkflowSwaggerConnector}\n타입을 대신 사용한다."
      },
      "IStudioWorkflowSwagger": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IStudioWorkflowSwagger.ILinkSwagger"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflowSwagger.IManualSwagger"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflowSwagger.IGoodSwagger"
          }
        ],
        "discriminator": {
          "propertyName": "source",
          "mapping": {
            "link": "#/components/schemas/IStudioWorkflowSwagger.ILinkSwagger",
            "manual": "#/components/schemas/IStudioWorkflowSwagger.IManualSwagger",
            "good": "#/components/schemas/IStudioWorkflowSwagger.IGoodSwagger"
          }
        },
        "title": "워크플로우에서 사용하는 스웨거 정보",
        "description": "워크플로우에서 사용하는 스웨거 정보.\n\n`IStudioWorkflowSwagger` 는 {@link IStudioWorkflow 워크플로우 문서}에서 사용되는\n{@link ISwagger 스웨거 정보} 및, 스웨거 문서의 각 {@link ISwaggerOperation endpoint}\n에 대한 {@link IStudioWorkflowSwaggerConnector 커넥터 정보}들을 형상화한 엔티티이다."
      },
      "IStudioWorkflowSwagger.ILinkSwagger": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key.\n\n스웨거 문서의 출처가 주문 상품인 경우, {@link IHubSaleUnit.id} 가 된다.\n\n반대로 스웨거 문서의 출처가 직접 입력이라면, 사용자가 직접 입력한 ID 값 또는,\n대상 서버의 url 과 버전을 조합하여 구성한 값이 된다."
          },
          "source": {
            "const": "link",
            "title": "스웨거 문서의 출처",
            "description": "스웨거 문서의 출처."
          },
          "data": {
            "$ref": "#/components/schemas/ISwagger",
            "title": "(보정된) 스웨거 문서 데이터",
            "description": "(보정된) 스웨거 문서 데이터."
          },
          "connectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowSwaggerConnector"
            },
            "title": "커넥터 리스트",
            "description": "커넥터 리스트."
          }
        },
        "required": [
          "url",
          "id",
          "source",
          "data",
          "connectors"
        ],
        "description": "스웨거의 출처가 링크인 경우."
      },
      "IStudioWorkflowSwaggerConnector": {
        "type": "object",
        "properties": {
          "type": {
            "const": "swagger"
          },
          "swagger_id": {
            "type": "string",
            "title": "부모의 {@link IStudioWorkflowSwagger.id}",
            "description": "부모의 {@link IStudioWorkflowSwagger.id}."
          },
          "method": {
            "oneOf": [
              {
                "const": "get"
              },
              {
                "const": "post"
              },
              {
                "const": "patch"
              },
              {
                "const": "put"
              },
              {
                "const": "delete"
              }
            ],
            "title": "HTTP 메서드",
            "description": "HTTP 메서드."
          },
          "path": {
            "type": "string",
            "title": "Path 정보",
            "description": "Path 정보."
          },
          "async": {
            "const": true,
            "title": "Swagger 커넥터는 무조건 비동기 함수이다",
            "description": "Swagger 커넥터는 무조건 비동기 함수이다."
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowConnectorParameter"
            },
            "title": "파라미터 리스트",
            "description": "파라미터 리스트."
          },
          "output": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IString"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.ITuple"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IOneOf"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INull"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IUnknown"
              }
            ],
            "title": "함수의  리턴 타입",
            "description": "함수의  리턴 타입."
          },
          "summary": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "요약 설명",
            "description": "요약 설명."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "상세 설명",
            "description": "상세 설명."
          },
          "icon": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "커넥터 대표 아이콘 URL",
            "description": "커넥터 대표 아이콘 URL."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "태그 리스트",
            "description": "태그 리스트.\n\nAPI endpoint 에 대한 그룹핑의 개념으로써 사용된다.\n\n{@link ISwaggerOperation.tags} 그 자체."
          }
        },
        "required": [
          "type",
          "swagger_id",
          "method",
          "path",
          "async",
          "parameters",
          "output",
          "summary",
          "description",
          "icon",
          "tags"
        ],
        "description": "워크플로우상 스웨거 함수의 커넥터 정보.\n\n`IStudioWorkflowSwaggerConnector` 는 {@link IStudioWorkflow 워크플로우}에 배치한\n스웨거 함수의 커넥터를 형상화한 엔티티이다. 그리고 여기서 말하는 \"스웨거 함수\" 란,\n워크플로우 문서에서 {@link IStudioWorkflowCallExpression} 노드로 호출할 수 있는\n외부 Rest API 와 그것의 메타데이터 스펙을 뜻한다.\n\n만일 호출하고자 하는 함수가 외부 Rest API 서버의 것이 아닌 동\n{@link IStudioRepository 저장소}에 타입스크립트로 작성된 것이라면,\n{@link IStudioWorkflowScriptConnector} 타입을 대신 사용하도록 한다. 그리고\n만일 호출하고자 하는 함수가 타 저장소의 {@link IStudioRepositoryRelease 릴리즈}\n본에서 배출 (`export`) 된 것이라면, {@link IStudioWorkflowReleasedConnector}\n타입을 대신 사용한다."
      },
      "IStudioWorkflowConnectorParameter": {
        "type": "object",
        "properties": {
          "schema": {
            "$ref": "#/components/schemas/ISwaggerSchema",
            "title": "파라미터의 타입 정보",
            "description": "파라미터의 타입 정보."
          },
          "required": {
            "type": "boolean",
            "title": "필수 여부",
            "description": "필수 여부."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "파라미터의 제목",
            "description": "파라미터의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "파라미터에 대한 상세 설명",
            "description": "파라미터에 대한 상세 설명."
          }
        },
        "required": [
          "schema",
          "required",
          "title",
          "description"
        ],
        "description": "워크플로우 커넥터 함수의 파라미터 정보.\n\n`IStudioWorkflowParameter` 는 {@link IStudioWorkflowParameter 워크플로우 문서}에\n배치된 {@link IStudioWorkflowConnector 커넥터 함수}의 각 파라미터에 대한 타입 및\n서술 정보를 형상화한 엔티티이다."
      },
      "IStudioWorkflowSwagger.IManualSwagger": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key.\n\n스웨거 문서의 출처가 주문 상품인 경우, {@link IHubSaleUnit.id} 가 된다.\n\n반대로 스웨거 문서의 출처가 직접 입력이라면, 사용자가 직접 입력한 ID 값 또는,\n대상 서버의 url 과 버전을 조합하여 구성한 값이 된다."
          },
          "source": {
            "const": "manual",
            "title": "스웨거 문서의 출처",
            "description": "스웨거 문서의 출처."
          },
          "data": {
            "$ref": "#/components/schemas/ISwagger",
            "title": "(보정된) 스웨거 문서 데이터",
            "description": "(보정된) 스웨거 문서 데이터."
          },
          "connectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowSwaggerConnector"
            },
            "title": "커넥터 리스트",
            "description": "커넥터 리스트."
          }
        },
        "required": [
          "id",
          "source",
          "data",
          "connectors"
        ],
        "description": "스웨거의 출처가 직접 입력인 경우."
      },
      "IStudioWorkflowSwagger.IGoodSwagger": {
        "type": "object",
        "properties": {
          "reference": {
            "$ref": "#/components/schemas/IStudioWorkflowSwagger.IReference"
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key.\n\n스웨거 문서의 출처가 주문 상품인 경우, {@link IHubSaleUnit.id} 가 된다.\n\n반대로 스웨거 문서의 출처가 직접 입력이라면, 사용자가 직접 입력한 ID 값 또는,\n대상 서버의 url 과 버전을 조합하여 구성한 값이 된다."
          },
          "source": {
            "const": "good",
            "title": "스웨거 문서의 출처",
            "description": "스웨거 문서의 출처."
          },
          "data": {
            "$ref": "#/components/schemas/ISwagger",
            "title": "(보정된) 스웨거 문서 데이터",
            "description": "(보정된) 스웨거 문서 데이터."
          },
          "connectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowSwaggerConnector"
            },
            "title": "커넥터 리스트",
            "description": "커넥터 리스트."
          }
        },
        "required": [
          "reference",
          "id",
          "source",
          "data",
          "connectors"
        ],
        "description": "스웨거의 출처가 주문 상품인 경우."
      },
      "IStudioWorkflowSwagger.IReference": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 주문의 {@link IHubOrder.id}",
            "description": "대상 주문의 {@link IHubOrder.id}."
          },
          "good_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 주문 상품의 {@link IHubOrderGood.id}",
            "description": "대상 주문 상품의 {@link IHubOrderGood.id}."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 주문 상품의 스냅샷 {@link IHubOrderGoodSnapshot.id}",
            "description": "대상 주문 상품의 스냅샷 {@link IHubOrderGoodSnapshot.id}."
          },
          "unit_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 유닛의 {@link IHubSaleUnit.id}",
            "description": "대상 유닛의 {@link IHubSaleUnit.id}."
          }
        },
        "required": [
          "order_id",
          "good_id",
          "snapshot_id",
          "unit_id"
        ],
        "description": "주문 상품의 참조 정보."
      },
      "IStudioWorkflowStatement": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IStudioWorkflowBlockStatement"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflowBranchStatement"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflowCallStatement"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflowSetStatement"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflowForEachStatement"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflowWhileStatement"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflowRepeatStatement"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflowReturnStatement"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflowSetReturnValueStatement"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflowBreakStatement"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflowContinueStatement"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "WorkflowBlockStatement": "#/components/schemas/IStudioWorkflowBlockStatement",
            "WorkflowBranchStatement": "#/components/schemas/IStudioWorkflowBranchStatement",
            "WorkflowCallStatement": "#/components/schemas/IStudioWorkflowCallStatement",
            "WorkflowSetStatement": "#/components/schemas/IStudioWorkflowSetStatement",
            "WorkflowForEachStatement": "#/components/schemas/IStudioWorkflowForEachStatement",
            "WorkflowWhileStatement": "#/components/schemas/IStudioWorkflowWhileStatement",
            "WorkflowRepeatStatement": "#/components/schemas/IStudioWorkflowRepeatStatement",
            "WorkflowReturnStatement": "#/components/schemas/IStudioWorkflowReturnStatement",
            "WorkflowSetReturnValueStatement": "#/components/schemas/IStudioWorkflowSetReturnValueStatement",
            "WorkflowBreakStatement": "#/components/schemas/IStudioWorkflowBreakStatement",
            "WorkflowContinueStatement": "#/components/schemas/IStudioWorkflowContinueStatement"
          }
        },
        "title": "워크플로우 상 구문 노드",
        "description": "워크플로우 상 구문 노드."
      },
      "IStudioWorkflowBlockStatement": {
        "type": "object",
        "properties": {
          "statement_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "블록 내 선언된 노드문들의 {@link IStudioWorkflowStatement.id} 리스트",
            "description": "블록 내 선언된 노드문들의 {@link IStudioWorkflowStatement.id} 리스트.\n\n블록 내 노드들은 블록 밖의 노드들과 상호 연결관계를 맺을 수 없다."
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "WorkflowBlockStatement",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\n유니언 타입의 식별자 역할."
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry2D",
            "title": "현행 노드의 위상 정보",
            "description": "현행 노드의 위상 정보."
          }
        },
        "required": [
          "statement_ids",
          "id",
          "type",
          "geometry"
        ],
        "description": "워크플로우 상 블록문 노드.\n\n`IStudioWorkflowBlockStatement` 는 {@link IStudioWorkflow 워크플로우 프로그램}\n상 블록문을 형상화한 노드 엔티티이다. 블록문 내 배치된 각각의 노드문들은\n{@link statement_ids} 로써 표현된다.\n\n참고로 블록 내 배치된 노드들은 모드, 블록 밖의 노드들과 상호 연결관계를 맺을 수 없다.\n즉, 오직 블록문 내의 노드들끼리만 상호 연결할 수 있는 것.\n\n```typescript\n// THE BLOCK STATEMENT\n{\n  ...(statements of statement_ids)\n}\n```"
      },
      "IGeometry2D": {
        "type": "object",
        "properties": {
          "position": {
            "$ref": "#/components/schemas/IPoint2D"
          },
          "scale": {
            "$ref": "#/components/schemas/IPoint2D"
          },
          "depth": {
            "type": "number"
          }
        },
        "required": [
          "position",
          "scale",
          "depth"
        ]
      },
      "IPoint2D": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number"
          },
          "y": {
            "type": "number"
          }
        },
        "required": [
          "x",
          "y"
        ]
      },
      "IStudioWorkflowBranchStatement": {
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "조건문에 대한 표현식",
            "description": "조건문에 대한 표현식."
          },
          "then_block_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "조건이 참일 경우 실행할 블록문의 {@link IStudioWorkflowBlockStatement.id}",
            "description": "조건이 참일 경우 실행할 블록문의 {@link IStudioWorkflowBlockStatement.id}.\n\n블록 내 노드들은 블록 밖의 노드와 상호 연결관계를 맺을 수 없다."
          },
          "else_block_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "조건이 거짓일 경우 실행할 블록문의 {@link IStudioWorkflowBlockStatement.id}",
            "description": "조건이 거짓일 경우 실행할 블록문의 {@link IStudioWorkflowBlockStatement.id}.\n\n블록 내 노드들은 블록 밖의 노드와 상호 연결관계를 맺을 수 없다."
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "WorkflowBranchStatement",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\n유니언 타입의 식별자 역할."
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry2D",
            "title": "현행 노드의 위상 정보",
            "description": "현행 노드의 위상 정보."
          },
          "nexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowNodeNext"
            },
            "title": "다음 노드문의 리스트 정보",
            "description": "다음 노드문의 리스트 정보.\n\n현행 노드문의 실행이 완료된 이후, 그 다음 진행할 노드문들의\n{@link IStudioWorkflowStatement.id} 와 그에 대한 설명을 적은\n{@link IStudioWorkflowNodeNext} 구조체를 지칭하는 리스트.\n\n참고로 지칭 가능한 노드는 현행 노드와 동일한 레벨의 블록에 속해야 한다. 만일\n현행 노드가 {@link IStudioWorkflowForEachStatement for loop} 나\n{@link IStudioWorkflowBranchStatement if statement} 등의 블록에 귀속된 노드를\n지칭하거나, for loop 나 if statement 등의 블록에 귀속된 노드가 자신이 속한 블록\n밖의 노드를 지칭한다면, 이는 워크플로우 컴파일러에 의하여 validation error 가\n발생한다."
          }
        },
        "required": [
          "condition",
          "then_block_id",
          "else_block_id",
          "id",
          "type",
          "geometry",
          "nexts"
        ],
        "description": "워크플로우 상 IF 조건문 노드.\n\n`IStudioWorkflowBranchStatement` 는 {@link IStudioWorkflow 워크플로우 프로그램}\n상 조건문을 형상화한 노드 엔티티로써, 조건문 {@link condition} 의 만족 여부에 따라\n실행할 {@link IStudioWorkflowBlockStatement 블록 노드문}들을\n({@link then_block_id} vs. {@link else_block_id}) 구분짓는 역할을 한다.\n\n참고로 각각 {@link then_block_id} 와 {@link else_block_id} 로 지정된 노드들은\n모두 Block 구문에 의해 묶이며, 각 Block 에 귀속되는 노드들은 Block 밖의 노드들과\n{@link IStudioWorkflowNodeAdvanceable.nexts} 로 연결관계를 맺을 수 없다.\n\n즉 조건문 블록 밖의 노드가 조건문 블록 안의 노드와 상호 연결할 수 없다. 그리고\n조건문 내에서도 조건 \"참\" 블록의 노드가, 조건 \"거짓\" 블록의 노드와 상호 연결할\n수 없다.\n\n```typescript\nif (condition) {\n  ...(statements of then_block_id)\n} else {\n  ...(statements of else_block_id)\n}\n...(statements of nexts[].node_id)\n```"
      },
      "IStudioWorkflowNodeNext": {
        "type": "object",
        "properties": {
          "node_id": {
            "type": "string",
            "title": "다음 노드(문)의 {@link IStudioWorkflowStatement.id}",
            "description": "다음 노드(문)의 {@link IStudioWorkflowStatement.id}."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "설명문",
            "description": "설명문."
          }
        },
        "required": [
          "node_id",
          "description"
        ]
      },
      "IStudioWorkflowCallStatement": {
        "type": "object",
        "properties": {
          "connector": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IStudioWorkflowCallStatement.IReleaseConnectorKey"
              },
              {
                "$ref": "#/components/schemas/IStudioWorkflowCallStatement.IScriptConnectorKey"
              },
              {
                "$ref": "#/components/schemas/IStudioWorkflowCallStatement.ISwaggerConnectorKey"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "release": "#/components/schemas/IStudioWorkflowCallStatement.IReleaseConnectorKey",
                "script": "#/components/schemas/IStudioWorkflowCallStatement.IScriptConnectorKey",
                "swagger": "#/components/schemas/IStudioWorkflowCallStatement.ISwaggerConnectorKey"
              }
            },
            "title": "대상 커넥터 정보",
            "description": "대상 커넥터 정보."
          },
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAstExpression"
            },
            "title": "커넥터 호출시 할당할 파라미터 리스트",
            "description": "커넥터 호출시 할당할 파라미터 리스트."
          },
          "parameter_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowConnectorParameter"
            },
            "title": "파라미터 타입을 명시적으로 변형할 수 있다",
            "description": "파라미터 타입을 명시적으로 변형할 수 있다.\n\n본래의 커넥터 함수의 파라미터와는 다른 타입을 명시적으로 지정하는 경우.\n\n예를 들어 원래의 커넥터 함수는 any 타입의 variadic 파라미터를 수신하는데,\n모종의 이유로 해당 커넥터의 파라미터 타입을 특정할 수 있게 되어 동적으로 해당\n파라미터들의 타입 정보를 명시하고 싶은 경우.\n\n예를 들어 notion DB 에 관련된 커넥터 등이 그러하다."
          },
          "return_type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IString"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.ITuple"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IOneOf"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INull"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IUnknown"
              }
            ],
            "title": "리턴 타입을 명시적으로 변형할 수 있다",
            "description": "리턴 타입을 명시적으로 변형할 수 있다.\n\n본래의 커넥터 함수의 리턴 타입과 다른 이종의 타입을 명시적으로 지정하는 경우.\n\n예를 들어 원래의 커넥터 함수는 any 타입을 리턴하는데, 모종의 이유로 해당 커넥터의\n리턴 타입을 특정할 수 있게 되어, 동적으로 그 리턴 타입 정보를 명시하고 싶은 경우.\n\n예를 들어 notion DB 에 관련된 커넥터 등이 그러하다."
          },
          "operand": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowVariableIdentifier"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "WorkflowVariableIdentifier": "#/components/schemas/IAstWorkflowVariableIdentifier"
              }
            },
            "title": "커넥터 호출 결과를 저장할 변수",
            "description": "커넥터 호출 결과를 저장할 변수.\n\n만약 이 값이 설정되지 않았다면, 커넥터 호출 결과는\n오직 {@link IAstWorkflowCallStatementResultIdentifier} 로 식별한다.\n\n반대로 이 값이 설정되었다면, 커넥터 호출 결과는 사용자 정의 변수\n{@link IStudioWorkflowVariable} 에 저장되어,\n{@link IAstWorkflowVariableIdentifier} 로 식별해야 한다."
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "WorkflowCallStatement",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\n유니언 타입의 식별자 역할."
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry2D",
            "title": "현행 노드의 위상 정보",
            "description": "현행 노드의 위상 정보."
          },
          "nexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowNodeNext"
            },
            "title": "다음 노드문의 리스트 정보",
            "description": "다음 노드문의 리스트 정보.\n\n현행 노드문의 실행이 완료된 이후, 그 다음 진행할 노드문들의\n{@link IStudioWorkflowStatement.id} 와 그에 대한 설명을 적은\n{@link IStudioWorkflowNodeNext} 구조체를 지칭하는 리스트.\n\n참고로 지칭 가능한 노드는 현행 노드와 동일한 레벨의 블록에 속해야 한다. 만일\n현행 노드가 {@link IStudioWorkflowForEachStatement for loop} 나\n{@link IStudioWorkflowBranchStatement if statement} 등의 블록에 귀속된 노드를\n지칭하거나, for loop 나 if statement 등의 블록에 귀속된 노드가 자신이 속한 블록\n밖의 노드를 지칭한다면, 이는 워크플로우 컴파일러에 의하여 validation error 가\n발생한다."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "생성되는 변수의 제목",
            "description": "생성되는 변수의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "생성되는 변수에 대한 상세 설명문",
            "description": "생성되는 변수에 대한 상세 설명문."
          },
          "icon": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "아이콘 이미지 UL",
            "description": "아이콘 이미지 UL.\n\n워크플로우 노드문에 명시적으로 독립 아이콘을 설정할 수 있다."
          }
        },
        "required": [
          "arguments",
          "id",
          "type",
          "geometry",
          "nexts",
          "title",
          "description"
        ],
        "description": "워크플로우상 커넥터 함수 호출문.\n\n`IStudioWorkflowCallStatement` 는 {@link IStudioWorkflow 워크플로우 프로그램} 상\n{@link IStudioWorkflowConnector 커넥터 함수}를 호출하는 표현식 문을 형상화한\n노드 엔티티이다.\n\n`IStudioWorkflowCallStatement` 를 구성할 때는 {@link connector} 로 호출하고자 하는\n대상 커넥터를 지정하고, {@link arguments} 에 커넥터 호출시 할당할 파라미터 리스트를\n{@link IAstExpression AST 표현식}으로 넣어주면 된다.\n\n참고로 본 워크플로우 시스템은 커넥터 함수를 호출할 때마다, 그 리턴값을\n**모종의 지역 변수**에 담아두고 있다. 그리고 이 **모종의 지역 변수**는\n{@link IAstWorkflowCallStatementResultIdentifier} 로 식별된다. 다만,\n{@link operand} 을 명시적으로 지정한 경우,\n{@link IStudioWorkflowVariable} 에 저장되어\n{@link IAstWorkflowVariableIdentifier} 로 식별해야 한다.\n\n이외에 {@link title} 과 {@link descrition} 필드에 관해서는 슈퍼타입\n{@link IStudioWorkflowNodeDescriptable} 를 읽어보도록 하자.\n\n```typescript\nconst result = connector(...arguments);\n```"
      },
      "IStudioWorkflowCallStatement.IReleaseConnectorKey": {
        "type": "object",
        "properties": {
          "type": {
            "const": "release"
          },
          "release_id": {
            "type": "string",
            "description": "대상 릴리즈의 {@link IStudioRepositoryRelease.id}"
          },
          "node_id": {
            "type": "string",
            "description": "대상 노드의 {@link IStudioWorkflowStatement.id}"
          }
        },
        "required": [
          "type",
          "release_id",
          "node_id"
        ],
        "description": "릴리즈 커넥터 호출을 위한 키."
      },
      "IStudioWorkflowCallStatement.IScriptConnectorKey": {
        "type": "object",
        "properties": {
          "type": {
            "const": "script"
          },
          "path": {
            "type": "string",
            "title": "대상 버킷의 경로",
            "description": "대상 버킷의 경로.\n\n참조 대상 버킷을 현행 워크플로우 기준의 상대 경로로 표현함."
          },
          "accessor": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IAstElementAccessExpression"
              },
              {
                "$ref": "#/components/schemas/IAstPropertyAccessExpression"
              },
              {
                "$ref": "#/components/schemas/IAstIdentifier"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "ElementAccessExpression": "#/components/schemas/IAstElementAccessExpression",
                "PropertyAccessExpression": "#/components/schemas/IAstPropertyAccessExpression",
                "Identifier": "#/components/schemas/IAstIdentifier"
              }
            },
            "title": "함수에 대한 접근자",
            "description": "함수에 대한 접근자."
          }
        },
        "required": [
          "type",
          "path",
          "accessor"
        ],
        "description": "스크립트 커넥터 호출을 위한 키."
      },
      "IStudioWorkflowCallStatement.ISwaggerConnectorKey": {
        "type": "object",
        "properties": {
          "type": {
            "const": "swagger"
          },
          "swagger_id": {
            "type": "string",
            "description": "대상 스웨거의 {@link IStudioWorkflowSwagger.id}"
          },
          "method": {
            "oneOf": [
              {
                "const": "get"
              },
              {
                "const": "post"
              },
              {
                "const": "patch"
              },
              {
                "const": "put"
              },
              {
                "const": "delete"
              },
              {
                "const": "options"
              },
              {
                "const": "head"
              },
              {
                "const": "trace"
              }
            ],
            "title": "대상 endpoint 의 메서드",
            "description": "대상 endpoint 의 메서드."
          },
          "path": {
            "type": "string",
            "title": "대상 endpoint 의 경로",
            "description": "대상 endpoint 의 경로."
          }
        },
        "required": [
          "type",
          "swagger_id"
        ],
        "description": "스웨거 커넥터 호출을 위한 키."
      },
      "IStudioWorkflowSetStatement": {
        "type": "object",
        "properties": {
          "operand": {
            "$ref": "#/components/schemas/IAstWorkflowVariableIdentifier",
            "title": "대상 변수의 식별자",
            "description": "대상 변수의 식별자."
          },
          "value": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "값",
            "description": "값."
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "WorkflowSetStatement",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\n유니언 타입의 식별자 역할."
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry2D",
            "title": "현행 노드의 위상 정보",
            "description": "현행 노드의 위상 정보."
          },
          "nexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowNodeNext"
            },
            "title": "다음 노드문의 리스트 정보",
            "description": "다음 노드문의 리스트 정보.\n\n현행 노드문의 실행이 완료된 이후, 그 다음 진행할 노드문들의\n{@link IStudioWorkflowStatement.id} 와 그에 대한 설명을 적은\n{@link IStudioWorkflowNodeNext} 구조체를 지칭하는 리스트.\n\n참고로 지칭 가능한 노드는 현행 노드와 동일한 레벨의 블록에 속해야 한다. 만일\n현행 노드가 {@link IStudioWorkflowForEachStatement for loop} 나\n{@link IStudioWorkflowBranchStatement if statement} 등의 블록에 귀속된 노드를\n지칭하거나, for loop 나 if statement 등의 블록에 귀속된 노드가 자신이 속한 블록\n밖의 노드를 지칭한다면, 이는 워크플로우 컴파일러에 의하여 validation error 가\n발생한다."
          }
        },
        "required": [
          "operand",
          "value",
          "id",
          "type",
          "geometry",
          "nexts"
        ],
        "description": "변수에 값을 할당하는 노드.\n\n```typescript\nlet variable: number;\n\nvariable = 3; // -> 변수를 3으로 설정\n```"
      },
      "IStudioWorkflowForEachStatement": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "순회할 값 표현식",
            "description": "순회할 값 표현식."
          },
          "loop_block_id": {
            "type": "string",
            "title": "반복 실행할 블록문의 {@link IStudioWorkflowBlockStatement.id}",
            "description": "반복 실행할 블록문의 {@link IStudioWorkflowBlockStatement.id}.\n\n반복 실행할 대상 노드문들을 묶어내는 블록이 형성되며, 본 블록 내 노드들은\n블록 밖의 노드와 상호 연결관계를 맺을 수 없다.\n\n그리고 블록 내 노드 중 {@link IStudioWorkflowCallStatement 커넥터 함수 호출}과\n같이 지역 변수를 생성하는 노드가 있다면, 생성된 지역 변수들은 모두 블록 밖 배열에\n삽입된다. 단, 블록 내에 {@link IStudioWorkflowBreakStatement break} 나\n{@link IStudioWorkflowContinueStatement continue} 문 등이 쓰인 경우라면, 지역\n변수들은 배열에 삽입되지 않는다."
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "WorkflowForEachStatement",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\n유니언 타입의 식별자 역할."
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry2D",
            "title": "현행 노드의 위상 정보",
            "description": "현행 노드의 위상 정보."
          },
          "nexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowNodeNext"
            },
            "title": "다음 노드문의 리스트 정보",
            "description": "다음 노드문의 리스트 정보.\n\n현행 노드문의 실행이 완료된 이후, 그 다음 진행할 노드문들의\n{@link IStudioWorkflowStatement.id} 와 그에 대한 설명을 적은\n{@link IStudioWorkflowNodeNext} 구조체를 지칭하는 리스트.\n\n참고로 지칭 가능한 노드는 현행 노드와 동일한 레벨의 블록에 속해야 한다. 만일\n현행 노드가 {@link IStudioWorkflowForEachStatement for loop} 나\n{@link IStudioWorkflowBranchStatement if statement} 등의 블록에 귀속된 노드를\n지칭하거나, for loop 나 if statement 등의 블록에 귀속된 노드가 자신이 속한 블록\n밖의 노드를 지칭한다면, 이는 워크플로우 컴파일러에 의하여 validation error 가\n발생한다."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "생성되는 변수의 제목",
            "description": "생성되는 변수의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "생성되는 변수에 대한 상세 설명문",
            "description": "생성되는 변수에 대한 상세 설명문."
          },
          "icon": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "아이콘 이미지 UL",
            "description": "아이콘 이미지 UL.\n\n워크플로우 노드문에 명시적으로 독립 아이콘을 설정할 수 있다."
          }
        },
        "required": [
          "expression",
          "loop_block_id",
          "id",
          "type",
          "geometry",
          "nexts",
          "title",
          "description"
        ],
        "description": "워크플로우 상 For Each 구문 노드 (but `Array.filter().map()` like).\n\n`IStudioWorkflowForEachStatement` 는 {@link IStudioWorkflow 워크플로우 프로그램}\n상 For Each 반복문을 형상화한 노드 엔티티로써 (실제로는 `Array.filter().map()`),\n순회 대상 객체 {@link expression} 에 대하여 {@link loop_block_id} 로 지칭되는\n{@link IStudioWorkflowBlockStatement 블록문}을 구성하여 반복 작업을 실행하는\n구조이다.\n\n그리고 반복문 내에서 {@link IStudioWorkflowCallStatement 커넥터 함수 호출}\n등으로 지역 변수가 생겨난 경우, 이들은 모두 반복문 블록 시작 전에 선언된 배열에\n삽입된다. 단, 블록 내에 {@link IStudioWorkflowBreakStatement break} 나\n{@link IStudioWorkflowContinueStatement continue} 문 등이 쓰인 경우라면, 지역\n변수들은 배열에 삽입되지 않는다. 이외에 반복문이 이중 삼중으로 쓰인 경우, 반복문으로\n인하여 생겨난 배열 역시 그보다 상위 반복문의 배열에 삽입된다.\n\n참고로 이렇게 반복문에서 생겨난 지역 변수들을 담은 배열은\n{@link IAstWorkflowLoopStatementResultIdentifier} 표현식로 지칭할 수 있다.\n그리고 반복문 대상 {@link expression} 의 개별 원소들은,\n{@link IAstWorkflowLoopStatementElementIdentifier} 표현식으로 지정할 수 있다.\n이외에 반복문 블록 내에 배치된 노드들은, 반복문 블록 밖의 노드들과 상호 연결할 수\n없다. 이는 모든 블록문에 공통 적용되는 사항.\n\n이외에 `IStudioWorkflowForEachStatement` 를 통하여 생성되는 변수에\n{@link title} 및 {@link description} 을 작성할 수 있는데, 자세한 내용은\n{@link IStudioWorkflowNodeDescriptable}을 참고하기 바란다.\n\n```typescript\nconst output = [];\nfor (const elem of expression) {\n   ...(statements of loop_block_id)\n   output.push({\n     ..variables generated in the block\n   });\n}\n...(statements of nexts[].node_id)\n```"
      },
      "IStudioWorkflowWhileStatement": {
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "컨디션 표현식",
            "description": "컨디션 표현식."
          },
          "loop_block_id": {
            "type": "string",
            "title": "For 문으로 반복 실행할 블록문의 {@link IStudioWorkflowBlockStatement.id}",
            "description": "For 문으로 반복 실행할 블록문의 {@link IStudioWorkflowBlockStatement.id}.\n\n대상 노드문들을 묶어내는 블록이 형성되며, 본 블록 내 노드들은 블록 밖의 노드와 상호\n연결관계를 맺을 수 없다.\n\n그리고 블록 내 노드 중 {@link IStudioWorkflowCallStatement 커넥터 함수 호출}과\n같이 지역 변수를 생성하는 노드가 있다면, 생성된 지역 변수들은 모두 블록 밖 배열에\n삽입된다. 단, 블록 내에 {@link IStudioWorkflowBreakStatement break} 나\n{@link IStudioWorkflowContinueStatement continue} 문 등이 쓰인 경우라면, 지역\n변수들은 배열에 삽입되지 않는다."
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "WorkflowWhileStatement",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\n유니언 타입의 식별자 역할."
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry2D",
            "title": "현행 노드의 위상 정보",
            "description": "현행 노드의 위상 정보."
          },
          "nexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowNodeNext"
            },
            "title": "다음 노드문의 리스트 정보",
            "description": "다음 노드문의 리스트 정보.\n\n현행 노드문의 실행이 완료된 이후, 그 다음 진행할 노드문들의\n{@link IStudioWorkflowStatement.id} 와 그에 대한 설명을 적은\n{@link IStudioWorkflowNodeNext} 구조체를 지칭하는 리스트.\n\n참고로 지칭 가능한 노드는 현행 노드와 동일한 레벨의 블록에 속해야 한다. 만일\n현행 노드가 {@link IStudioWorkflowForEachStatement for loop} 나\n{@link IStudioWorkflowBranchStatement if statement} 등의 블록에 귀속된 노드를\n지칭하거나, for loop 나 if statement 등의 블록에 귀속된 노드가 자신이 속한 블록\n밖의 노드를 지칭한다면, 이는 워크플로우 컴파일러에 의하여 validation error 가\n발생한다."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "생성되는 변수의 제목",
            "description": "생성되는 변수의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "생성되는 변수에 대한 상세 설명문",
            "description": "생성되는 변수에 대한 상세 설명문."
          },
          "icon": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "아이콘 이미지 UL",
            "description": "아이콘 이미지 UL.\n\n워크플로우 노드문에 명시적으로 독립 아이콘을 설정할 수 있다."
          }
        },
        "required": [
          "condition",
          "loop_block_id",
          "id",
          "type",
          "geometry",
          "nexts",
          "title",
          "description"
        ],
        "description": "워크플로우 상 While 구문 노드.\n\n`IStudioWorkflowWhileStatement` 는 {@link IStudioWorkflow 워크플로우 프로그램}\n상 While 반복문을 형상화한 노드 엔티티로써, While 조건 표현식 {@link condition}\n에 에 대하여 {@link loop_block_id} 로 지칭되는\n{@link IStudioWorkflowBlockStatement 블록문}을 구성함으로써 반복 작업을 실행하는\n구조이다.\n\n그리고 반복문 내에서 {@link IStudioWorkflowCallStatement 커넥터 함수 호출}\n등으로 지역 변수가 생겨난 경우, 이들은 모두 반복문 블록 시작 전에 선언된 배열에\n삽입된다. 단, 블록 내에 {@link IStudioWorkflowBreakStatement break} 나\n{@link IStudioWorkflowContinueStatement continue} 문 등이 쓰인 경우라면, 지역\n변수들은 배열에 삽입되지 않는다. 이외에 반복문이 이중 삼중으로 쓰인 경우, 반복문으로\n인하여 생겨난 배열 역시 그보다 상위 반복문의 배열에 삽입된다.\n\n참고로 이렇게 반복문에서 생겨난 지역 변수들을 담은 배열은\n{@link IAstWorkflowLoopStatementResultIdentifier} 표현식로 지칭할 수 있다.\n이외에 반복문 블록 내에 배치된 노드들은, 반복문 블록 밖의 노드들과 상호 연결할 수\n없다. 이는 모든 블록문에 공통 적용되는 사항.\n\n이외에 `IStudioWorkflowWhileStatement` 를 통하여 생성되는 변수에\n{@link title} 및 {@link description} 을 작성할 수 있는데, 자세한 내용은\n{@link IStudioWorkflowNodeDescriptable}을 참고하기 바란다.\n\n```typescript\nconst output = [];\nwhile (condition) {\n  ...(statements of loop_block_id)\n  output.push({\n     ..variables generated in the block\n   });\n}\n...(statements of nexts[].node_id)\n```"
      },
      "IStudioWorkflowRepeatStatement": {
        "type": "object",
        "properties": {
          "count": {
            "$ref": "#/components/schemas/IAstExpression",
            "title": "순회할 횟수",
            "description": "순회할 횟수."
          },
          "loop_block_id": {
            "type": "string",
            "title": "반복 실행할 블록문의 {@link IStudioWorkflowBlockStatement.id}",
            "description": "반복 실행할 블록문의 {@link IStudioWorkflowBlockStatement.id}.\n\n반복 실행할 대상 노드문들을 묶어내는 블록이 형성되며, 본 블록 내 노드들은\n블록 밖의 노드와 상호 연결관계를 맺을 수 없다.\n\n그리고 블록 내 노드 중 {@link IStudioWorkflowCallStatement 커넥터 함수 호출}과\n같이 지역 변수를 생성하는 노드가 있다면, 생성된 지역 변수들은 모두 블록 밖 배열에\n삽입된다. 단, 블록 내에 {@link IStudioWorkflowBreakStatement break} 나\n{@link IStudioWorkflowContinueStatement continue} 문 등이 쓰인 경우라면, 지역\n변수들은 배열에 삽입되지 않는다."
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "WorkflowRepeatStatement",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\n유니언 타입의 식별자 역할."
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry2D",
            "title": "현행 노드의 위상 정보",
            "description": "현행 노드의 위상 정보."
          },
          "nexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowNodeNext"
            },
            "title": "다음 노드문의 리스트 정보",
            "description": "다음 노드문의 리스트 정보.\n\n현행 노드문의 실행이 완료된 이후, 그 다음 진행할 노드문들의\n{@link IStudioWorkflowStatement.id} 와 그에 대한 설명을 적은\n{@link IStudioWorkflowNodeNext} 구조체를 지칭하는 리스트.\n\n참고로 지칭 가능한 노드는 현행 노드와 동일한 레벨의 블록에 속해야 한다. 만일\n현행 노드가 {@link IStudioWorkflowForEachStatement for loop} 나\n{@link IStudioWorkflowBranchStatement if statement} 등의 블록에 귀속된 노드를\n지칭하거나, for loop 나 if statement 등의 블록에 귀속된 노드가 자신이 속한 블록\n밖의 노드를 지칭한다면, 이는 워크플로우 컴파일러에 의하여 validation error 가\n발생한다."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "생성되는 변수의 제목",
            "description": "생성되는 변수의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "생성되는 변수에 대한 상세 설명문",
            "description": "생성되는 변수에 대한 상세 설명문."
          },
          "icon": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "아이콘 이미지 UL",
            "description": "아이콘 이미지 UL.\n\n워크플로우 노드문에 명시적으로 독립 아이콘을 설정할 수 있다."
          }
        },
        "required": [
          "count",
          "loop_block_id",
          "id",
          "type",
          "geometry",
          "nexts",
          "title",
          "description"
        ],
        "description": "워크플로우 상 Repeat 구문 노드."
      },
      "IStudioWorkflowReturnStatement": {
        "type": "object",
        "properties": {
          "expression": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IAstArrayLiteralExpression"
              },
              {
                "$ref": "#/components/schemas/IAstBinaryExpression"
              },
              {
                "$ref": "#/components/schemas/IAstCallExpression"
              },
              {
                "$ref": "#/components/schemas/IAstConditionalExpression"
              },
              {
                "$ref": "#/components/schemas/IAstElementAccessExpression"
              },
              {
                "$ref": "#/components/schemas/IAstSpreadElementExpression"
              },
              {
                "$ref": "#/components/schemas/IAstNonNullExpression"
              },
              {
                "$ref": "#/components/schemas/IAstParenthesizedExpression"
              },
              {
                "$ref": "#/components/schemas/IAstObjectLiteralExpression"
              },
              {
                "$ref": "#/components/schemas/IAstPostfixUnaryExpression"
              },
              {
                "$ref": "#/components/schemas/IAstPrefixUnaryExpression"
              },
              {
                "$ref": "#/components/schemas/IAstPropertyAccessExpression"
              },
              {
                "$ref": "#/components/schemas/IAstTemplateExpression"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowMetadataIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowEnvironmentVariableIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowVariableIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstStringLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstNoSubstitutionTemplateLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstNumericLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstNullLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstFalseLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstTrueLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstArrayFilterExpression"
              },
              {
                "$ref": "#/components/schemas/IAstArrayFlatExpression"
              },
              {
                "$ref": "#/components/schemas/IAstArrayFunctionParameterIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstArrayFunctionIndexIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstArrayMapExpression"
              },
              {
                "$ref": "#/components/schemas/IAstObjectEntriesExpression"
              },
              {
                "$ref": "#/components/schemas/IAstObjectFlatExpression"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowParameterIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowCallStatementResultIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowLoopStatementResultIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowLoopStatementElementIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowSecretIdentifier"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "ArrayLiteralExpression": "#/components/schemas/IAstArrayLiteralExpression",
                "BinaryExpression": "#/components/schemas/IAstBinaryExpression",
                "CallExpression": "#/components/schemas/IAstCallExpression",
                "ConditionalExpression": "#/components/schemas/IAstConditionalExpression",
                "ElementAccessExpression": "#/components/schemas/IAstElementAccessExpression",
                "SpreadElementExpression": "#/components/schemas/IAstSpreadElementExpression",
                "NonNullExpression": "#/components/schemas/IAstNonNullExpression",
                "ParenthesizedExpression": "#/components/schemas/IAstParenthesizedExpression",
                "ObjectLiteralExpression": "#/components/schemas/IAstObjectLiteralExpression",
                "PostfixUnaryExpression": "#/components/schemas/IAstPostfixUnaryExpression",
                "PrefixUnaryExpression": "#/components/schemas/IAstPrefixUnaryExpression",
                "PropertyAccessExpression": "#/components/schemas/IAstPropertyAccessExpression",
                "TemplateExpression": "#/components/schemas/IAstTemplateExpression",
                "WorkflowMetadataIdentifier": "#/components/schemas/IAstWorkflowMetadataIdentifier",
                "WorkflowEnvironmentVariableIdentifier": "#/components/schemas/IAstWorkflowEnvironmentVariableIdentifier",
                "WorkflowVariableIdentifier": "#/components/schemas/IAstWorkflowVariableIdentifier",
                "StringLiteral": "#/components/schemas/IAstStringLiteral",
                "NoSubstitutionTemplateLiteral": "#/components/schemas/IAstNoSubstitutionTemplateLiteral",
                "Identifier": "#/components/schemas/IAstIdentifier",
                "NumericLiteral": "#/components/schemas/IAstNumericLiteral",
                "NullLiteral": "#/components/schemas/IAstNullLiteral",
                "FalseLiteral": "#/components/schemas/IAstFalseLiteral",
                "TrueLiteral": "#/components/schemas/IAstTrueLiteral",
                "ArrayFilterExpression": "#/components/schemas/IAstArrayFilterExpression",
                "ArrayFlatExpression": "#/components/schemas/IAstArrayFlatExpression",
                "ArrayFunctionParameterIdentifier": "#/components/schemas/IAstArrayFunctionParameterIdentifier",
                "ArrayFunctionIndexIdentifier": "#/components/schemas/IAstArrayFunctionIndexIdentifier",
                "ArrayMapExpression": "#/components/schemas/IAstArrayMapExpression",
                "ObjectEntriesExpression": "#/components/schemas/IAstObjectEntriesExpression",
                "ObjectFlatExpression": "#/components/schemas/IAstObjectFlatExpression",
                "WorkflowParameterIdentifier": "#/components/schemas/IAstWorkflowParameterIdentifier",
                "WorkflowCallStatementResultIdentifier": "#/components/schemas/IAstWorkflowCallStatementResultIdentifier",
                "WorkflowLoopStatementResultIdentifier": "#/components/schemas/IAstWorkflowLoopStatementResultIdentifier",
                "WorkflowLoopStatementElementIdentifier": "#/components/schemas/IAstWorkflowLoopStatementElementIdentifier",
                "WorkflowSecretIdentifier": "#/components/schemas/IAstWorkflowSecretIdentifier"
              }
            },
            "title": "리턴할 표현식",
            "description": "리턴할 표현식."
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "WorkflowReturnStatement",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\n유니언 타입의 식별자 역할."
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry2D",
            "title": "현행 노드의 위상 정보",
            "description": "현행 노드의 위상 정보."
          }
        },
        "required": [
          "expression",
          "id",
          "type",
          "geometry"
        ],
        "description": "워크플로우 실행 도중 리턴하는 노드.\n\n```typescript\nreturn;\nreturn <expr>;\n```\n\n이 구문은 실행을 즉시 중단하므로, 다음 노드를 지정할 수 없다."
      },
      "IStudioWorkflowSetReturnValueStatement": {
        "type": "object",
        "properties": {
          "expression": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IAstArrayLiteralExpression"
              },
              {
                "$ref": "#/components/schemas/IAstBinaryExpression"
              },
              {
                "$ref": "#/components/schemas/IAstCallExpression"
              },
              {
                "$ref": "#/components/schemas/IAstConditionalExpression"
              },
              {
                "$ref": "#/components/schemas/IAstElementAccessExpression"
              },
              {
                "$ref": "#/components/schemas/IAstSpreadElementExpression"
              },
              {
                "$ref": "#/components/schemas/IAstNonNullExpression"
              },
              {
                "$ref": "#/components/schemas/IAstParenthesizedExpression"
              },
              {
                "$ref": "#/components/schemas/IAstObjectLiteralExpression"
              },
              {
                "$ref": "#/components/schemas/IAstPostfixUnaryExpression"
              },
              {
                "$ref": "#/components/schemas/IAstPrefixUnaryExpression"
              },
              {
                "$ref": "#/components/schemas/IAstPropertyAccessExpression"
              },
              {
                "$ref": "#/components/schemas/IAstTemplateExpression"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowMetadataIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowEnvironmentVariableIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowVariableIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstStringLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstNoSubstitutionTemplateLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstNumericLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstNullLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstFalseLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstTrueLiteral"
              },
              {
                "$ref": "#/components/schemas/IAstArrayFilterExpression"
              },
              {
                "$ref": "#/components/schemas/IAstArrayFlatExpression"
              },
              {
                "$ref": "#/components/schemas/IAstArrayFunctionParameterIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstArrayFunctionIndexIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstArrayMapExpression"
              },
              {
                "$ref": "#/components/schemas/IAstObjectEntriesExpression"
              },
              {
                "$ref": "#/components/schemas/IAstObjectFlatExpression"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowParameterIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowCallStatementResultIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowLoopStatementResultIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowLoopStatementElementIdentifier"
              },
              {
                "$ref": "#/components/schemas/IAstWorkflowSecretIdentifier"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "ArrayLiteralExpression": "#/components/schemas/IAstArrayLiteralExpression",
                "BinaryExpression": "#/components/schemas/IAstBinaryExpression",
                "CallExpression": "#/components/schemas/IAstCallExpression",
                "ConditionalExpression": "#/components/schemas/IAstConditionalExpression",
                "ElementAccessExpression": "#/components/schemas/IAstElementAccessExpression",
                "SpreadElementExpression": "#/components/schemas/IAstSpreadElementExpression",
                "NonNullExpression": "#/components/schemas/IAstNonNullExpression",
                "ParenthesizedExpression": "#/components/schemas/IAstParenthesizedExpression",
                "ObjectLiteralExpression": "#/components/schemas/IAstObjectLiteralExpression",
                "PostfixUnaryExpression": "#/components/schemas/IAstPostfixUnaryExpression",
                "PrefixUnaryExpression": "#/components/schemas/IAstPrefixUnaryExpression",
                "PropertyAccessExpression": "#/components/schemas/IAstPropertyAccessExpression",
                "TemplateExpression": "#/components/schemas/IAstTemplateExpression",
                "WorkflowMetadataIdentifier": "#/components/schemas/IAstWorkflowMetadataIdentifier",
                "WorkflowEnvironmentVariableIdentifier": "#/components/schemas/IAstWorkflowEnvironmentVariableIdentifier",
                "WorkflowVariableIdentifier": "#/components/schemas/IAstWorkflowVariableIdentifier",
                "StringLiteral": "#/components/schemas/IAstStringLiteral",
                "NoSubstitutionTemplateLiteral": "#/components/schemas/IAstNoSubstitutionTemplateLiteral",
                "Identifier": "#/components/schemas/IAstIdentifier",
                "NumericLiteral": "#/components/schemas/IAstNumericLiteral",
                "NullLiteral": "#/components/schemas/IAstNullLiteral",
                "FalseLiteral": "#/components/schemas/IAstFalseLiteral",
                "TrueLiteral": "#/components/schemas/IAstTrueLiteral",
                "ArrayFilterExpression": "#/components/schemas/IAstArrayFilterExpression",
                "ArrayFlatExpression": "#/components/schemas/IAstArrayFlatExpression",
                "ArrayFunctionParameterIdentifier": "#/components/schemas/IAstArrayFunctionParameterIdentifier",
                "ArrayFunctionIndexIdentifier": "#/components/schemas/IAstArrayFunctionIndexIdentifier",
                "ArrayMapExpression": "#/components/schemas/IAstArrayMapExpression",
                "ObjectEntriesExpression": "#/components/schemas/IAstObjectEntriesExpression",
                "ObjectFlatExpression": "#/components/schemas/IAstObjectFlatExpression",
                "WorkflowParameterIdentifier": "#/components/schemas/IAstWorkflowParameterIdentifier",
                "WorkflowCallStatementResultIdentifier": "#/components/schemas/IAstWorkflowCallStatementResultIdentifier",
                "WorkflowLoopStatementResultIdentifier": "#/components/schemas/IAstWorkflowLoopStatementResultIdentifier",
                "WorkflowLoopStatementElementIdentifier": "#/components/schemas/IAstWorkflowLoopStatementElementIdentifier",
                "WorkflowSecretIdentifier": "#/components/schemas/IAstWorkflowSecretIdentifier"
              }
            },
            "title": "리턴할 표현식",
            "description": "리턴할 표현식."
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "WorkflowSetReturnValueStatement",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\n유니언 타입의 식별자 역할."
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry2D",
            "title": "현행 노드의 위상 정보",
            "description": "현행 노드의 위상 정보."
          },
          "nexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowNodeNext"
            },
            "title": "다음 노드문의 리스트 정보",
            "description": "다음 노드문의 리스트 정보.\n\n현행 노드문의 실행이 완료된 이후, 그 다음 진행할 노드문들의\n{@link IStudioWorkflowStatement.id} 와 그에 대한 설명을 적은\n{@link IStudioWorkflowNodeNext} 구조체를 지칭하는 리스트.\n\n참고로 지칭 가능한 노드는 현행 노드와 동일한 레벨의 블록에 속해야 한다. 만일\n현행 노드가 {@link IStudioWorkflowForEachStatement for loop} 나\n{@link IStudioWorkflowBranchStatement if statement} 등의 블록에 귀속된 노드를\n지칭하거나, for loop 나 if statement 등의 블록에 귀속된 노드가 자신이 속한 블록\n밖의 노드를 지칭한다면, 이는 워크플로우 컴파일러에 의하여 validation error 가\n발생한다."
          }
        },
        "required": [
          "expression",
          "id",
          "type",
          "geometry",
          "nexts"
        ],
        "description": "워크플로우의 리턴값을 설정하는 노드.\n\n```typescript\nlet returnValue: any;\n\nreturnValue = 3; // -> 리턴값을 3으로 설정\n\nreturn returnValue;\n```\n\n현재 워크플로우는 노드 기반의 비주얼 프로그래밍 언어의 일종이며, 사용자로 하여금\n명확한 실행 순서를 정의하지 못하도록 설게되어 있으므로, 일반적인 프로그래밍 언어의\nreturn 은 구현이 불가능하다. 이 노드는 그 대안으로서, return 구문 없이도 리턴값을\n설정할 수 있게 해준다.\n\n리턴값은 여러번 설정될 수 있으며, 마지막 설정된 값이 최종적으로 리턴값이 된다.\n`null` 을 설정하면 리턴값이 없음을 의미하며, 이 또한 이전 값에 덮어쓴다."
      },
      "IStudioWorkflowBreakStatement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "WorkflowBreakStatement",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\n유니언 타입의 식별자 역할."
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry2D",
            "title": "현행 노드의 위상 정보",
            "description": "현행 노드의 위상 정보."
          }
        },
        "required": [
          "id",
          "type",
          "geometry"
        ],
        "description": "워크플로우 상 반복문을 즉시 탈출하는 Break 노드.\n\n`IStudioWorkflowBreakStatement` 는 {@link IStudioWorkflow 워크플로우 프로그램} 상\n{@link IStudioWorkflowForEachStatement} 나 {@link IStudioWorkflowWhilteStatement}\n등의 반복문 내에서 반복문을 즉시 탈출하는 Break 문을 형상화한 노드 엔티티로써,\n오직 위 엔티티들의 반복문 내에서만 사용 가능하다.\n\n그리고 본디 반복문 내에서 {@link IStudioWorkflowCallStatement 커넥터 함수 호출} 등으로\n지역 변수가 생겨난 경우, 이들은 모두 반복문 블록 시작 전에 선언된 배열에 삽입된다.\n그러나, 반복문 내에서 본 `IStudioWorkflowBreakStatement` 나\n{@link IStudioWorkflowContinueStatement continue} 문 등이 쓰인 경우라면, 지역 변수들은\n상위 배열에 삽입되지 않는다.\n\n```typescript\nconst output = [];\nfor (const elem of someArrayExpression) {\n   ...(some-statements)\n   break;\n   output.push({\n     ...variables generated in the block\n   });\n}\n```"
      },
      "IStudioWorkflowContinueStatement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "WorkflowContinueStatement",
            "title": "노드의 타입",
            "description": "노드의 타입.\n\n유니언 타입의 식별자 역할."
          },
          "geometry": {
            "$ref": "#/components/schemas/IGeometry2D",
            "title": "현행 노드의 위상 정보",
            "description": "현행 노드의 위상 정보."
          }
        },
        "required": [
          "id",
          "type",
          "geometry"
        ],
        "description": "워크플로우 상 반복문을 즉시 재시작하는 Continue 노드.\n\n`IStudioWorkflowContinueStatement` 는 {@link IStudioWorkflow 워크플로우 프로그램} 상\n{@link IStudioWorkflowForEachStatement} 나 {@link IStudioWorkflowWhilteStatement}\n등의 반복문 내에서 반복문을 즉시 재시작하는 Continue 문을 형상화한 노드 엔티티로써,\n오직 위 엔티티들의 반복문 내에서만 사용 가능하다.\n\n그리고 본디 반복문 내에서 {@link IStudioWorkflowCallStatement 커넥터 함수 호출} 등으로\n지역 변수가 생겨난 경우, 이들은 모두 반복문 블록 시작 전에 선언된 배열에 삽입된다.\n그러나, 반복문 내에서 본 `IStudioWorkflowContinueStatement` 나\n{@link IStudioWorkflowBreakStatement break} 문 등이 쓰인 경우라면, 지역 변수들은\n상위 배열에 삽입되지 않는다.\n\n```typescript\nconst array = [];\nfor (const elem of array) {\n   ...(some-statements)\n   continue;\n   array.push({\n     ...variables generated in the block\n   });\n}\n```"
      },
      "IChatbotConfigV1": {
        "type": "object",
        "properties": {
          "as_chatbot": {
            "type": "boolean",
            "title": "chatbot으로 산출할 지 여부",
            "description": "chatbot으로 산출할 지 여부."
          },
          "chatbot_session_parameter_version": {
            "const": "v1",
            "title": "workflow를 실행할 때 추가적으로 넣어줄 값들의 형태를 알기 위한 버전값",
            "description": "workflow를 실행할 때 추가적으로 넣어줄 값들의 형태를 알기 위한 버전값."
          },
          "role": {
            "type": "string",
            "title": "chatbot에게 주어질 역할",
            "description": "chatbot에게 주어질 역할."
          },
          "task": {
            "type": "string",
            "title": "chatbot에게 기대하는 task에 대한 설명",
            "description": "chatbot에게 기대하는 task에 대한 설명."
          },
          "instruction": {
            "type": "string",
            "title": "chatbot이 task를 수행할 때 지켜야할 필수규칙",
            "description": "chatbot이 task를 수행할 때 지켜야할 필수규칙."
          },
          "tone": {
            "type": "string",
            "title": "chatbot이 답변할 때 지켜야하는 톤앤매너",
            "description": "chatbot이 답변할 때 지켜야하는 톤앤매너."
          },
          "example": {
            "type": "string",
            "title": "chatbot이 참고할 수 있는 예시 질문과 답변",
            "description": "chatbot이 참고할 수 있는 예시 질문과 답변."
          },
          "first_message": {
            "type": "string",
            "title": "chatbot의 첫 메시지",
            "description": "chatbot의 첫 메시지."
          },
          "example_questions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "예시 질문",
            "description": "예시 질문."
          },
          "version": {
            "const": "v1",
            "title": "chatbot config에 어떤 값들이 있는지 알기 위해 필요한 버전값",
            "description": "chatbot config에 어떤 값들이 있는지 알기 위해 필요한 버전값."
          }
        },
        "required": [
          "as_chatbot",
          "chatbot_session_parameter_version",
          "version"
        ],
        "description": "Workflow를 chatbot (agent)로 산출할 때 사용되는 설정"
      },
      "IStudioAccountSecret.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioAccountSecret.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-secret.key"
                },
                {
                  "const": "-secret.title"
                },
                {
                  "const": "-secret.created_at"
                },
                {
                  "const": "-secret.updated_at"
                },
                {
                  "const": "+secret.key"
                },
                {
                  "const": "+secret.title"
                },
                {
                  "const": "+secret.created_at"
                },
                {
                  "const": "+secret.updated_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 및 검색 요청 정보."
      },
      "IStudioAccountSecret.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "title_or_description": {
            "type": "string"
          }
        }
      },
      "IPageIStudioAccountSecret.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountSecret.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioAccountSecret.ISummary": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "title": "변수 개수",
            "description": "변수 개수."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "key": {
            "type": "string",
            "title": "키값, 즉 변수명",
            "description": "키값, 즉 변수명."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "변수에 대한 제목",
            "description": "변수에 대한 제목."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 수정 일시",
            "description": "레코드 수정 일시."
          }
        },
        "required": [
          "count",
          "id",
          "key",
          "title",
          "created_at",
          "updated_at"
        ],
        "description": "스크릿에 대한 요약 정보."
      },
      "IStudioAccountSecret": {
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "변수를 등록한 고객 정보",
            "description": "변수를 등록한 고객 정보."
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountSecretValue"
            },
            "title": "변수 값 리스트",
            "description": "변수 값 리스트."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "변수에 대한 상세 설명",
            "description": "변수에 대한 상세 설명."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "key": {
            "type": "string",
            "title": "키값, 즉 변수명",
            "description": "키값, 즉 변수명."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "변수에 대한 제목",
            "description": "변수에 대한 제목."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 수정 일시",
            "description": "레코드 수정 일시."
          }
        },
        "required": [
          "customer",
          "values",
          "description",
          "id",
          "key",
          "title",
          "created_at",
          "updated_at"
        ],
        "description": "스튜디오 계정에 등록된 시크릿 변수 세트 정보.\n\n`IStudioAccountSecret` 은 {@link IStudioAccount 스튜디오 계정}에 등록된\n시크릿 변수의 세트를 형상화한 엔티티이다. 하나의 시크릿 {@link key} 에 대하여,\n복수의 {@link values 변수값}들을 모아둔 개념이다. 그리고 여기서 말하는 시크릿\n변수란, 타 어플리케이션과의 연동에 사용하는 인증 키나 비밀번호 등을 의미한다.\n\n참고로 시크릿 변수의 주 목적은, {@link IStudioWorkflow 워크플로우} 프로그램\n내에서, 커넥터나 워크플로우 함수에 삽입하는 파라미터 또는 일부 속성으로써\n사용하기 위함이다. {@link IAstWorkflowSecretIdentifier} 를 통하여 식별하며\n주로 구글이나 페이스북 등의 인증 키를 저장하는데 사용된다.\n\n그리고 이러한 목적 때문에, {@link IStudioAccountSecretValue.value 변수값}은\nDB 에 암호화하여 저장한다."
      },
      "IStudioAccountSecretValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "code": {
            "type": "string",
            "title": "식별자 코드",
            "description": "식별자 코드.\n\n주로 연동 대상 서비스의 계정 이메일이나 아이디 등이 사용된다."
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "권한 범위",
            "description": "권한 범위."
          },
          "value": {
            "type": "string",
            "title": "Secret value 값",
            "description": "Secret value 값."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 수정 일시",
            "description": "레코드 수정 일시."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "변수값의 만료 일시",
            "description": "변수값의 만료 일시."
          }
        },
        "required": [
          "id",
          "code",
          "scopes",
          "value",
          "created_at",
          "updated_at",
          "expired_at"
        ],
        "description": "스튜디오 계정에 등록된 전역 변수 값 정보.\n\n`IStudioAccountSecretValue` 는 {@link IStudioAccount 스튜디오 계정}에 등록된\n{@link IStudioAccountSecret 시크릿 변수 세트}의 개별 값을 형상화한 엔티티이다.\n\n그리고 여기서 말하는 시크릿 변수란, 타 어플리케이션과의 연동에 사용하는 인증 키나\n비밀번호 등을 의미한다. 참고로 시크릿 변수의 주 목적은,\n{@link IStudioWorkflow 워크플로우} 프로그램 내에서, 커넥터나 워크플로우 함수에\n삽입하는 파라미터 또는 일부 속성으로써 사용하기 위함이다.\n{@link IAstWorkflowSecretIdentifier} 를 통하여 식별하며 주로 구글이나 페이스북\n등의 인증 키를 저장하는데 사용된다.\n\n그리고 이러한 목적 때문에, {@link IStudioAccountSecretValue.value 변수값}은\nDB 에 암호화하여 저장한다."
      },
      "IStudioAccountSecretValue.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioAccountSecretValue.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-secret.key"
                },
                {
                  "const": "-secret.title"
                },
                {
                  "const": "-secret.created_at"
                },
                {
                  "const": "-secret.updated_at"
                },
                {
                  "const": "+secret.key"
                },
                {
                  "const": "+secret.title"
                },
                {
                  "const": "+secret.created_at"
                },
                {
                  "const": "+secret.updated_at"
                },
                {
                  "const": "-value.created_at"
                },
                {
                  "const": "-value.updated_at"
                },
                {
                  "const": "-value.expired_at"
                },
                {
                  "const": "-value.code"
                },
                {
                  "const": "-value.sequence"
                },
                {
                  "const": "+value.created_at"
                },
                {
                  "const": "+value.updated_at"
                },
                {
                  "const": "+value.expired_at"
                },
                {
                  "const": "+value.code"
                },
                {
                  "const": "+value.sequence"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IStudioAccountSecretValue.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "secret": {
            "$ref": "#/components/schemas/IStudioAccountSecret.IRequest.ISearch"
          }
        }
      },
      "IPageIStudioAccountSecretValue.IInvertSummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountSecretValue.IInvertSummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioAccountSecretValue.IInvertSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "code": {
            "type": "string",
            "title": "식별자 코드",
            "description": "식별자 코드.\n\n주로 연동 대상 서비스의 계정 이메일이나 아이디 등이 사용된다."
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "권한 범위",
            "description": "권한 범위."
          },
          "secret": {
            "$ref": "#/components/schemas/IStudioAccountSecret.IInvert",
            "title": "부모 Secret 정보",
            "description": "부모 Secret 정보."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 수정 일시",
            "description": "레코드 수정 일시."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "변수값의 만료 일시",
            "description": "변수값의 만료 일시."
          }
        },
        "required": [
          "id",
          "code",
          "scopes",
          "secret",
          "created_at",
          "updated_at",
          "expired_at"
        ],
        "description": "시크릿 변수의 역 참조 요약 정보."
      },
      "IStudioAccountSecret.IInvert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "key": {
            "type": "string",
            "title": "키값, 즉 변수명",
            "description": "키값, 즉 변수명."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "변수에 대한 제목",
            "description": "변수에 대한 제목."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 수정 일시",
            "description": "레코드 수정 일시."
          }
        },
        "required": [
          "id",
          "key",
          "title",
          "created_at",
          "updated_at"
        ],
        "description": "시크릿의 역 참조 정보."
      },
      "IStudioAccountWidgetTile.IMinimapItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "kind": {
            "oneOf": [
              {
                "const": "workflow"
              },
              {
                "const": "schedule"
              },
              {
                "const": "release-node"
              },
              {
                "const": "release-node-agent"
              }
            ],
            "title": "배치한 컴포넌트의 종류",
            "description": "배치한 컴포넌트의 종류."
          },
          "geometry": {
            "$ref": "#/components/schemas/IStudioAccountWidgetTileGeometry",
            "title": "좌표 및 크기 정보",
            "description": "좌표 및 크기 정보."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "id",
          "kind",
          "geometry",
          "created_at"
        ],
        "description": "타일의 미니맵 상 표기 정보."
      },
      "IStudioAccountWidgetTileGeometry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "breakpoint": {
            "$ref": "#/components/schemas/IStudioAccountWidgetTileGeometry.Breakpoint",
            "title": "반응형 UI 기준 중단점",
            "description": "반응형 UI 기준 중단점.\n\n- xs: 1 칸\n- sm: 2 칸\n- md: 4 칸\n- lg: 4 칸"
          },
          "position": {
            "$ref": "#/components/schemas/IStudioAccountWidgetTileGeometry.IPosition",
            "title": "좌표 정보",
            "description": "좌표 정보."
          },
          "scale": {
            "$ref": "#/components/schemas/IStudioAccountWidgetTileGeometry.IScale",
            "title": "크기 정보",
            "description": "크기 정보."
          },
          "pinned": {
            "type": "boolean",
            "title": "좌표 고정 여부",
            "description": "좌표 고정 여부.\n\n본 값을 `true` 로 하여, 대상 타일의 좌표를 고정할 경우,\n향후 다른 타일의 밀어내기 이동에 영향을 받지 아니함.\n\n그야말로 좌표를 완전 고정하겠다는 것."
          }
        },
        "required": [
          "id",
          "breakpoint",
          "position",
          "scale",
          "pinned"
        ],
        "description": "타일의 UI 상 중단점 별 배치 정보."
      },
      "IStudioAccountWidgetTileGeometry.Breakpoint": {
        "oneOf": [
          {
            "const": "md"
          },
          {
            "const": "xs"
          },
          {
            "const": "sm"
          },
          {
            "const": "lg"
          }
        ],
        "title": "반응형 UI 기준 중단점",
        "description": "반응형 UI 기준 중단점.\n\n- xs: 1 칸\n- sm: 2 칸\n- md: 4 칸\n- lg: 4 칸"
      },
      "IStudioAccountWidgetTileGeometry.IPosition": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer"
          },
          "y": {
            "type": "integer"
          }
        },
        "required": [
          "x",
          "y"
        ],
        "description": "좌표 정보."
      },
      "IStudioAccountWidgetTileGeometry.IScale": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "y": {
            "type": "integer",
            "exclusiveMinimum": true,
            "minimum": 0
          }
        },
        "required": [
          "x",
          "y"
        ],
        "description": "크기 정보."
      },
      "IStudioAccountWidgetTile.IRequest": {
        "type": "object",
        "properties": {
          "breakpoint": {
            "oneOf": [
              {
                "const": "md"
              },
              {
                "const": "xs"
              },
              {
                "const": "sm"
              },
              {
                "const": "lg"
              }
            ],
            "title": "반응형 UI 기준 중단점",
            "description": "반응형 UI 기준 중단점."
          },
          "boundary": {
            "$ref": "#/components/schemas/IGeometryPage.IBoundary",
            "title": "Target boundary",
            "description": "Target boundary."
          }
        },
        "required": [
          "breakpoint",
          "boundary"
        ],
        "description": "페이지 요청 및 검색 정보."
      },
      "IGeometryPage.IBoundary": {
        "type": "object",
        "properties": {
          "position": {
            "$ref": "#/components/schemas/IPoint2D",
            "title": "The starting point of the boundary",
            "description": "The starting point of the boundary."
          },
          "scale": {
            "$ref": "#/components/schemas/IPoint2D",
            "title": "The scale of the boundary",
            "description": "The scale of the boundary."
          }
        },
        "required": [
          "position",
          "scale"
        ],
        "description": "Boundary info."
      },
      "IGeometryPageIStudioAccountWidgetTile.ISummary": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "title": "Number of total records in the database",
            "description": "Number of total records in the database."
          },
          "world": {
            "$ref": "#/components/schemas/IPoint2D",
            "title": "The world size",
            "description": "The world size."
          },
          "boundary": {
            "$ref": "#/components/schemas/IGeometryPage.IBoundary",
            "title": "The boundary of the current page",
            "description": "The boundary of the current page."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountWidgetTile.ISummary"
            },
            "title": "List of records covered by the {@link boundary}",
            "description": "List of records covered by the {@link boundary}."
          }
        },
        "required": [
          "total",
          "world",
          "boundary",
          "data"
        ],
        "description": "Geometry Page.\n\nCollection of records with geometry information."
      },
      "IStudioAccountWidgetTile.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "component": {
            "$ref": "#/components/schemas/IStudioAccountWidgetTileComponent",
            "title": "배치한 컴포넌트",
            "description": "배치한 컴포넌트."
          },
          "geometry": {
            "$ref": "#/components/schemas/IStudioAccountWidgetTileGeometry",
            "title": "좌표 및 크기 정보",
            "description": "좌표 및 크기 정보."
          },
          "created_at": {
            "type": "string",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "deleted_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "레코드 삭제 일시",
            "description": "레코드 삭제 일시."
          }
        },
        "required": [
          "id",
          "component",
          "geometry",
          "created_at",
          "deleted_at"
        ],
        "description": "타일의 요약 정보.\n\n상세 정보 대비, breakpoint 가 특정되었다는 점이 다름."
      },
      "IStudioAccountWidgetTileComponent": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IStudioAccountWidgetTileComponentOfReleaseNode"
          },
          {
            "$ref": "#/components/schemas/IStudioAccountWidgetTileComponentOfSchedule"
          },
          {
            "$ref": "#/components/schemas/IStudioAccountWidgetTileComponentOfWorkflow"
          }
        ],
        "title": "스튜디오 위젯 타일에 배치되는 요소",
        "description": "스튜디오 위젯 타일에 배치되는 요소.\n\n`IStudioAccountWidgetTileComponent` 는 스튜디오의\n{@link IStudioAccountWidgetTile 위젯 타일}에 배치되는 구성요소를 형상화한\n엔티티이다.\n\n그리고 위젯 타일에는 각각 {@link IStudioRepositoryReleaseNode 릴리즈 노드}와\n{@link IStudioAccountSchedule 루틴 스케줄} 및\n{@link IStudioWorkflow 작업 중인 워크플로우} 등을 배치할 수 있는데, 이는\n{@link kind} 속성을 discriminator 로, 각각의 종류의 따라 서브타입 엔티티로\n분개된다.\n\n- `release-node`: {@link IStudioAccountWidgetTileComponentOfReleaseNode}\n- `release-node-agent`: {@link IStudioAccountWidgetTileComponentOfReleaseNode}\n- `schedule`: {@link IStudioAccountWidgetTileComponentOfSchedule}\n- `workflow`: {@link IStudioAccountWidgetTileComponentOfWorkflow}"
      },
      "IStudioAccountWidgetTileComponentOfReleaseNode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "kind": {
            "oneOf": [
              {
                "const": "release-node"
              },
              {
                "const": "release-node-agent"
              }
            ],
            "title": "타일 component 중 종류가 chatbot",
            "description": "타일 component 중 종류가 chatbot."
          },
          "node": {
            "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.IInvert",
            "title": "귀속 릴리즈 노드",
            "description": "귀속 릴리즈 노드."
          },
          "histories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory"
            },
            "title": "스케줄 실행 내역",
            "description": "스케줄 실행 내역."
          },
          "arguments": {
            "type": "array",
            "items": {},
            "title": "실행에 필요한 파라미터 값 list",
            "description": "실행에 필요한 파라미터 값 list."
          }
        },
        "required": [
          "id",
          "kind",
          "node",
          "histories",
          "arguments"
        ],
        "description": "스튜디오 위젯 타일에 배치된 릴리즈 노드.\n\n`IStudioAccountWidgetTileComponentOfReleaseNode` 는 스튜디오의\n{@link IStudioAccountWidgetTile 위젯 타일}에 배치된\n{@link IStudioRepositoryReleaseNode 릴리즈 노드}를 형상화한 엔티티이다."
      },
      "IStudioRepositoryReleaseNodeHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "customer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IHubCustomer"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "customer": "#/components/schemas/IHubCustomer"
              }
            }
          },
          "schedule": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioAccountSchedule.ISummary"
              }
            ]
          },
          "parameters": {
            "type": "array",
            "items": {}
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "started_at": {
            "type": "string",
            "format": "date-time"
          },
          "terminated_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "result": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory.IResult"
              }
            ]
          }
        },
        "required": [
          "id",
          "customer",
          "schedule",
          "parameters",
          "created_at",
          "started_at",
          "terminated_at",
          "result"
        ]
      },
      "IStudioRepositoryReleaseNodeHistory.IResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "output": {},
          "error": {},
          "completed_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "success",
          "output",
          "error",
          "completed_at"
        ]
      },
      "IStudioAccountWidgetTileComponentOfSchedule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "kind": {
            "const": "schedule",
            "title": "타일 component 중 종류가 routine",
            "description": "타일 component 중 종류가 routine."
          },
          "schedule": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioAccountSchedule"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "schedule": "#/components/schemas/IStudioAccountSchedule"
              }
            },
            "title": "스케줄 정보",
            "description": "스케줄 정보."
          },
          "histories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory"
            },
            "title": "스케줄 실행 내역",
            "description": "스케줄 실행 내역."
          }
        },
        "required": [
          "id",
          "kind",
          "schedule",
          "histories"
        ],
        "description": "스튜디오 위젯 타일에 배치된 스케줄.\n\n`IStudioAccountWidgetTileComponentOfSchedule` 는 스튜디오의\n{@link IStudioAccountWidgetTile 위젯 타일}에 배치된\n{@link IStudioAccountSchedule 스케줄}을 형상화한 엔티티이다."
      },
      "IStudioAccountWidgetTileComponentOfWorkflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "kind": {
            "const": "workflow",
            "title": "타일 component 중 종류가 작업중인 워크플로우",
            "description": "타일 component 중 종류가 작업중인 워크플로우."
          },
          "repository": {
            "$ref": "#/components/schemas/IStudioRepository.IStandalone",
            "title": "귀속 저장소 정보",
            "description": "귀속 저장소 정보."
          },
          "workflow": {
            "$ref": "#/components/schemas/IStudioWorkflow",
            "title": "작업 중인 워크플로우 문서",
            "description": "작업 중인 워크플로우 문서."
          },
          "histories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowHistory"
            },
            "title": "워크플로우 실행 내역",
            "description": "워크플로우 실행 내역."
          },
          "arguments": {
            "type": "array",
            "items": {},
            "title": "실행에 필요한 파라미터 값 list",
            "description": "실행에 필요한 파라미터 값 list."
          }
        },
        "required": [
          "id",
          "kind",
          "repository",
          "workflow",
          "histories",
          "arguments"
        ],
        "description": "스튜디오 위젯 타일에 배치된 작업 중인 워크플로우.\n\n`IStudioAccountWidgetTileComponentOfWorkflow` 는 스튜디오의\n{@link IStudioAccountWidgetTile 위젯 타일}에 배치된 작업 중인\n{@link IStudioWorkflow 워크플로우}를 형상화한 엔티티이다."
      },
      "IStudioWorkflowHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "commit_id": {
            "type": "string",
            "format": "uuid"
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer"
          },
          "metadata": {
            "$ref": "#/components/schemas/IStudioWorkflowHistory.IMetadata"
          },
          "parameters": {
            "type": "array",
            "items": {}
          },
          "result": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioWorkflowHistory.IResult"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "started_at": {
            "type": "string",
            "format": "date-time"
          },
          "terminated_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        },
        "required": [
          "id",
          "commit_id",
          "customer",
          "metadata",
          "parameters",
          "result",
          "created_at",
          "started_at",
          "terminated_at"
        ],
        "description": "워크플로우 실행 내역."
      },
      "IStudioWorkflowHistory.IMetadata": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowParameter"
            }
          },
          "output": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IString"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.ITuple"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IOneOf"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INull"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IUnknown"
              }
            ]
          },
          "components": {
            "$ref": "#/components/schemas/ISwaggerComponents"
          }
        },
        "required": [
          "parameters",
          "output",
          "components"
        ]
      },
      "IStudioWorkflowHistory.IResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "output": {},
          "error": {},
          "completed_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "success",
          "output",
          "error",
          "completed_at"
        ]
      },
      "IStudioAccountWidgetTile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "component": {
            "$ref": "#/components/schemas/IStudioAccountWidgetTileComponent",
            "title": "배치한 컴포넌트",
            "description": "배치한 컴포넌트."
          },
          "geometries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountWidgetTileGeometry"
            },
            "title": "Breakpoint 별 좌표 및 크기 정보 리스트",
            "description": "Breakpoint 별 좌표 및 크기 정보 리스트."
          },
          "created_at": {
            "type": "string",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "deleted_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "레코드 삭제 일시",
            "description": "레코드 삭제 일시."
          }
        },
        "required": [
          "id",
          "component",
          "geometries",
          "created_at",
          "deleted_at"
        ],
        "description": "스튜디오 계정 위젯 타일.\n\n`IStudioAccountWidgetTile` 은 스튜디오의 각 {@link IStudioAccount 계정}마다\n구성할 수 있는 위젯에 배치되는 개별 타일을 형상화한 엔티티이다.\n\n그리고 위젯 타일을 {@link IStudioAccountWidgetTile.ICreate 생성}시에는\n아래와 같이 {@link IStudioRepositoryReleaseNode 릴리즈 노드} 또는 그에 관계된\n엔티티 레코드를 하나 지정하여 배치할 수 있는데, 이를 어플리케이션에서 읽어들일 때는\n대상 엔티티에 연계된 릴리즈 노드의\n{@link IStudioRepositoryReleaseNodeHistory 함수 호출 내역} 중, 가장 마지막으로\n성공한 리턴값이 쓰인다.\n\n- {@link IStudioAccountSchedule}\n- {@link IStudioRepositoryReleaseNode}\n\n이외에 위젯 타일은 고유 {@link IStudioAccountWidgetTile.IGeometry 좌표 체계}를\n가지며, {@link IGeometryPage 페이지네이션} 또한 좌표 체계에 따라 이루어지는\n독특한 특성을 가지고 있다.\n\n또한 배치 좌표는 특정 위젯을 직접 지정하여 변경치 않더라도, API 상 밀어내기\n기능에 의해 수시로 변경될 수 있다. 여기서 말하는 밀어내기\n({@link IStudioAccountWidgetTile.ICreate.bash}) 란, 새로운 타일을 배치\n(또는 기존 타일을 이동) 하면서, 그것과 겹치는 것을 하단부 (Y 축) 로\n밀어버리는 것을 뜻한다. 물론, 밀려난 타일에 의해 또다른 타일들이 연쇄적으로\n밀려나는 것 또한 가능하다."
      },
      "IStudioEnterpriseEmployee.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioEnterpriseEmployee.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-employee.title"
                },
                {
                  "const": "-employee.created_at"
                },
                {
                  "const": "-employee.approved_at"
                },
                {
                  "const": "+employee.title"
                },
                {
                  "const": "+employee.created_at"
                },
                {
                  "const": "+employee.approved_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 및 검색 요청 정보."
      },
      "IStudioEnterpriseEmployee.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "title": {
            "oneOf": [
              {
                "const": "member"
              },
              {
                "const": "owner"
              },
              {
                "const": "manager"
              },
              {
                "const": "observer"
              }
            ]
          },
          "approved": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IPageIStudioEnterpriseEmployee.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioEnterpriseEmployee.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioEnterpriseEmployee.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "employee",
            "title": "Discriminated Union 타입의 식별자",
            "description": "Discriminated Union 타입의 식별자."
          },
          "member": {
            "$ref": "#/components/schemas/IHubMember",
            "title": "귀속 회원 정보",
            "description": "귀속 회원 정보."
          },
          "title": {
            "$ref": "#/components/schemas/IStudioEnterpriseEmployee.Title",
            "title": "직원에게 부여할 수 있는 직책",
            "description": "직원에게 부여할 수 있는 직책.\n\n- `owner`: 기업의 소유자. 모든 권한을 가진다\n- `manager`: 기업의 매니저, 일반 구성원에 대한 권한을 가진다\n- `member`: 일반 구성원\n- `observer`: 팀의 관람자, 오직 읽기만 가능"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "직원 초대 일시",
            "description": "직원 초대 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "직원 권한 수정 일시",
            "description": "직원 권한 수정 일시."
          },
          "approved_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "직원 초대 승인 일시",
            "description": "직원 초대 승인 일시."
          }
        },
        "required": [
          "id",
          "type",
          "member",
          "title",
          "created_at",
          "updated_at",
          "approved_at"
        ],
        "description": "직원의 요약 정보."
      },
      "IStudioEnterpriseEmployee.Title": {
        "oneOf": [
          {
            "const": "member"
          },
          {
            "const": "owner"
          },
          {
            "const": "manager"
          },
          {
            "const": "observer"
          }
        ],
        "title": "직원에게 부여할 수 있는 역할",
        "description": "직원에게 부여할 수 있는 역할.\n\n- `owner`: 기업의 소유자. 모든 권한을 가진다\n- `manager`: 기업의 매니저, 일반 구성원에 대한 권한을 가진다\n- `member`: 일반 구성원\n- `observer`: 팀의 관람자, 오직 읽기만 가능"
      },
      "IStudioEnterpriseEmployee": {
        "type": "object",
        "properties": {
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion.IInvert"
            },
            "title": "팀 소속 정보 리스트",
            "description": "팀 소속 정보 리스트."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "employee",
            "title": "Discriminated Union 타입의 식별자",
            "description": "Discriminated Union 타입의 식별자."
          },
          "member": {
            "$ref": "#/components/schemas/IHubMember",
            "title": "귀속 회원 정보",
            "description": "귀속 회원 정보."
          },
          "title": {
            "$ref": "#/components/schemas/IStudioEnterpriseEmployee.Title",
            "title": "직원에게 부여할 수 있는 직책",
            "description": "직원에게 부여할 수 있는 직책.\n\n- `owner`: 기업의 소유자. 모든 권한을 가진다\n- `manager`: 기업의 매니저, 일반 구성원에 대한 권한을 가진다\n- `member`: 일반 구성원\n- `observer`: 팀의 관람자, 오직 읽기만 가능"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "직원 초대 일시",
            "description": "직원 초대 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "직원 권한 수정 일시",
            "description": "직원 권한 수정 일시."
          },
          "approved_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "직원 초대 승인 일시",
            "description": "직원 초대 승인 일시."
          }
        },
        "required": [
          "teams",
          "id",
          "type",
          "member",
          "title",
          "created_at",
          "updated_at",
          "approved_at"
        ],
        "description": "기업 내 직원 엔티티.\n\n`IStudioEnterpriseEmployee` 는 {@link IStudioEnterprise 기업}에 소속된\n직원을 형상화한 엔티티이다. 직원은 기업 내 각 {@link IStudioEnterpriseTeam 팀}에\n{@link IStudioEnterpriseTeamCompanion 소속}되어 활동하며, 팀 단위로 기업의\n{@link IStudioRepository 저장소}로부터 {@link IStudioRepositoryAccess 권한}을\n부여받는다.\n\n참고로 직원은 오직, 본 스튜디오 시스템에 {@link IHubMember 회원}으로써 가입한 사람만이\n임명될 수 있으며, 한 사람이 여러 회사에 동시에 직원으로 소속되는 것이 가능하다."
      },
      "IStudioEnterpriseTeamCompanion.IInvert": {
        "type": "object",
        "properties": {
          "team": {
            "$ref": "#/components/schemas/IStudioEnterpriseTeam.ISummary",
            "title": "귀속 팀 정보",
            "description": "귀속 팀 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "role": {
            "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion.Role",
            "title": "팀 동료가 부여받은 역할",
            "description": "팀 동료가 부여받은 역할."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시.\n\n최초로 팀 동료로 임명된 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 수정 일시",
            "description": "레코드 수정 일시.\n\n역할이 변경된 일시와 동의어."
          }
        },
        "required": [
          "team",
          "id",
          "role",
          "created_at",
          "updated_at"
        ],
        "description": "직원으로부터의 역 참조 정보."
      },
      "IStudioEnterpriseTeam.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "team",
            "title": "Discriminated Union 타입의 식별자",
            "description": "Discriminated Union 타입의 식별자."
          },
          "code": {
            "type": "string",
            "title": "팀의 식별자 코드",
            "description": "팀의 식별자 코드.\n\n팀 페이지의 URL 주소상 경로의 일부분에 해당."
          },
          "name": {
            "type": "string",
            "title": "팀 명",
            "description": "팀 명."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "id",
          "type",
          "code",
          "name",
          "created_at"
        ],
        "description": "팀의 요약 정보."
      },
      "IStudioEnterpriseTeamCompanion.Role": {
        "oneOf": [
          {
            "const": "member"
          },
          {
            "const": "manager"
          },
          {
            "const": "observer"
          },
          {
            "const": "chief"
          }
        ],
        "title": "팀 동료의 팀 내 역할 정보",
        "description": "팀 동료의 팀 내 역할 정보."
      },
      "IStudioEnterprise.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioEnterprise.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-account.code"
                },
                {
                  "const": "+account.code"
                },
                {
                  "const": "-enterprise.name"
                },
                {
                  "const": "-enterprise.created_at"
                },
                {
                  "const": "+enterprise.name"
                },
                {
                  "const": "+enterprise.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IStudioEnterprise.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "IPageIStudioEnterprise.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioEnterprise.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioEnterprise.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "enterprise",
            "title": "Discriminated Union 타입의 식별자",
            "description": "Discriminated Union 타입의 식별자."
          },
          "account": {
            "$ref": "#/components/schemas/IStudioAccount.IInvert",
            "title": "귀속 계정 정보",
            "description": "귀속 계정 정보."
          },
          "name": {
            "type": "string",
            "title": "기업명",
            "description": "기업명."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "id",
          "type",
          "account",
          "name",
          "created_at"
        ],
        "description": "기업의 요약 정보."
      },
      "IStudioEnterprise": {
        "type": "object",
        "properties": {
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioEnterpriseTeam"
            },
            "title": "팀 리스트",
            "description": "팀 리스트."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "enterprise",
            "title": "Discriminated Union 타입의 식별자",
            "description": "Discriminated Union 타입의 식별자."
          },
          "account": {
            "$ref": "#/components/schemas/IStudioAccount.IInvert",
            "title": "귀속 계정 정보",
            "description": "귀속 계정 정보."
          },
          "name": {
            "type": "string",
            "title": "기업명",
            "description": "기업명."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "teams",
          "id",
          "type",
          "account",
          "name",
          "created_at"
        ],
        "description": "기업 엔티티.\n\n`IStudioEnterprise` 는 기업을 형상화한 엔티티로써, 문자 그대로 회사 단위로\n본 스튜디오 시스템에 참여하는 주체를 뜻한다. 그리고 기업의 경우는\n{@link IHubMember 회원} 때와 달리, 반드시 {@link IStudioAccount 계정}을 소유하고\n있어야 한다.\n\n또한 기업은 하위 엔티티로, {@link IStudioEnterpriseEmployee 직원} 및 그들로 구성된\n{@link IStudioEnterpriseTeam 팀}을 가진다. 그리고 이 중 팀은 그\n{@link IStudioEnterpriseTeamCompanion 구성원}들이 단체로 기업 귀속\n{@link IStudioRepository 저장소}의 동일한\n{@link IStudioRepositoryAccess 접근 권한}을 가질 수 있다."
      },
      "IStudioEnterpriseTeam": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "team",
            "title": "Discriminated Union 타입의 식별자",
            "description": "Discriminated Union 타입의 식별자."
          },
          "code": {
            "type": "string",
            "title": "팀의 식별자 코드",
            "description": "팀의 식별자 코드.\n\n팀 페이지의 URL 주소상 경로의 일부분에 해당."
          },
          "name": {
            "type": "string",
            "title": "팀 명",
            "description": "팀 명."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "id",
          "type",
          "code",
          "name",
          "created_at"
        ],
        "description": "기업 내 팀 정보.\n\n`IStudioEnterpriseTeam` 는 {@link IStudioEnterprise 기업} 내 팀을 형상화한\n엔티티이다. 팀은 {@link IStudioEnterpriseTeamCompanion 구성원}으로써\n{@link IStudioEnterpriseEmployee 직원}들을 거느리며, 팀 단위로 기업이 보유한\n{@link IStudioRepository 저장소}로부터\n{@link IStudioRepositoryAccess 접근 권한}을 부여받아 활동할 수 있다."
      },
      "IStudioEnterpriseTeamCompanion.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-companion.role"
                },
                {
                  "const": "-companion.created_at"
                },
                {
                  "const": "+companion.role"
                },
                {
                  "const": "+companion.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 및 검색 요청 정보."
      },
      "IStudioEnterpriseTeamCompanion.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "member"
                },
                {
                  "const": "manager"
                },
                {
                  "const": "observer"
                },
                {
                  "const": "chief"
                }
              ]
            }
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IPageIStudioEnterpriseTeamCompanion.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioEnterpriseTeamCompanion.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "role": {
            "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion.Role",
            "title": "팀 동료가 부여받은 역할",
            "description": "팀 동료가 부여받은 역할."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시.\n\n최초로 팀 동료로 임명된 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 수정 일시",
            "description": "레코드 수정 일시.\n\n역할이 변경된 일시와 동의어."
          }
        },
        "required": [
          "id",
          "role",
          "created_at",
          "updated_at"
        ],
        "description": "팀 동료의 요약 정보."
      },
      "IStudioEnterpriseTeamCompanion": {
        "type": "object",
        "properties": {
          "employee": {
            "$ref": "#/components/schemas/IStudioEnterpriseEmployee",
            "title": "대상 직원 정보",
            "description": "대상 직원 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "role": {
            "$ref": "#/components/schemas/IStudioEnterpriseTeamCompanion.Role",
            "title": "팀 동료가 부여받은 역할",
            "description": "팀 동료가 부여받은 역할."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시.\n\n최초로 팀 동료로 임명된 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 수정 일시",
            "description": "레코드 수정 일시.\n\n역할이 변경된 일시와 동의어."
          }
        },
        "required": [
          "employee",
          "id",
          "role",
          "created_at",
          "updated_at"
        ],
        "description": "기업 내 팀의 구성원 정보.\n\n`IStudioEnterpriseTeamCompanion` 는 {@link IStudioEnterprise 기업}을 구성하는\n각 {@link IStudioEnterpriseTeam 팀}에, 어떤\n{@link IStudioEnterpriseEmployee 직원}들이 구성원으로 참여하는 지를 형상화한\n엔티티이다.\n\n참고로 직원은 팀에 구성원으로 참여하며, 모종의 역할을 부여받는데, 이는 그들의 고유\n직책과 상이할 수 있다. 또한 기업의 직원은, 동시에 여러 팀에 소속되는 것이 가능하다.\n이는 한 명의 {@link IHubMember 회원}이 여러 회사에 동시에 직원으로 임명되는게\n가능했던 것과 유사."
      },
      "IStudioEnterpriseTeam.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioEnterpriseTeam.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-team.code"
                },
                {
                  "const": "-team.name"
                },
                {
                  "const": "-team.created_at"
                },
                {
                  "const": "+team.code"
                },
                {
                  "const": "+team.name"
                },
                {
                  "const": "+team.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 및 검색 요청 정보."
      },
      "IStudioEnterpriseTeam.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "IPageIStudioEnterpriseTeam.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioEnterpriseTeam.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioMetaChatSessionConnection.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioMetaChatSessionConnection.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-connection.connected_at"
                },
                {
                  "const": "-connection.disconnected_at"
                },
                {
                  "const": "+connection.connected_at"
                },
                {
                  "const": "+connection.disconnected_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 및 검색 요청 정보."
      },
      "IStudioMetaChatSessionConnection.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IPageIStudioMetaChatSessionConnection": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioMetaChatSessionConnection"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioMetaChatSessionConnection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "채팅 세션 접속자 고객 정보",
            "description": "채팅 세션 접속자 고객 정보."
          },
          "connected_at": {
            "type": "string",
            "format": "date-time",
            "title": "접속 시각",
            "description": "접속 시각."
          },
          "disconnected_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "접속 해제 시각",
            "description": "접속 해제 시각."
          }
        },
        "required": [
          "id",
          "customer",
          "connected_at",
          "disconnected_at"
        ],
        "description": "Meta LLM 채팅 세션 접속 정보.\n\n`IStudioMetaChatSessionConnection` 은 {@link IHubCustomer 고객}의\n{@link IStudioMetaChatSession Meta LLM 채팅 세션}에로의 접속 정보를\n형상화한 엔티티이다.\n\n즉, 고객이 Meta LLM 채팅 세션에 웹소켓 프로토콜로 접속할 때마다 해당 세션에\n대하여 `IStudioMetaChatSessionConnection` 레코드가 생겨나고, 고객이 웹소켓\n접속을 끊거든 {@link disconnected_at} 에 그 시각이 기록된다."
      },
      "IStudioMetaChatSessionMessage.IRequest": {
        "type": "object",
        "properties": {
          "connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "귀속 WebSocket connection 의 {@link IStudioMetaChatSessionConnection.id}",
            "description": "귀속 WebSocket connection 의 {@link IStudioMetaChatSessionConnection.id}.\n\n특정 websocket connection 한정으로 메시지를 검색하고 조회할 수 있다."
          },
          "search": {
            "$ref": "#/components/schemas/IStudioMetaChatSessionMessage.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-message.created_at"
                },
                {
                  "const": "+message.created_at"
                },
                {
                  "const": "-message.completed_at"
                },
                {
                  "const": "+message.completed_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 및 검색 요청 정보."
      },
      "IStudioMetaChatSessionMessage.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IPageIStudioMetaChatSessionMessageIStudioMetaChatSessionMessageData": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioMetaChatSessionMessageIStudioMetaChatSessionMessageData"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioMetaChatSessionMessageIStudioMetaChatSessionMessageData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "귀속 세션 접속의 {@link IStudioMetaChatSessionConnection.id}",
            "description": "귀속 세션 접속의 {@link IStudioMetaChatSessionConnection.id}.\n\n만일 세션 접속에 대한 상세 정보가 필요하거든,\n{@link  {@link IStudioMetaChatSessionConnection} 를 제공되는 SDK API\n를 통하여 직접 조회할 것."
          },
          "speaker": {
            "oneOf": [
              {
                "const": "agent"
              },
              {
                "const": "customer"
              }
            ],
            "title": "발화자는 누구인가",
            "description": "발화자는 누구인가.\n\n현 메시지의 발생자가 누구인지를 뜻하며, 반대로 말하면 RPC 함수 호출자의\n유형을 말하기도 함.\n\n즉 본 속성값이 \"customer\" 이면 클라이언트가 서버의\n{@link IStudioMetaChatService} RPC 함수를 호출한 것이고, 반대로 본\n속성값이 \"agent\" 이면 서버가 클라이언트의\n{@link IStudioMetaChatListener} RPC 함수를 호출한 경우이다.\n\n- customer: 고객 (닝겐)\n- agent: LLM Agent (로봇)"
          },
          "data": {
            "$ref": "#/components/schemas/IStudioMetaChatSessionMessageData",
            "title": "메시지 데이터",
            "description": "메시지 데이터.\n\nRPC 함수의 호출 및 응답 데이터 정보."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "메시지 생성일시",
            "description": "메시지 생성일시."
          },
          "completed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "메시지 (함수 호출) 완료일시",
            "description": "메시지 (함수 호출) 완료일시."
          }
        },
        "required": [
          "id",
          "connection_id",
          "speaker",
          "data",
          "created_at",
          "completed_at"
        ],
        "description": "Meta LLM 채팅 세션 메시지 정보.\n\n`IStudioMetaChatSessionMessage` 는\n{@link IStudioMetaChatSession Meta LLM 채팅 세션}에서 발생한 메시지를 기록한\n엔티티이다. 정확하게는 채팅 세션 내에서도 어느\n{@link IStudioMetaChatSessionConnection WebSocket connection} 에서 발생한\n것인지를 기록하고 있다.\n\n그리고 우리의 Meta LLM 채팅 세션은 웹소켓 프로토콜에 TGrid 의\n[RPC (Remote Procedure Call)](https://tgrid.com/docs/remote-procedure-call/)\n개념을 사용하고 있기에, 본 `IStudioMetaChatSessionMessage` 는 곧 RPC 함수\n호출에 대한 이력 정보 {@link IStudioMetaChatSessionMessageData} 를 포괄하는\n엔티티이기도 하다."
      },
      "IStudioMetaChatSessionMessageData": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IStudioMetaChatSessionMessageData.ITalk"
          },
          {
            "$ref": "#/components/schemas/IStudioMetaChatSessionMessageData.IFunctionCallPlan"
          },
          {
            "$ref": "#/components/schemas/IStudioMetaChatSessionMessageData.ISelectFunction"
          },
          {
            "$ref": "#/components/schemas/IStudioMetaChatSessionMessageData.IFillArgument"
          },
          {
            "$ref": "#/components/schemas/IStudioMetaChatSessionMessageData.ICompleteFunction"
          },
          {
            "$ref": "#/components/schemas/IStudioMetaChatSessionMessageData.IPrepareWorkflow"
          },
          {
            "$ref": "#/components/schemas/IStudioMetaChatSessionMessageData.ICompleteWorkflow"
          }
        ],
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "talk": "#/components/schemas/IStudioMetaChatSessionMessageData.ITalk",
            "explainFunctionCall": "#/components/schemas/IStudioMetaChatSessionMessageData.IFunctionCallPlan",
            "selectFunction": "#/components/schemas/IStudioMetaChatSessionMessageData.ISelectFunction",
            "fillArgument": "#/components/schemas/IStudioMetaChatSessionMessageData.IFillArgument",
            "completeFunction": "#/components/schemas/IStudioMetaChatSessionMessageData.ICompleteFunction",
            "prepareWorkflow": "#/components/schemas/IStudioMetaChatSessionMessageData.IPrepareWorkflow",
            "completeWorkflow": "#/components/schemas/IStudioMetaChatSessionMessageData.ICompleteWorkflow"
          }
        },
        "title": "Meta LLM 채팅 세션 메시지의 데이터 정보",
        "description": "Meta LLM 채팅 세션 메시지의 데이터 정보.\n\n`IStudioMetaChatSessionMessageData` 는\n{@link IStudioMetaChatSession Meta LLM 채팅 세션}에서 발생한\n{@link IStudioMetaChatSessionMessage 메시지}의 상세 데이터를 기록한 엔티티이다.\n\n그리고 우리의 Meta LLM 채팅 세션은 웹소켓 프로토콜에 TGrid 의\n[RPC (Remote Procedure Call)](https://tgrid.com/docs/remote-procedure-call/)\n개념을 사용하고 있기에, 본 `IStudioMetaChatSessionMessageData` 는 곧\nRPC 함수 호출에 대한 이력 정보를 뜻하는 엔티티이기도 하다."
      },
      "IStudioMetaChatSessionMessageData.ITalk": {
        "type": "object",
        "properties": {
          "dialogue": {
            "$ref": "#/components/schemas/IStudioMetaChatDialogue.IText",
            "title": "대화 데이터",
            "description": "대화 데이터."
          },
          "kind": {
            "const": "talk",
            "title": "데이터의 종류",
            "description": "데이터의 종류."
          },
          "reaction": {
            "$ref": "#/components/schemas/IExecutionResultany",
            "title": "대상 RPC 함수의 리턴값",
            "description": "대상 RPC 함수의 리턴값.\n\n서버에서 클라이언트로의 RPC 함수 호출 시에는 클라이언트 함수의 리턴값,\n그리고 클라이언트에서 서버로의 RPC 함수 호출 시에는 서버 함수의 리턴값이다.\n\n단, 함수 호출이 언제나 성공하는 것은 아니기에, 리턴값이 아닌 에러가 발생하였을\n수 있기에, returned value 및 thrown exception 의 유니언 타입에 해당하는\n{@link IExecutionResult} 가 쓰였다.\n\n> 본래 속성명이 `return` 인게 의미상 맞으나, 예약어라 일부러 피했다."
          }
        },
        "required": [
          "dialogue",
          "kind",
          "reaction"
        ],
        "description": "대화 메시지 데이터.\n\n서버에 클라이언트로의 {@link IStudioMetaChatListener.talk} 또는\n클라이언트에서 서버로의 {@link IStudioMetaChatService.talk}\nRPC (Remote Procedure Call) 함수 호출 및 응답 데이터 정보."
      },
      "IStudioMetaChatDialogue.IText": {
        "type": "object",
        "properties": {
          "kind": {
            "const": "text"
          },
          "text": {
            "type": "string"
          }
        },
        "required": [
          "kind",
          "text"
        ],
        "description": "텍스트 대화 정보."
      },
      "IStudioMetaChatSessionMessageData.IFunctionCallPlan": {
        "type": "object",
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/IStudioMetaChatFunctionCallPlan",
            "title": "함수 호출 계획",
            "description": "함수 호출 계획."
          },
          "kind": {
            "const": "explainFunctionCall",
            "title": "데이터의 종류",
            "description": "데이터의 종류."
          },
          "reaction": {
            "$ref": "#/components/schemas/IExecutionResultany",
            "title": "대상 RPC 함수의 리턴값",
            "description": "대상 RPC 함수의 리턴값.\n\n서버에서 클라이언트로의 RPC 함수 호출 시에는 클라이언트 함수의 리턴값,\n그리고 클라이언트에서 서버로의 RPC 함수 호출 시에는 서버 함수의 리턴값이다.\n\n단, 함수 호출이 언제나 성공하는 것은 아니기에, 리턴값이 아닌 에러가 발생하였을\n수 있기에, returned value 및 thrown exception 의 유니언 타입에 해당하는\n{@link IExecutionResult} 가 쓰였다.\n\n> 본래 속성명이 `return` 인게 의미상 맞으나, 예약어라 일부러 피했다."
          }
        },
        "required": [
          "plan",
          "kind",
          "reaction"
        ],
        "description": "함수 호출 계획 설명 메시지 데이터.\n\n서버에서 클라이언트로의 {@link IStudioMetaChatListener.explainFunctionCall}\nRPC (Remote Procedure Call) 함수 호출 및 응답 데이터 정보."
      },
      "IStudioMetaChatFunctionCallPlan": {
        "type": "object",
        "properties": {
          "functions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioMetaChatFunctionCallPlan.IFunction"
            },
            "title": "호출할 함수 리스트",
            "description": "호출할 함수 리스트.\n\n함수에 대한 모든 메타정보는 주지 않고, 단순 서술 정보만이 제공된다."
          },
          "general": {
            "type": "string",
            "title": "계획 전체에 대한 설명",
            "description": "계획 전체에 대한 설명."
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "각 함수 호출에 대한 설명 리스트",
            "description": "각 함수 호출에 대한 설명 리스트."
          }
        },
        "required": [
          "functions",
          "general",
          "steps"
        ],
        "description": "Meta Chat Agent 의 함수 호출 계획 설명.\n\n`IStudioMetaChatFunctionCallPlan` 은 Meta LLM 채팅 세션에서, 서버가\n클라이언트에게 함수 호출 계획을 설명할 때 사용하는 인터페이스이다. Meta LLM 이\n어떠한 함수들을 호출할 것이고, 그 호출 계획에 대한 전체/개발 수준의 설명을\n담고 있다.\n\nRPC (Remote Procedure Call) 상,\n{@link IStudioMetaChatListener.explainFunctionCall} 함수에서 사용된다."
      },
      "IStudioMetaChatFunctionCallPlan.IFunction": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "method",
          "path"
        ]
      },
      "IStudioMetaChatSessionMessageData.ISelectFunction": {
        "type": "object",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/IStudioMetaChatFunctionCall.ISelect",
            "title": "선택된 함수 데이터",
            "description": "선택된 함수 데이터."
          },
          "kind": {
            "const": "selectFunction",
            "title": "데이터의 종류",
            "description": "데이터의 종류."
          },
          "reaction": {
            "$ref": "#/components/schemas/IExecutionResultany",
            "title": "대상 RPC 함수의 리턴값",
            "description": "대상 RPC 함수의 리턴값.\n\n서버에서 클라이언트로의 RPC 함수 호출 시에는 클라이언트 함수의 리턴값,\n그리고 클라이언트에서 서버로의 RPC 함수 호출 시에는 서버 함수의 리턴값이다.\n\n단, 함수 호출이 언제나 성공하는 것은 아니기에, 리턴값이 아닌 에러가 발생하였을\n수 있기에, returned value 및 thrown exception 의 유니언 타입에 해당하는\n{@link IExecutionResult} 가 쓰였다.\n\n> 본래 속성명이 `return` 인게 의미상 맞으나, 예약어라 일부러 피했다."
          }
        },
        "required": [
          "function",
          "kind",
          "reaction"
        ],
        "description": "함수 선택 메시지 데이터.\n\n서버에서 클라이언트로의 {@link IStudioMetaChatListener.selectFunction}\nRPC (Remote Procedure Call) 함수 호출 및 응답 데이터 정보."
      },
      "IStudioMetaChatFunctionCall.ISelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "function": {
            "$ref": "#/components/schemas/OmitNever__type",
            "title": "호출 대상 함수의 메타 정보",
            "description": "호출 대상 함수의 메타 정보."
          }
        },
        "required": [
          "id",
          "function"
        ],
        "description": "LLM 이 채팅 중 호출하고자 선택한 함수 정보.\n\nLLM 이 사용자와 대화 중, 그 문맥을 파악하여 호출하고자하는 함수를 선택하였을 때,\nMeta LLM 서버는 이를 클라이언트에게 {@link IStudioMetaChatListener.selectFunction}\n함수를 호출함으로써 알려준다."
      },
      "OmitNever__type": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Representative name of the function",
            "description": "Representative name of the function."
          },
          "path": {
            "type": "string",
            "title": "Path of the endpoint",
            "description": "Path of the endpoint."
          },
          "description": {
            "type": "string",
            "title": "Description of the function",
            "description": "Description of the function."
          },
          "method": {
            "oneOf": [
              {
                "const": "get"
              },
              {
                "const": "post"
              },
              {
                "const": "patch"
              },
              {
                "const": "put"
              },
              {
                "const": "delete"
              }
            ],
            "title": "HTTP method of the endpoint",
            "description": "HTTP method of the endpoint."
          },
          "parameters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "default": {
                      "type": "boolean",
                      "title": "Default value",
                      "description": "Default value."
                    },
                    "enum": {
                      "type": "array",
                      "items": {
                        "type": "boolean"
                      },
                      "title": "Enumeration values",
                      "description": "Enumeration values."
                    },
                    "type": {
                      "const": "boolean",
                      "title": "Discriminator value of the type",
                      "description": "Discriminator value of the type."
                    },
                    "nullable": {
                      "type": "boolean",
                      "title": "Whether to allow `null` value or not",
                      "description": "Whether to allow `null` value or not."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the schema",
                      "description": "Title of the schema."
                    },
                    "description": {
                      "type": "string",
                      "title": "Detailed description of the schema",
                      "description": "Detailed description of the schema."
                    },
                    "deprecated": {
                      "type": "boolean",
                      "title": "Whether the type is deprecated or not",
                      "description": "Whether the type is deprecated or not."
                    },
                    "x-wrtn-placeholder": {
                      "type": "string",
                      "title": "Placeholder value for frontend application",
                      "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                    },
                    "x-wrtn-prerequisite": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "jmesPath": {
                              "type": "string",
                              "title": "Function returning transformed values using JMESPath expression",
                              "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "jmesPath"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "label": {
                              "type": "string",
                              "title": "Transform function returning label",
                              "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                            },
                            "value": {
                              "type": "string",
                              "title": "Transform function returning target value",
                              "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                            },
                            "array": {
                              "type": "string",
                              "title": "Transform function returning array instance",
                              "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "label",
                            "value"
                          ]
                        }
                      ],
                      "title": "Prerequisite API endpoint for the schema",
                      "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "default": {
                      "type": "number",
                      "title": "Default value",
                      "description": "Default value."
                    },
                    "enum": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      },
                      "title": "Enumeration values",
                      "description": "Enumeration values."
                    },
                    "minimum": {
                      "type": "number",
                      "title": "Minimum value restriction",
                      "description": "Minimum value restriction."
                    },
                    "maximum": {
                      "type": "number",
                      "title": "Maximum value restriction",
                      "description": "Maximum value restriction."
                    },
                    "exclusiveMinimum": {
                      "type": "boolean",
                      "title": "Exclusive minimum value restriction",
                      "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                    },
                    "exclusiveMaximum": {
                      "type": "boolean",
                      "title": "Exclusive maximum value restriction",
                      "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                    },
                    "multipleOf": {
                      "type": "number",
                      "exclusiveMinimum": true,
                      "minimum": 0,
                      "title": "Multiple of value restriction",
                      "description": "Multiple of value restriction."
                    },
                    "type": {
                      "const": "number",
                      "title": "Discriminator value of the type",
                      "description": "Discriminator value of the type."
                    },
                    "nullable": {
                      "type": "boolean",
                      "title": "Whether to allow `null` value or not",
                      "description": "Whether to allow `null` value or not."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the schema",
                      "description": "Title of the schema."
                    },
                    "description": {
                      "type": "string",
                      "title": "Detailed description of the schema",
                      "description": "Detailed description of the schema."
                    },
                    "deprecated": {
                      "type": "boolean",
                      "title": "Whether the type is deprecated or not",
                      "description": "Whether the type is deprecated or not."
                    },
                    "x-wrtn-placeholder": {
                      "type": "string",
                      "title": "Placeholder value for frontend application",
                      "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                    },
                    "x-wrtn-prerequisite": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "jmesPath": {
                              "type": "string",
                              "title": "Function returning transformed values using JMESPath expression",
                              "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "jmesPath"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "label": {
                              "type": "string",
                              "title": "Transform function returning label",
                              "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                            },
                            "value": {
                              "type": "string",
                              "title": "Transform function returning target value",
                              "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                            },
                            "array": {
                              "type": "string",
                              "title": "Transform function returning array instance",
                              "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "label",
                            "value"
                          ]
                        }
                      ],
                      "title": "Prerequisite API endpoint for the schema",
                      "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "default": {
                      "type": "integer",
                      "title": "Default value",
                      "description": "Default value."
                    },
                    "enum": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      },
                      "title": "Enumeration values",
                      "description": "Enumeration values."
                    },
                    "minimum": {
                      "type": "integer",
                      "title": "Minimum value restriction",
                      "description": "Minimum value restriction."
                    },
                    "maximum": {
                      "type": "integer",
                      "title": "Maximum value restriction",
                      "description": "Maximum value restriction."
                    },
                    "exclusiveMinimum": {
                      "type": "boolean",
                      "title": "Exclusive minimum value restriction",
                      "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                    },
                    "exclusiveMaximum": {
                      "type": "boolean",
                      "title": "Exclusive maximum value restriction",
                      "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                    },
                    "multipleOf": {
                      "type": "integer",
                      "exclusiveMinimum": true,
                      "minimum": 0,
                      "title": "Multiple of value restriction",
                      "description": "Multiple of value restriction."
                    },
                    "type": {
                      "const": "integer",
                      "title": "Discriminator value of the type",
                      "description": "Discriminator value of the type."
                    },
                    "nullable": {
                      "type": "boolean",
                      "title": "Whether to allow `null` value or not",
                      "description": "Whether to allow `null` value or not."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the schema",
                      "description": "Title of the schema."
                    },
                    "description": {
                      "type": "string",
                      "title": "Detailed description of the schema",
                      "description": "Detailed description of the schema."
                    },
                    "deprecated": {
                      "type": "boolean",
                      "title": "Whether the type is deprecated or not",
                      "description": "Whether the type is deprecated or not."
                    },
                    "x-wrtn-placeholder": {
                      "type": "string",
                      "title": "Placeholder value for frontend application",
                      "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                    },
                    "x-wrtn-prerequisite": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "jmesPath": {
                              "type": "string",
                              "title": "Function returning transformed values using JMESPath expression",
                              "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "jmesPath"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "label": {
                              "type": "string",
                              "title": "Transform function returning label",
                              "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                            },
                            "value": {
                              "type": "string",
                              "title": "Transform function returning target value",
                              "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                            },
                            "array": {
                              "type": "string",
                              "title": "Transform function returning array instance",
                              "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "label",
                            "value"
                          ]
                        }
                      ],
                      "title": "Prerequisite API endpoint for the schema",
                      "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "default": {
                      "type": "string",
                      "title": "Default value",
                      "description": "Default value."
                    },
                    "enum": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "title": "Enumeration values",
                      "description": "Enumeration values."
                    },
                    "format": {
                      "type": "string",
                      "title": "Format restriction",
                      "description": "Format restriction."
                    },
                    "pattern": {
                      "type": "string",
                      "title": "Pattern restriction",
                      "description": "Pattern restriction."
                    },
                    "minLength": {
                      "type": "integer",
                      "title": "Minimum length restriction",
                      "description": "Minimum length restriction."
                    },
                    "maxLength": {
                      "type": "integer",
                      "title": "Maximum length restriction",
                      "description": "Maximum length restriction."
                    },
                    "contentMediaType": {
                      "type": "string",
                      "title": "Content media type restriction",
                      "description": "Content media type restriction."
                    },
                    "x-wrtn-secret-key": {
                      "type": "string",
                      "title": "Secret key for the schema",
                      "description": "Secret key for the schema.\n\n`x-wrtn-secret-key` is a property means a secret key that is required\nfor the target API endpoint calling. If the secret key is not filled,\nthe API call would be failed."
                    },
                    "x-wrtn-secret-scopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "title": "Secret scopes for the schema",
                      "description": "Secret scopes for the schema.\n\n`x-wrtn-secret-scopes` is a property means a list of secret scopes that\nare required for the target API endpoint calling. If the secret scopes\nare not satisfied, the API call would be failed."
                    },
                    "type": {
                      "const": "string",
                      "title": "Discriminator value of the type",
                      "description": "Discriminator value of the type."
                    },
                    "nullable": {
                      "type": "boolean",
                      "title": "Whether to allow `null` value or not",
                      "description": "Whether to allow `null` value or not."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the schema",
                      "description": "Title of the schema."
                    },
                    "description": {
                      "type": "string",
                      "title": "Detailed description of the schema",
                      "description": "Detailed description of the schema."
                    },
                    "deprecated": {
                      "type": "boolean",
                      "title": "Whether the type is deprecated or not",
                      "description": "Whether the type is deprecated or not."
                    },
                    "x-wrtn-placeholder": {
                      "type": "string",
                      "title": "Placeholder value for frontend application",
                      "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                    },
                    "x-wrtn-prerequisite": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "jmesPath": {
                              "type": "string",
                              "title": "Function returning transformed values using JMESPath expression",
                              "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "jmesPath"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "label": {
                              "type": "string",
                              "title": "Transform function returning label",
                              "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                            },
                            "value": {
                              "type": "string",
                              "title": "Transform function returning target value",
                              "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                            },
                            "array": {
                              "type": "string",
                              "title": "Transform function returning array instance",
                              "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "label",
                            "value"
                          ]
                        }
                      ],
                      "title": "Prerequisite API endpoint for the schema",
                      "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                {
                  "$ref": "#/components/schemas/__type.o69"
                },
                {
                  "$ref": "#/components/schemas/__type.o70"
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "const": "null",
                      "title": "Type is always `null`",
                      "description": "Type is always `null`."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the schema",
                      "description": "Title of the schema."
                    },
                    "description": {
                      "type": "string",
                      "title": "Detailed description of the schema",
                      "description": "Detailed description of the schema."
                    },
                    "deprecated": {
                      "type": "boolean",
                      "title": "Whether the type is deprecated or not",
                      "description": "Whether the type is deprecated or not."
                    },
                    "x-wrtn-placeholder": {
                      "type": "string",
                      "title": "Placeholder value for frontend application",
                      "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                    },
                    "x-wrtn-prerequisite": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "jmesPath": {
                              "type": "string",
                              "title": "Function returning transformed values using JMESPath expression",
                              "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "jmesPath"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "label": {
                              "type": "string",
                              "title": "Transform function returning label",
                              "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                            },
                            "value": {
                              "type": "string",
                              "title": "Transform function returning target value",
                              "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                            },
                            "array": {
                              "type": "string",
                              "title": "Transform function returning array instance",
                              "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "label",
                            "value"
                          ]
                        }
                      ],
                      "title": "Prerequisite API endpoint for the schema",
                      "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "title": "Title of the schema",
                      "description": "Title of the schema."
                    },
                    "description": {
                      "type": "string",
                      "title": "Detailed description of the schema",
                      "description": "Detailed description of the schema."
                    },
                    "deprecated": {
                      "type": "boolean",
                      "title": "Whether the type is deprecated or not",
                      "description": "Whether the type is deprecated or not."
                    },
                    "x-wrtn-placeholder": {
                      "type": "string",
                      "title": "Placeholder value for frontend application",
                      "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                    },
                    "x-wrtn-prerequisite": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "jmesPath": {
                              "type": "string",
                              "title": "Function returning transformed values using JMESPath expression",
                              "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "jmesPath"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "label": {
                              "type": "string",
                              "title": "Transform function returning label",
                              "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                            },
                            "value": {
                              "type": "string",
                              "title": "Transform function returning target value",
                              "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                            },
                            "array": {
                              "type": "string",
                              "title": "Transform function returning array instance",
                              "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "label",
                            "value"
                          ]
                        }
                      ],
                      "title": "Prerequisite API endpoint for the schema",
                      "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/__type.o74"
                }
              ]
            },
            "title": "List of parameter schemas",
            "description": "List of parameter schemas."
          },
          "separated": {
            "type": "object",
            "properties": {
              "llm": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "index": {
                      "type": "number",
                      "title": "Index of the parameter",
                      "description": "Index of the parameter."
                    },
                    "schema": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "boolean",
                              "title": "Default value",
                              "description": "Default value."
                            },
                            "enum": {
                              "type": "array",
                              "items": {
                                "type": "boolean"
                              },
                              "title": "Enumeration values",
                              "description": "Enumeration values."
                            },
                            "type": {
                              "const": "boolean",
                              "title": "Discriminator value of the type",
                              "description": "Discriminator value of the type."
                            },
                            "nullable": {
                              "type": "boolean",
                              "title": "Whether to allow `null` value or not",
                              "description": "Whether to allow `null` value or not."
                            },
                            "title": {
                              "type": "string",
                              "title": "Title of the schema",
                              "description": "Title of the schema."
                            },
                            "description": {
                              "type": "string",
                              "title": "Detailed description of the schema",
                              "description": "Detailed description of the schema."
                            },
                            "deprecated": {
                              "type": "boolean",
                              "title": "Whether the type is deprecated or not",
                              "description": "Whether the type is deprecated or not."
                            },
                            "x-wrtn-placeholder": {
                              "type": "string",
                              "title": "Placeholder value for frontend application",
                              "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                            },
                            "x-wrtn-prerequisite": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "jmesPath": {
                                      "type": "string",
                                      "title": "Function returning transformed values using JMESPath expression",
                                      "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "jmesPath"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "label": {
                                      "type": "string",
                                      "title": "Transform function returning label",
                                      "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Transform function returning target value",
                                      "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                                    },
                                    "array": {
                                      "type": "string",
                                      "title": "Transform function returning array instance",
                                      "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "label",
                                    "value"
                                  ]
                                }
                              ],
                              "title": "Prerequisite API endpoint for the schema",
                              "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "number",
                              "title": "Default value",
                              "description": "Default value."
                            },
                            "enum": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              },
                              "title": "Enumeration values",
                              "description": "Enumeration values."
                            },
                            "minimum": {
                              "type": "number",
                              "title": "Minimum value restriction",
                              "description": "Minimum value restriction."
                            },
                            "maximum": {
                              "type": "number",
                              "title": "Maximum value restriction",
                              "description": "Maximum value restriction."
                            },
                            "exclusiveMinimum": {
                              "type": "boolean",
                              "title": "Exclusive minimum value restriction",
                              "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                            },
                            "exclusiveMaximum": {
                              "type": "boolean",
                              "title": "Exclusive maximum value restriction",
                              "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                            },
                            "multipleOf": {
                              "type": "number",
                              "exclusiveMinimum": true,
                              "minimum": 0,
                              "title": "Multiple of value restriction",
                              "description": "Multiple of value restriction."
                            },
                            "type": {
                              "const": "number",
                              "title": "Discriminator value of the type",
                              "description": "Discriminator value of the type."
                            },
                            "nullable": {
                              "type": "boolean",
                              "title": "Whether to allow `null` value or not",
                              "description": "Whether to allow `null` value or not."
                            },
                            "title": {
                              "type": "string",
                              "title": "Title of the schema",
                              "description": "Title of the schema."
                            },
                            "description": {
                              "type": "string",
                              "title": "Detailed description of the schema",
                              "description": "Detailed description of the schema."
                            },
                            "deprecated": {
                              "type": "boolean",
                              "title": "Whether the type is deprecated or not",
                              "description": "Whether the type is deprecated or not."
                            },
                            "x-wrtn-placeholder": {
                              "type": "string",
                              "title": "Placeholder value for frontend application",
                              "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                            },
                            "x-wrtn-prerequisite": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "jmesPath": {
                                      "type": "string",
                                      "title": "Function returning transformed values using JMESPath expression",
                                      "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "jmesPath"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "label": {
                                      "type": "string",
                                      "title": "Transform function returning label",
                                      "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Transform function returning target value",
                                      "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                                    },
                                    "array": {
                                      "type": "string",
                                      "title": "Transform function returning array instance",
                                      "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "label",
                                    "value"
                                  ]
                                }
                              ],
                              "title": "Prerequisite API endpoint for the schema",
                              "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "integer",
                              "title": "Default value",
                              "description": "Default value."
                            },
                            "enum": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              },
                              "title": "Enumeration values",
                              "description": "Enumeration values."
                            },
                            "minimum": {
                              "type": "integer",
                              "title": "Minimum value restriction",
                              "description": "Minimum value restriction."
                            },
                            "maximum": {
                              "type": "integer",
                              "title": "Maximum value restriction",
                              "description": "Maximum value restriction."
                            },
                            "exclusiveMinimum": {
                              "type": "boolean",
                              "title": "Exclusive minimum value restriction",
                              "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                            },
                            "exclusiveMaximum": {
                              "type": "boolean",
                              "title": "Exclusive maximum value restriction",
                              "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                            },
                            "multipleOf": {
                              "type": "integer",
                              "exclusiveMinimum": true,
                              "minimum": 0,
                              "title": "Multiple of value restriction",
                              "description": "Multiple of value restriction."
                            },
                            "type": {
                              "const": "integer",
                              "title": "Discriminator value of the type",
                              "description": "Discriminator value of the type."
                            },
                            "nullable": {
                              "type": "boolean",
                              "title": "Whether to allow `null` value or not",
                              "description": "Whether to allow `null` value or not."
                            },
                            "title": {
                              "type": "string",
                              "title": "Title of the schema",
                              "description": "Title of the schema."
                            },
                            "description": {
                              "type": "string",
                              "title": "Detailed description of the schema",
                              "description": "Detailed description of the schema."
                            },
                            "deprecated": {
                              "type": "boolean",
                              "title": "Whether the type is deprecated or not",
                              "description": "Whether the type is deprecated or not."
                            },
                            "x-wrtn-placeholder": {
                              "type": "string",
                              "title": "Placeholder value for frontend application",
                              "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                            },
                            "x-wrtn-prerequisite": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "jmesPath": {
                                      "type": "string",
                                      "title": "Function returning transformed values using JMESPath expression",
                                      "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "jmesPath"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "label": {
                                      "type": "string",
                                      "title": "Transform function returning label",
                                      "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Transform function returning target value",
                                      "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                                    },
                                    "array": {
                                      "type": "string",
                                      "title": "Transform function returning array instance",
                                      "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "label",
                                    "value"
                                  ]
                                }
                              ],
                              "title": "Prerequisite API endpoint for the schema",
                              "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "string",
                              "title": "Default value",
                              "description": "Default value."
                            },
                            "enum": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "title": "Enumeration values",
                              "description": "Enumeration values."
                            },
                            "format": {
                              "type": "string",
                              "title": "Format restriction",
                              "description": "Format restriction."
                            },
                            "pattern": {
                              "type": "string",
                              "title": "Pattern restriction",
                              "description": "Pattern restriction."
                            },
                            "minLength": {
                              "type": "integer",
                              "title": "Minimum length restriction",
                              "description": "Minimum length restriction."
                            },
                            "maxLength": {
                              "type": "integer",
                              "title": "Maximum length restriction",
                              "description": "Maximum length restriction."
                            },
                            "contentMediaType": {
                              "type": "string",
                              "title": "Content media type restriction",
                              "description": "Content media type restriction."
                            },
                            "x-wrtn-secret-key": {
                              "type": "string",
                              "title": "Secret key for the schema",
                              "description": "Secret key for the schema.\n\n`x-wrtn-secret-key` is a property means a secret key that is required\nfor the target API endpoint calling. If the secret key is not filled,\nthe API call would be failed."
                            },
                            "x-wrtn-secret-scopes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "title": "Secret scopes for the schema",
                              "description": "Secret scopes for the schema.\n\n`x-wrtn-secret-scopes` is a property means a list of secret scopes that\nare required for the target API endpoint calling. If the secret scopes\nare not satisfied, the API call would be failed."
                            },
                            "type": {
                              "const": "string",
                              "title": "Discriminator value of the type",
                              "description": "Discriminator value of the type."
                            },
                            "nullable": {
                              "type": "boolean",
                              "title": "Whether to allow `null` value or not",
                              "description": "Whether to allow `null` value or not."
                            },
                            "title": {
                              "type": "string",
                              "title": "Title of the schema",
                              "description": "Title of the schema."
                            },
                            "description": {
                              "type": "string",
                              "title": "Detailed description of the schema",
                              "description": "Detailed description of the schema."
                            },
                            "deprecated": {
                              "type": "boolean",
                              "title": "Whether the type is deprecated or not",
                              "description": "Whether the type is deprecated or not."
                            },
                            "x-wrtn-placeholder": {
                              "type": "string",
                              "title": "Placeholder value for frontend application",
                              "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                            },
                            "x-wrtn-prerequisite": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "jmesPath": {
                                      "type": "string",
                                      "title": "Function returning transformed values using JMESPath expression",
                                      "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "jmesPath"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "label": {
                                      "type": "string",
                                      "title": "Transform function returning label",
                                      "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Transform function returning target value",
                                      "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                                    },
                                    "array": {
                                      "type": "string",
                                      "title": "Transform function returning array instance",
                                      "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "label",
                                    "value"
                                  ]
                                }
                              ],
                              "title": "Prerequisite API endpoint for the schema",
                              "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "$ref": "#/components/schemas/__type.o69"
                        },
                        {
                          "$ref": "#/components/schemas/__type.o70"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "const": "null",
                              "title": "Type is always `null`",
                              "description": "Type is always `null`."
                            },
                            "title": {
                              "type": "string",
                              "title": "Title of the schema",
                              "description": "Title of the schema."
                            },
                            "description": {
                              "type": "string",
                              "title": "Detailed description of the schema",
                              "description": "Detailed description of the schema."
                            },
                            "deprecated": {
                              "type": "boolean",
                              "title": "Whether the type is deprecated or not",
                              "description": "Whether the type is deprecated or not."
                            },
                            "x-wrtn-placeholder": {
                              "type": "string",
                              "title": "Placeholder value for frontend application",
                              "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                            },
                            "x-wrtn-prerequisite": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "jmesPath": {
                                      "type": "string",
                                      "title": "Function returning transformed values using JMESPath expression",
                                      "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "jmesPath"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "label": {
                                      "type": "string",
                                      "title": "Transform function returning label",
                                      "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Transform function returning target value",
                                      "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                                    },
                                    "array": {
                                      "type": "string",
                                      "title": "Transform function returning array instance",
                                      "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "label",
                                    "value"
                                  ]
                                }
                              ],
                              "title": "Prerequisite API endpoint for the schema",
                              "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "title": "Title of the schema",
                              "description": "Title of the schema."
                            },
                            "description": {
                              "type": "string",
                              "title": "Detailed description of the schema",
                              "description": "Detailed description of the schema."
                            },
                            "deprecated": {
                              "type": "boolean",
                              "title": "Whether the type is deprecated or not",
                              "description": "Whether the type is deprecated or not."
                            },
                            "x-wrtn-placeholder": {
                              "type": "string",
                              "title": "Placeholder value for frontend application",
                              "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                            },
                            "x-wrtn-prerequisite": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "jmesPath": {
                                      "type": "string",
                                      "title": "Function returning transformed values using JMESPath expression",
                                      "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "jmesPath"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "label": {
                                      "type": "string",
                                      "title": "Transform function returning label",
                                      "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Transform function returning target value",
                                      "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                                    },
                                    "array": {
                                      "type": "string",
                                      "title": "Transform function returning array instance",
                                      "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "label",
                                    "value"
                                  ]
                                }
                              ],
                              "title": "Prerequisite API endpoint for the schema",
                              "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                            }
                          }
                        },
                        {
                          "$ref": "#/components/schemas/__type.o74"
                        }
                      ],
                      "title": "Type schema info of the parameter",
                      "description": "Type schema info of the parameter."
                    }
                  },
                  "required": [
                    "index",
                    "schema"
                  ]
                },
                "title": "Parameters that would be composed by the OpenAI",
                "description": "Parameters that would be composed by the OpenAI."
              },
              "human": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "index": {
                      "type": "number",
                      "title": "Index of the parameter",
                      "description": "Index of the parameter."
                    },
                    "schema": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "boolean",
                              "title": "Default value",
                              "description": "Default value."
                            },
                            "enum": {
                              "type": "array",
                              "items": {
                                "type": "boolean"
                              },
                              "title": "Enumeration values",
                              "description": "Enumeration values."
                            },
                            "type": {
                              "const": "boolean",
                              "title": "Discriminator value of the type",
                              "description": "Discriminator value of the type."
                            },
                            "nullable": {
                              "type": "boolean",
                              "title": "Whether to allow `null` value or not",
                              "description": "Whether to allow `null` value or not."
                            },
                            "title": {
                              "type": "string",
                              "title": "Title of the schema",
                              "description": "Title of the schema."
                            },
                            "description": {
                              "type": "string",
                              "title": "Detailed description of the schema",
                              "description": "Detailed description of the schema."
                            },
                            "deprecated": {
                              "type": "boolean",
                              "title": "Whether the type is deprecated or not",
                              "description": "Whether the type is deprecated or not."
                            },
                            "x-wrtn-placeholder": {
                              "type": "string",
                              "title": "Placeholder value for frontend application",
                              "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                            },
                            "x-wrtn-prerequisite": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "jmesPath": {
                                      "type": "string",
                                      "title": "Function returning transformed values using JMESPath expression",
                                      "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "jmesPath"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "label": {
                                      "type": "string",
                                      "title": "Transform function returning label",
                                      "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Transform function returning target value",
                                      "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                                    },
                                    "array": {
                                      "type": "string",
                                      "title": "Transform function returning array instance",
                                      "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "label",
                                    "value"
                                  ]
                                }
                              ],
                              "title": "Prerequisite API endpoint for the schema",
                              "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "number",
                              "title": "Default value",
                              "description": "Default value."
                            },
                            "enum": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              },
                              "title": "Enumeration values",
                              "description": "Enumeration values."
                            },
                            "minimum": {
                              "type": "number",
                              "title": "Minimum value restriction",
                              "description": "Minimum value restriction."
                            },
                            "maximum": {
                              "type": "number",
                              "title": "Maximum value restriction",
                              "description": "Maximum value restriction."
                            },
                            "exclusiveMinimum": {
                              "type": "boolean",
                              "title": "Exclusive minimum value restriction",
                              "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                            },
                            "exclusiveMaximum": {
                              "type": "boolean",
                              "title": "Exclusive maximum value restriction",
                              "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                            },
                            "multipleOf": {
                              "type": "number",
                              "exclusiveMinimum": true,
                              "minimum": 0,
                              "title": "Multiple of value restriction",
                              "description": "Multiple of value restriction."
                            },
                            "type": {
                              "const": "number",
                              "title": "Discriminator value of the type",
                              "description": "Discriminator value of the type."
                            },
                            "nullable": {
                              "type": "boolean",
                              "title": "Whether to allow `null` value or not",
                              "description": "Whether to allow `null` value or not."
                            },
                            "title": {
                              "type": "string",
                              "title": "Title of the schema",
                              "description": "Title of the schema."
                            },
                            "description": {
                              "type": "string",
                              "title": "Detailed description of the schema",
                              "description": "Detailed description of the schema."
                            },
                            "deprecated": {
                              "type": "boolean",
                              "title": "Whether the type is deprecated or not",
                              "description": "Whether the type is deprecated or not."
                            },
                            "x-wrtn-placeholder": {
                              "type": "string",
                              "title": "Placeholder value for frontend application",
                              "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                            },
                            "x-wrtn-prerequisite": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "jmesPath": {
                                      "type": "string",
                                      "title": "Function returning transformed values using JMESPath expression",
                                      "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "jmesPath"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "label": {
                                      "type": "string",
                                      "title": "Transform function returning label",
                                      "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Transform function returning target value",
                                      "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                                    },
                                    "array": {
                                      "type": "string",
                                      "title": "Transform function returning array instance",
                                      "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "label",
                                    "value"
                                  ]
                                }
                              ],
                              "title": "Prerequisite API endpoint for the schema",
                              "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "integer",
                              "title": "Default value",
                              "description": "Default value."
                            },
                            "enum": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              },
                              "title": "Enumeration values",
                              "description": "Enumeration values."
                            },
                            "minimum": {
                              "type": "integer",
                              "title": "Minimum value restriction",
                              "description": "Minimum value restriction."
                            },
                            "maximum": {
                              "type": "integer",
                              "title": "Maximum value restriction",
                              "description": "Maximum value restriction."
                            },
                            "exclusiveMinimum": {
                              "type": "boolean",
                              "title": "Exclusive minimum value restriction",
                              "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                            },
                            "exclusiveMaximum": {
                              "type": "boolean",
                              "title": "Exclusive maximum value restriction",
                              "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                            },
                            "multipleOf": {
                              "type": "integer",
                              "exclusiveMinimum": true,
                              "minimum": 0,
                              "title": "Multiple of value restriction",
                              "description": "Multiple of value restriction."
                            },
                            "type": {
                              "const": "integer",
                              "title": "Discriminator value of the type",
                              "description": "Discriminator value of the type."
                            },
                            "nullable": {
                              "type": "boolean",
                              "title": "Whether to allow `null` value or not",
                              "description": "Whether to allow `null` value or not."
                            },
                            "title": {
                              "type": "string",
                              "title": "Title of the schema",
                              "description": "Title of the schema."
                            },
                            "description": {
                              "type": "string",
                              "title": "Detailed description of the schema",
                              "description": "Detailed description of the schema."
                            },
                            "deprecated": {
                              "type": "boolean",
                              "title": "Whether the type is deprecated or not",
                              "description": "Whether the type is deprecated or not."
                            },
                            "x-wrtn-placeholder": {
                              "type": "string",
                              "title": "Placeholder value for frontend application",
                              "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                            },
                            "x-wrtn-prerequisite": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "jmesPath": {
                                      "type": "string",
                                      "title": "Function returning transformed values using JMESPath expression",
                                      "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "jmesPath"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "label": {
                                      "type": "string",
                                      "title": "Transform function returning label",
                                      "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Transform function returning target value",
                                      "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                                    },
                                    "array": {
                                      "type": "string",
                                      "title": "Transform function returning array instance",
                                      "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "label",
                                    "value"
                                  ]
                                }
                              ],
                              "title": "Prerequisite API endpoint for the schema",
                              "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "default": {
                              "type": "string",
                              "title": "Default value",
                              "description": "Default value."
                            },
                            "enum": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "title": "Enumeration values",
                              "description": "Enumeration values."
                            },
                            "format": {
                              "type": "string",
                              "title": "Format restriction",
                              "description": "Format restriction."
                            },
                            "pattern": {
                              "type": "string",
                              "title": "Pattern restriction",
                              "description": "Pattern restriction."
                            },
                            "minLength": {
                              "type": "integer",
                              "title": "Minimum length restriction",
                              "description": "Minimum length restriction."
                            },
                            "maxLength": {
                              "type": "integer",
                              "title": "Maximum length restriction",
                              "description": "Maximum length restriction."
                            },
                            "contentMediaType": {
                              "type": "string",
                              "title": "Content media type restriction",
                              "description": "Content media type restriction."
                            },
                            "x-wrtn-secret-key": {
                              "type": "string",
                              "title": "Secret key for the schema",
                              "description": "Secret key for the schema.\n\n`x-wrtn-secret-key` is a property means a secret key that is required\nfor the target API endpoint calling. If the secret key is not filled,\nthe API call would be failed."
                            },
                            "x-wrtn-secret-scopes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "title": "Secret scopes for the schema",
                              "description": "Secret scopes for the schema.\n\n`x-wrtn-secret-scopes` is a property means a list of secret scopes that\nare required for the target API endpoint calling. If the secret scopes\nare not satisfied, the API call would be failed."
                            },
                            "type": {
                              "const": "string",
                              "title": "Discriminator value of the type",
                              "description": "Discriminator value of the type."
                            },
                            "nullable": {
                              "type": "boolean",
                              "title": "Whether to allow `null` value or not",
                              "description": "Whether to allow `null` value or not."
                            },
                            "title": {
                              "type": "string",
                              "title": "Title of the schema",
                              "description": "Title of the schema."
                            },
                            "description": {
                              "type": "string",
                              "title": "Detailed description of the schema",
                              "description": "Detailed description of the schema."
                            },
                            "deprecated": {
                              "type": "boolean",
                              "title": "Whether the type is deprecated or not",
                              "description": "Whether the type is deprecated or not."
                            },
                            "x-wrtn-placeholder": {
                              "type": "string",
                              "title": "Placeholder value for frontend application",
                              "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                            },
                            "x-wrtn-prerequisite": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "jmesPath": {
                                      "type": "string",
                                      "title": "Function returning transformed values using JMESPath expression",
                                      "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "jmesPath"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "label": {
                                      "type": "string",
                                      "title": "Transform function returning label",
                                      "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Transform function returning target value",
                                      "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                                    },
                                    "array": {
                                      "type": "string",
                                      "title": "Transform function returning array instance",
                                      "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "label",
                                    "value"
                                  ]
                                }
                              ],
                              "title": "Prerequisite API endpoint for the schema",
                              "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "$ref": "#/components/schemas/__type.o69"
                        },
                        {
                          "$ref": "#/components/schemas/__type.o70"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "const": "null",
                              "title": "Type is always `null`",
                              "description": "Type is always `null`."
                            },
                            "title": {
                              "type": "string",
                              "title": "Title of the schema",
                              "description": "Title of the schema."
                            },
                            "description": {
                              "type": "string",
                              "title": "Detailed description of the schema",
                              "description": "Detailed description of the schema."
                            },
                            "deprecated": {
                              "type": "boolean",
                              "title": "Whether the type is deprecated or not",
                              "description": "Whether the type is deprecated or not."
                            },
                            "x-wrtn-placeholder": {
                              "type": "string",
                              "title": "Placeholder value for frontend application",
                              "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                            },
                            "x-wrtn-prerequisite": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "jmesPath": {
                                      "type": "string",
                                      "title": "Function returning transformed values using JMESPath expression",
                                      "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "jmesPath"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "label": {
                                      "type": "string",
                                      "title": "Transform function returning label",
                                      "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Transform function returning target value",
                                      "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                                    },
                                    "array": {
                                      "type": "string",
                                      "title": "Transform function returning array instance",
                                      "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "label",
                                    "value"
                                  ]
                                }
                              ],
                              "title": "Prerequisite API endpoint for the schema",
                              "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "title": "Title of the schema",
                              "description": "Title of the schema."
                            },
                            "description": {
                              "type": "string",
                              "title": "Detailed description of the schema",
                              "description": "Detailed description of the schema."
                            },
                            "deprecated": {
                              "type": "boolean",
                              "title": "Whether the type is deprecated or not",
                              "description": "Whether the type is deprecated or not."
                            },
                            "x-wrtn-placeholder": {
                              "type": "string",
                              "title": "Placeholder value for frontend application",
                              "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                            },
                            "x-wrtn-prerequisite": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "jmesPath": {
                                      "type": "string",
                                      "title": "Function returning transformed values using JMESPath expression",
                                      "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "jmesPath"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "oneOf": [
                                        {
                                          "const": "get"
                                        },
                                        {
                                          "const": "post"
                                        },
                                        {
                                          "const": "patch"
                                        },
                                        {
                                          "const": "put"
                                        },
                                        {
                                          "const": "delete"
                                        }
                                      ],
                                      "title": "HTTP method to call the endpoint",
                                      "description": "HTTP method to call the endpoint."
                                    },
                                    "path": {
                                      "type": "string",
                                      "title": "Path of the endpoint",
                                      "description": "Path of the endpoint."
                                    },
                                    "label": {
                                      "type": "string",
                                      "title": "Transform function returning label",
                                      "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                                    },
                                    "value": {
                                      "type": "string",
                                      "title": "Transform function returning target value",
                                      "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                                    },
                                    "array": {
                                      "type": "string",
                                      "title": "Transform function returning array instance",
                                      "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                                    }
                                  },
                                  "required": [
                                    "method",
                                    "path",
                                    "label",
                                    "value"
                                  ]
                                }
                              ],
                              "title": "Prerequisite API endpoint for the schema",
                              "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                            }
                          }
                        },
                        {
                          "$ref": "#/components/schemas/__type.o74"
                        }
                      ],
                      "title": "Type schema info of the parameter",
                      "description": "Type schema info of the parameter."
                    }
                  },
                  "required": [
                    "index",
                    "schema"
                  ]
                },
                "title": "Parameters that would be composed by the human",
                "description": "Parameters that would be composed by the human."
              }
            },
            "required": [
              "llm",
              "human"
            ],
            "title": "Collection of separated parameters",
            "description": "Collection of separated parameters.\n\nFilled only when {@link IOpenAiDocument.IOptions.separate} has been configured."
          },
          "output": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "boolean",
                    "title": "Default value",
                    "description": "Default value."
                  },
                  "enum": {
                    "type": "array",
                    "items": {
                      "type": "boolean"
                    },
                    "title": "Enumeration values",
                    "description": "Enumeration values."
                  },
                  "type": {
                    "const": "boolean",
                    "title": "Discriminator value of the type",
                    "description": "Discriminator value of the type."
                  },
                  "nullable": {
                    "type": "boolean",
                    "title": "Whether to allow `null` value or not",
                    "description": "Whether to allow `null` value or not."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "number",
                    "title": "Default value",
                    "description": "Default value."
                  },
                  "enum": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "title": "Enumeration values",
                    "description": "Enumeration values."
                  },
                  "minimum": {
                    "type": "number",
                    "title": "Minimum value restriction",
                    "description": "Minimum value restriction."
                  },
                  "maximum": {
                    "type": "number",
                    "title": "Maximum value restriction",
                    "description": "Maximum value restriction."
                  },
                  "exclusiveMinimum": {
                    "type": "boolean",
                    "title": "Exclusive minimum value restriction",
                    "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                  },
                  "exclusiveMaximum": {
                    "type": "boolean",
                    "title": "Exclusive maximum value restriction",
                    "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                  },
                  "multipleOf": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0,
                    "title": "Multiple of value restriction",
                    "description": "Multiple of value restriction."
                  },
                  "type": {
                    "const": "number",
                    "title": "Discriminator value of the type",
                    "description": "Discriminator value of the type."
                  },
                  "nullable": {
                    "type": "boolean",
                    "title": "Whether to allow `null` value or not",
                    "description": "Whether to allow `null` value or not."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "integer",
                    "title": "Default value",
                    "description": "Default value."
                  },
                  "enum": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "title": "Enumeration values",
                    "description": "Enumeration values."
                  },
                  "minimum": {
                    "type": "integer",
                    "title": "Minimum value restriction",
                    "description": "Minimum value restriction."
                  },
                  "maximum": {
                    "type": "integer",
                    "title": "Maximum value restriction",
                    "description": "Maximum value restriction."
                  },
                  "exclusiveMinimum": {
                    "type": "boolean",
                    "title": "Exclusive minimum value restriction",
                    "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                  },
                  "exclusiveMaximum": {
                    "type": "boolean",
                    "title": "Exclusive maximum value restriction",
                    "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                  },
                  "multipleOf": {
                    "type": "integer",
                    "exclusiveMinimum": true,
                    "minimum": 0,
                    "title": "Multiple of value restriction",
                    "description": "Multiple of value restriction."
                  },
                  "type": {
                    "const": "integer",
                    "title": "Discriminator value of the type",
                    "description": "Discriminator value of the type."
                  },
                  "nullable": {
                    "type": "boolean",
                    "title": "Whether to allow `null` value or not",
                    "description": "Whether to allow `null` value or not."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "string",
                    "title": "Default value",
                    "description": "Default value."
                  },
                  "enum": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Enumeration values",
                    "description": "Enumeration values."
                  },
                  "format": {
                    "type": "string",
                    "title": "Format restriction",
                    "description": "Format restriction."
                  },
                  "pattern": {
                    "type": "string",
                    "title": "Pattern restriction",
                    "description": "Pattern restriction."
                  },
                  "minLength": {
                    "type": "integer",
                    "title": "Minimum length restriction",
                    "description": "Minimum length restriction."
                  },
                  "maxLength": {
                    "type": "integer",
                    "title": "Maximum length restriction",
                    "description": "Maximum length restriction."
                  },
                  "contentMediaType": {
                    "type": "string",
                    "title": "Content media type restriction",
                    "description": "Content media type restriction."
                  },
                  "x-wrtn-secret-key": {
                    "type": "string",
                    "title": "Secret key for the schema",
                    "description": "Secret key for the schema.\n\n`x-wrtn-secret-key` is a property means a secret key that is required\nfor the target API endpoint calling. If the secret key is not filled,\nthe API call would be failed."
                  },
                  "x-wrtn-secret-scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Secret scopes for the schema",
                    "description": "Secret scopes for the schema.\n\n`x-wrtn-secret-scopes` is a property means a list of secret scopes that\nare required for the target API endpoint calling. If the secret scopes\nare not satisfied, the API call would be failed."
                  },
                  "type": {
                    "const": "string",
                    "title": "Discriminator value of the type",
                    "description": "Discriminator value of the type."
                  },
                  "nullable": {
                    "type": "boolean",
                    "title": "Whether to allow `null` value or not",
                    "description": "Whether to allow `null` value or not."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/components/schemas/__type.o69"
              },
              {
                "$ref": "#/components/schemas/__type.o70"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "null",
                    "title": "Type is always `null`",
                    "description": "Type is always `null`."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                }
              },
              {
                "$ref": "#/components/schemas/__type.o74"
              }
            ],
            "title": "Expected return type",
            "description": "Expected return type.\n\nIf the function returns nothing (`void`), then the output is `undefined`."
          }
        },
        "required": [
          "name",
          "path",
          "method",
          "parameters"
        ]
      },
      "__type.o69": {
        "type": "object",
        "properties": {
          "items": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "boolean",
                    "title": "Default value",
                    "description": "Default value."
                  },
                  "enum": {
                    "type": "array",
                    "items": {
                      "type": "boolean"
                    },
                    "title": "Enumeration values",
                    "description": "Enumeration values."
                  },
                  "type": {
                    "const": "boolean",
                    "title": "Discriminator value of the type",
                    "description": "Discriminator value of the type."
                  },
                  "nullable": {
                    "type": "boolean",
                    "title": "Whether to allow `null` value or not",
                    "description": "Whether to allow `null` value or not."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "number",
                    "title": "Default value",
                    "description": "Default value."
                  },
                  "enum": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "title": "Enumeration values",
                    "description": "Enumeration values."
                  },
                  "minimum": {
                    "type": "number",
                    "title": "Minimum value restriction",
                    "description": "Minimum value restriction."
                  },
                  "maximum": {
                    "type": "number",
                    "title": "Maximum value restriction",
                    "description": "Maximum value restriction."
                  },
                  "exclusiveMinimum": {
                    "type": "boolean",
                    "title": "Exclusive minimum value restriction",
                    "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                  },
                  "exclusiveMaximum": {
                    "type": "boolean",
                    "title": "Exclusive maximum value restriction",
                    "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                  },
                  "multipleOf": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0,
                    "title": "Multiple of value restriction",
                    "description": "Multiple of value restriction."
                  },
                  "type": {
                    "const": "number",
                    "title": "Discriminator value of the type",
                    "description": "Discriminator value of the type."
                  },
                  "nullable": {
                    "type": "boolean",
                    "title": "Whether to allow `null` value or not",
                    "description": "Whether to allow `null` value or not."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "integer",
                    "title": "Default value",
                    "description": "Default value."
                  },
                  "enum": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "title": "Enumeration values",
                    "description": "Enumeration values."
                  },
                  "minimum": {
                    "type": "integer",
                    "title": "Minimum value restriction",
                    "description": "Minimum value restriction."
                  },
                  "maximum": {
                    "type": "integer",
                    "title": "Maximum value restriction",
                    "description": "Maximum value restriction."
                  },
                  "exclusiveMinimum": {
                    "type": "boolean",
                    "title": "Exclusive minimum value restriction",
                    "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                  },
                  "exclusiveMaximum": {
                    "type": "boolean",
                    "title": "Exclusive maximum value restriction",
                    "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                  },
                  "multipleOf": {
                    "type": "integer",
                    "exclusiveMinimum": true,
                    "minimum": 0,
                    "title": "Multiple of value restriction",
                    "description": "Multiple of value restriction."
                  },
                  "type": {
                    "const": "integer",
                    "title": "Discriminator value of the type",
                    "description": "Discriminator value of the type."
                  },
                  "nullable": {
                    "type": "boolean",
                    "title": "Whether to allow `null` value or not",
                    "description": "Whether to allow `null` value or not."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "string",
                    "title": "Default value",
                    "description": "Default value."
                  },
                  "enum": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Enumeration values",
                    "description": "Enumeration values."
                  },
                  "format": {
                    "type": "string",
                    "title": "Format restriction",
                    "description": "Format restriction."
                  },
                  "pattern": {
                    "type": "string",
                    "title": "Pattern restriction",
                    "description": "Pattern restriction."
                  },
                  "minLength": {
                    "type": "integer",
                    "title": "Minimum length restriction",
                    "description": "Minimum length restriction."
                  },
                  "maxLength": {
                    "type": "integer",
                    "title": "Maximum length restriction",
                    "description": "Maximum length restriction."
                  },
                  "contentMediaType": {
                    "type": "string",
                    "title": "Content media type restriction",
                    "description": "Content media type restriction."
                  },
                  "x-wrtn-secret-key": {
                    "type": "string",
                    "title": "Secret key for the schema",
                    "description": "Secret key for the schema.\n\n`x-wrtn-secret-key` is a property means a secret key that is required\nfor the target API endpoint calling. If the secret key is not filled,\nthe API call would be failed."
                  },
                  "x-wrtn-secret-scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Secret scopes for the schema",
                    "description": "Secret scopes for the schema.\n\n`x-wrtn-secret-scopes` is a property means a list of secret scopes that\nare required for the target API endpoint calling. If the secret scopes\nare not satisfied, the API call would be failed."
                  },
                  "type": {
                    "const": "string",
                    "title": "Discriminator value of the type",
                    "description": "Discriminator value of the type."
                  },
                  "nullable": {
                    "type": "boolean",
                    "title": "Whether to allow `null` value or not",
                    "description": "Whether to allow `null` value or not."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/components/schemas/__type.o69"
              },
              {
                "$ref": "#/components/schemas/__type.o70"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "null",
                    "title": "Type is always `null`",
                    "description": "Type is always `null`."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                }
              },
              {
                "$ref": "#/components/schemas/__type.o74"
              }
            ],
            "title": "Items type schema info",
            "description": "Items type schema info.\n\nThe `items` means the type of the array elements. In other words, it is\nthe type schema info of the `T` in the TypeScript array type `Array<T>`."
          },
          "uniqueItems": {
            "type": "boolean",
            "title": "Unique items restriction",
            "description": "Unique items restriction.\n\nIf this property value is `true`, target array must have unique items."
          },
          "minItems": {
            "type": "integer",
            "title": "Minimum items restriction",
            "description": "Minimum items restriction.\n\nRestriction of minumum number of items in the array."
          },
          "maxItems": {
            "type": "integer",
            "title": "Maximum items restriction",
            "description": "Maximum items restriction.\n\nRestriction of maximum number of items in the array."
          },
          "type": {
            "const": "array",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "nullable": {
            "type": "boolean",
            "title": "Whether to allow `null` value or not",
            "description": "Whether to allow `null` value or not."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "method": {
                    "oneOf": [
                      {
                        "const": "get"
                      },
                      {
                        "const": "post"
                      },
                      {
                        "const": "patch"
                      },
                      {
                        "const": "put"
                      },
                      {
                        "const": "delete"
                      }
                    ],
                    "title": "HTTP method to call the endpoint",
                    "description": "HTTP method to call the endpoint."
                  },
                  "path": {
                    "type": "string",
                    "title": "Path of the endpoint",
                    "description": "Path of the endpoint."
                  },
                  "jmesPath": {
                    "type": "string",
                    "title": "Function returning transformed values using JMESPath expression",
                    "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                  }
                },
                "required": [
                  "method",
                  "path",
                  "jmesPath"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "method": {
                    "oneOf": [
                      {
                        "const": "get"
                      },
                      {
                        "const": "post"
                      },
                      {
                        "const": "patch"
                      },
                      {
                        "const": "put"
                      },
                      {
                        "const": "delete"
                      }
                    ],
                    "title": "HTTP method to call the endpoint",
                    "description": "HTTP method to call the endpoint."
                  },
                  "path": {
                    "type": "string",
                    "title": "Path of the endpoint",
                    "description": "Path of the endpoint."
                  },
                  "label": {
                    "type": "string",
                    "title": "Transform function returning label",
                    "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                  },
                  "value": {
                    "type": "string",
                    "title": "Transform function returning target value",
                    "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                  },
                  "array": {
                    "type": "string",
                    "title": "Transform function returning array instance",
                    "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                  }
                },
                "required": [
                  "method",
                  "path",
                  "label",
                  "value"
                ]
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "items",
          "type"
        ]
      },
      "__type.o70": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/__type.o71",
            "title": "Properties of the object",
            "description": "Properties of the object.\n\nThe `properties` means a list of key-value pairs of the object's\nregular properties. The key is the name of the regular property,\nand the value is the type schema info.\n\nIf you need additional properties that is represented by dynamic key,\nyou can use the {@link additionalProperties} instead."
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "List of key values of the required properties",
            "description": "List of key values of the required properties.\n\nThe `required` means a list of the key values of the required\n{@link properties}. If some property key is not listed in the `required`\nlist, it means that property is optional. Otherwise some property key\nexists in the `required` list, it means that the property must be filled.\n\nBelow is an example of the {@link properties} and `required`.\n\n```typescript\ninterface SomeObject {\n  id: string;\n  email: string;\n  name?: string;\n}\n```\n\nAs you can see, `id` and `email` {@link properties} are {@link required},\nso that they are listed in the `required` list.\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": { \"type\": \"string\" },\n    \"email\": { \"type\": \"string\" },\n    \"name\": { \"type\": \"string\" }\n  },\n  \"required\": [\"id\", \"email\"]\n}\n```"
          },
          "additionalProperties": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "boolean",
                    "title": "Default value",
                    "description": "Default value."
                  },
                  "enum": {
                    "type": "array",
                    "items": {
                      "type": "boolean"
                    },
                    "title": "Enumeration values",
                    "description": "Enumeration values."
                  },
                  "type": {
                    "const": "boolean",
                    "title": "Discriminator value of the type",
                    "description": "Discriminator value of the type."
                  },
                  "nullable": {
                    "type": "boolean",
                    "title": "Whether to allow `null` value or not",
                    "description": "Whether to allow `null` value or not."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "number",
                    "title": "Default value",
                    "description": "Default value."
                  },
                  "enum": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "title": "Enumeration values",
                    "description": "Enumeration values."
                  },
                  "minimum": {
                    "type": "number",
                    "title": "Minimum value restriction",
                    "description": "Minimum value restriction."
                  },
                  "maximum": {
                    "type": "number",
                    "title": "Maximum value restriction",
                    "description": "Maximum value restriction."
                  },
                  "exclusiveMinimum": {
                    "type": "boolean",
                    "title": "Exclusive minimum value restriction",
                    "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                  },
                  "exclusiveMaximum": {
                    "type": "boolean",
                    "title": "Exclusive maximum value restriction",
                    "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                  },
                  "multipleOf": {
                    "type": "number",
                    "exclusiveMinimum": true,
                    "minimum": 0,
                    "title": "Multiple of value restriction",
                    "description": "Multiple of value restriction."
                  },
                  "type": {
                    "const": "number",
                    "title": "Discriminator value of the type",
                    "description": "Discriminator value of the type."
                  },
                  "nullable": {
                    "type": "boolean",
                    "title": "Whether to allow `null` value or not",
                    "description": "Whether to allow `null` value or not."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "integer",
                    "title": "Default value",
                    "description": "Default value."
                  },
                  "enum": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "title": "Enumeration values",
                    "description": "Enumeration values."
                  },
                  "minimum": {
                    "type": "integer",
                    "title": "Minimum value restriction",
                    "description": "Minimum value restriction."
                  },
                  "maximum": {
                    "type": "integer",
                    "title": "Maximum value restriction",
                    "description": "Maximum value restriction."
                  },
                  "exclusiveMinimum": {
                    "type": "boolean",
                    "title": "Exclusive minimum value restriction",
                    "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                  },
                  "exclusiveMaximum": {
                    "type": "boolean",
                    "title": "Exclusive maximum value restriction",
                    "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                  },
                  "multipleOf": {
                    "type": "integer",
                    "exclusiveMinimum": true,
                    "minimum": 0,
                    "title": "Multiple of value restriction",
                    "description": "Multiple of value restriction."
                  },
                  "type": {
                    "const": "integer",
                    "title": "Discriminator value of the type",
                    "description": "Discriminator value of the type."
                  },
                  "nullable": {
                    "type": "boolean",
                    "title": "Whether to allow `null` value or not",
                    "description": "Whether to allow `null` value or not."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "default": {
                    "type": "string",
                    "title": "Default value",
                    "description": "Default value."
                  },
                  "enum": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Enumeration values",
                    "description": "Enumeration values."
                  },
                  "format": {
                    "type": "string",
                    "title": "Format restriction",
                    "description": "Format restriction."
                  },
                  "pattern": {
                    "type": "string",
                    "title": "Pattern restriction",
                    "description": "Pattern restriction."
                  },
                  "minLength": {
                    "type": "integer",
                    "title": "Minimum length restriction",
                    "description": "Minimum length restriction."
                  },
                  "maxLength": {
                    "type": "integer",
                    "title": "Maximum length restriction",
                    "description": "Maximum length restriction."
                  },
                  "contentMediaType": {
                    "type": "string",
                    "title": "Content media type restriction",
                    "description": "Content media type restriction."
                  },
                  "x-wrtn-secret-key": {
                    "type": "string",
                    "title": "Secret key for the schema",
                    "description": "Secret key for the schema.\n\n`x-wrtn-secret-key` is a property means a secret key that is required\nfor the target API endpoint calling. If the secret key is not filled,\nthe API call would be failed."
                  },
                  "x-wrtn-secret-scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "title": "Secret scopes for the schema",
                    "description": "Secret scopes for the schema.\n\n`x-wrtn-secret-scopes` is a property means a list of secret scopes that\nare required for the target API endpoint calling. If the secret scopes\nare not satisfied, the API call would be failed."
                  },
                  "type": {
                    "const": "string",
                    "title": "Discriminator value of the type",
                    "description": "Discriminator value of the type."
                  },
                  "nullable": {
                    "type": "boolean",
                    "title": "Whether to allow `null` value or not",
                    "description": "Whether to allow `null` value or not."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "$ref": "#/components/schemas/__type.o69"
              },
              {
                "$ref": "#/components/schemas/__type.o70"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "null",
                    "title": "Type is always `null`",
                    "description": "Type is always `null`."
                  },
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                },
                "required": [
                  "type"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "title": "Title of the schema",
                    "description": "Title of the schema."
                  },
                  "description": {
                    "type": "string",
                    "title": "Detailed description of the schema",
                    "description": "Detailed description of the schema."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "title": "Whether the type is deprecated or not",
                    "description": "Whether the type is deprecated or not."
                  },
                  "x-wrtn-placeholder": {
                    "type": "string",
                    "title": "Placeholder value for frontend application",
                    "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                  },
                  "x-wrtn-prerequisite": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "jmesPath": {
                            "type": "string",
                            "title": "Function returning transformed values using JMESPath expression",
                            "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "jmesPath"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "method": {
                            "oneOf": [
                              {
                                "const": "get"
                              },
                              {
                                "const": "post"
                              },
                              {
                                "const": "patch"
                              },
                              {
                                "const": "put"
                              },
                              {
                                "const": "delete"
                              }
                            ],
                            "title": "HTTP method to call the endpoint",
                            "description": "HTTP method to call the endpoint."
                          },
                          "path": {
                            "type": "string",
                            "title": "Path of the endpoint",
                            "description": "Path of the endpoint."
                          },
                          "label": {
                            "type": "string",
                            "title": "Transform function returning label",
                            "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                          },
                          "value": {
                            "type": "string",
                            "title": "Transform function returning target value",
                            "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                          },
                          "array": {
                            "type": "string",
                            "title": "Transform function returning array instance",
                            "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                          }
                        },
                        "required": [
                          "method",
                          "path",
                          "label",
                          "value"
                        ]
                      }
                    ],
                    "title": "Prerequisite API endpoint for the schema",
                    "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                  }
                }
              },
              {
                "$ref": "#/components/schemas/__type.o74"
              }
            ],
            "title": "Additional properties' info",
            "description": "Additional properties' info.\n\nThe `additionalProperties` means the type schema info of the additional\nproperties that are not listed in the {@link properties}.\n\nIf the value is `true`, it means that the additional properties are not\nrestricted. They can be any type. Otherwise, if the value is\n{@link IOpenAiSchema} type, it means that the additional properties must\nfollow the type schema info.\n\n- `true`: `Record<string, any>`\n- `IOpenAiSchema`: `Record<string, T>`"
          },
          "type": {
            "const": "object",
            "title": "Discriminator value of the type",
            "description": "Discriminator value of the type."
          },
          "nullable": {
            "type": "boolean",
            "title": "Whether to allow `null` value or not",
            "description": "Whether to allow `null` value or not."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "method": {
                    "oneOf": [
                      {
                        "const": "get"
                      },
                      {
                        "const": "post"
                      },
                      {
                        "const": "patch"
                      },
                      {
                        "const": "put"
                      },
                      {
                        "const": "delete"
                      }
                    ],
                    "title": "HTTP method to call the endpoint",
                    "description": "HTTP method to call the endpoint."
                  },
                  "path": {
                    "type": "string",
                    "title": "Path of the endpoint",
                    "description": "Path of the endpoint."
                  },
                  "jmesPath": {
                    "type": "string",
                    "title": "Function returning transformed values using JMESPath expression",
                    "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                  }
                },
                "required": [
                  "method",
                  "path",
                  "jmesPath"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "method": {
                    "oneOf": [
                      {
                        "const": "get"
                      },
                      {
                        "const": "post"
                      },
                      {
                        "const": "patch"
                      },
                      {
                        "const": "put"
                      },
                      {
                        "const": "delete"
                      }
                    ],
                    "title": "HTTP method to call the endpoint",
                    "description": "HTTP method to call the endpoint."
                  },
                  "path": {
                    "type": "string",
                    "title": "Path of the endpoint",
                    "description": "Path of the endpoint."
                  },
                  "label": {
                    "type": "string",
                    "title": "Transform function returning label",
                    "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                  },
                  "value": {
                    "type": "string",
                    "title": "Transform function returning target value",
                    "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                  },
                  "array": {
                    "type": "string",
                    "title": "Transform function returning array instance",
                    "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                  }
                },
                "required": [
                  "method",
                  "path",
                  "label",
                  "value"
                ]
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "type"
        ]
      },
      "__type.o71": {
        "type": "object",
        "properties": {},
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "default": {
                  "type": "boolean",
                  "title": "Default value",
                  "description": "Default value."
                },
                "enum": {
                  "type": "array",
                  "items": {
                    "type": "boolean"
                  },
                  "title": "Enumeration values",
                  "description": "Enumeration values."
                },
                "type": {
                  "const": "boolean",
                  "title": "Discriminator value of the type",
                  "description": "Discriminator value of the type."
                },
                "nullable": {
                  "type": "boolean",
                  "title": "Whether to allow `null` value or not",
                  "description": "Whether to allow `null` value or not."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the schema",
                  "description": "Title of the schema."
                },
                "description": {
                  "type": "string",
                  "title": "Detailed description of the schema",
                  "description": "Detailed description of the schema."
                },
                "deprecated": {
                  "type": "boolean",
                  "title": "Whether the type is deprecated or not",
                  "description": "Whether the type is deprecated or not."
                },
                "x-wrtn-placeholder": {
                  "type": "string",
                  "title": "Placeholder value for frontend application",
                  "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                },
                "x-wrtn-prerequisite": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "oneOf": [
                            {
                              "const": "get"
                            },
                            {
                              "const": "post"
                            },
                            {
                              "const": "patch"
                            },
                            {
                              "const": "put"
                            },
                            {
                              "const": "delete"
                            }
                          ],
                          "title": "HTTP method to call the endpoint",
                          "description": "HTTP method to call the endpoint."
                        },
                        "path": {
                          "type": "string",
                          "title": "Path of the endpoint",
                          "description": "Path of the endpoint."
                        },
                        "jmesPath": {
                          "type": "string",
                          "title": "Function returning transformed values using JMESPath expression",
                          "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                        }
                      },
                      "required": [
                        "method",
                        "path",
                        "jmesPath"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "oneOf": [
                            {
                              "const": "get"
                            },
                            {
                              "const": "post"
                            },
                            {
                              "const": "patch"
                            },
                            {
                              "const": "put"
                            },
                            {
                              "const": "delete"
                            }
                          ],
                          "title": "HTTP method to call the endpoint",
                          "description": "HTTP method to call the endpoint."
                        },
                        "path": {
                          "type": "string",
                          "title": "Path of the endpoint",
                          "description": "Path of the endpoint."
                        },
                        "label": {
                          "type": "string",
                          "title": "Transform function returning label",
                          "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                        },
                        "value": {
                          "type": "string",
                          "title": "Transform function returning target value",
                          "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                        },
                        "array": {
                          "type": "string",
                          "title": "Transform function returning array instance",
                          "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                        }
                      },
                      "required": [
                        "method",
                        "path",
                        "label",
                        "value"
                      ]
                    }
                  ],
                  "title": "Prerequisite API endpoint for the schema",
                  "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                }
              },
              "required": [
                "type"
              ]
            },
            {
              "type": "object",
              "properties": {
                "default": {
                  "type": "number",
                  "title": "Default value",
                  "description": "Default value."
                },
                "enum": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "title": "Enumeration values",
                  "description": "Enumeration values."
                },
                "minimum": {
                  "type": "number",
                  "title": "Minimum value restriction",
                  "description": "Minimum value restriction."
                },
                "maximum": {
                  "type": "number",
                  "title": "Maximum value restriction",
                  "description": "Maximum value restriction."
                },
                "exclusiveMinimum": {
                  "type": "boolean",
                  "title": "Exclusive minimum value restriction",
                  "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                },
                "exclusiveMaximum": {
                  "type": "boolean",
                  "title": "Exclusive maximum value restriction",
                  "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                },
                "multipleOf": {
                  "type": "number",
                  "exclusiveMinimum": true,
                  "minimum": 0,
                  "title": "Multiple of value restriction",
                  "description": "Multiple of value restriction."
                },
                "type": {
                  "const": "number",
                  "title": "Discriminator value of the type",
                  "description": "Discriminator value of the type."
                },
                "nullable": {
                  "type": "boolean",
                  "title": "Whether to allow `null` value or not",
                  "description": "Whether to allow `null` value or not."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the schema",
                  "description": "Title of the schema."
                },
                "description": {
                  "type": "string",
                  "title": "Detailed description of the schema",
                  "description": "Detailed description of the schema."
                },
                "deprecated": {
                  "type": "boolean",
                  "title": "Whether the type is deprecated or not",
                  "description": "Whether the type is deprecated or not."
                },
                "x-wrtn-placeholder": {
                  "type": "string",
                  "title": "Placeholder value for frontend application",
                  "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                },
                "x-wrtn-prerequisite": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "oneOf": [
                            {
                              "const": "get"
                            },
                            {
                              "const": "post"
                            },
                            {
                              "const": "patch"
                            },
                            {
                              "const": "put"
                            },
                            {
                              "const": "delete"
                            }
                          ],
                          "title": "HTTP method to call the endpoint",
                          "description": "HTTP method to call the endpoint."
                        },
                        "path": {
                          "type": "string",
                          "title": "Path of the endpoint",
                          "description": "Path of the endpoint."
                        },
                        "jmesPath": {
                          "type": "string",
                          "title": "Function returning transformed values using JMESPath expression",
                          "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                        }
                      },
                      "required": [
                        "method",
                        "path",
                        "jmesPath"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "oneOf": [
                            {
                              "const": "get"
                            },
                            {
                              "const": "post"
                            },
                            {
                              "const": "patch"
                            },
                            {
                              "const": "put"
                            },
                            {
                              "const": "delete"
                            }
                          ],
                          "title": "HTTP method to call the endpoint",
                          "description": "HTTP method to call the endpoint."
                        },
                        "path": {
                          "type": "string",
                          "title": "Path of the endpoint",
                          "description": "Path of the endpoint."
                        },
                        "label": {
                          "type": "string",
                          "title": "Transform function returning label",
                          "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                        },
                        "value": {
                          "type": "string",
                          "title": "Transform function returning target value",
                          "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                        },
                        "array": {
                          "type": "string",
                          "title": "Transform function returning array instance",
                          "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                        }
                      },
                      "required": [
                        "method",
                        "path",
                        "label",
                        "value"
                      ]
                    }
                  ],
                  "title": "Prerequisite API endpoint for the schema",
                  "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                }
              },
              "required": [
                "type"
              ]
            },
            {
              "type": "object",
              "properties": {
                "default": {
                  "type": "integer",
                  "title": "Default value",
                  "description": "Default value."
                },
                "enum": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "title": "Enumeration values",
                  "description": "Enumeration values."
                },
                "minimum": {
                  "type": "integer",
                  "title": "Minimum value restriction",
                  "description": "Minimum value restriction."
                },
                "maximum": {
                  "type": "integer",
                  "title": "Maximum value restriction",
                  "description": "Maximum value restriction."
                },
                "exclusiveMinimum": {
                  "type": "boolean",
                  "title": "Exclusive minimum value restriction",
                  "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                },
                "exclusiveMaximum": {
                  "type": "boolean",
                  "title": "Exclusive maximum value restriction",
                  "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                },
                "multipleOf": {
                  "type": "integer",
                  "exclusiveMinimum": true,
                  "minimum": 0,
                  "title": "Multiple of value restriction",
                  "description": "Multiple of value restriction."
                },
                "type": {
                  "const": "integer",
                  "title": "Discriminator value of the type",
                  "description": "Discriminator value of the type."
                },
                "nullable": {
                  "type": "boolean",
                  "title": "Whether to allow `null` value or not",
                  "description": "Whether to allow `null` value or not."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the schema",
                  "description": "Title of the schema."
                },
                "description": {
                  "type": "string",
                  "title": "Detailed description of the schema",
                  "description": "Detailed description of the schema."
                },
                "deprecated": {
                  "type": "boolean",
                  "title": "Whether the type is deprecated or not",
                  "description": "Whether the type is deprecated or not."
                },
                "x-wrtn-placeholder": {
                  "type": "string",
                  "title": "Placeholder value for frontend application",
                  "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                },
                "x-wrtn-prerequisite": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "oneOf": [
                            {
                              "const": "get"
                            },
                            {
                              "const": "post"
                            },
                            {
                              "const": "patch"
                            },
                            {
                              "const": "put"
                            },
                            {
                              "const": "delete"
                            }
                          ],
                          "title": "HTTP method to call the endpoint",
                          "description": "HTTP method to call the endpoint."
                        },
                        "path": {
                          "type": "string",
                          "title": "Path of the endpoint",
                          "description": "Path of the endpoint."
                        },
                        "jmesPath": {
                          "type": "string",
                          "title": "Function returning transformed values using JMESPath expression",
                          "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                        }
                      },
                      "required": [
                        "method",
                        "path",
                        "jmesPath"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "oneOf": [
                            {
                              "const": "get"
                            },
                            {
                              "const": "post"
                            },
                            {
                              "const": "patch"
                            },
                            {
                              "const": "put"
                            },
                            {
                              "const": "delete"
                            }
                          ],
                          "title": "HTTP method to call the endpoint",
                          "description": "HTTP method to call the endpoint."
                        },
                        "path": {
                          "type": "string",
                          "title": "Path of the endpoint",
                          "description": "Path of the endpoint."
                        },
                        "label": {
                          "type": "string",
                          "title": "Transform function returning label",
                          "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                        },
                        "value": {
                          "type": "string",
                          "title": "Transform function returning target value",
                          "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                        },
                        "array": {
                          "type": "string",
                          "title": "Transform function returning array instance",
                          "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                        }
                      },
                      "required": [
                        "method",
                        "path",
                        "label",
                        "value"
                      ]
                    }
                  ],
                  "title": "Prerequisite API endpoint for the schema",
                  "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                }
              },
              "required": [
                "type"
              ]
            },
            {
              "type": "object",
              "properties": {
                "default": {
                  "type": "string",
                  "title": "Default value",
                  "description": "Default value."
                },
                "enum": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Enumeration values",
                  "description": "Enumeration values."
                },
                "format": {
                  "type": "string",
                  "title": "Format restriction",
                  "description": "Format restriction."
                },
                "pattern": {
                  "type": "string",
                  "title": "Pattern restriction",
                  "description": "Pattern restriction."
                },
                "minLength": {
                  "type": "integer",
                  "title": "Minimum length restriction",
                  "description": "Minimum length restriction."
                },
                "maxLength": {
                  "type": "integer",
                  "title": "Maximum length restriction",
                  "description": "Maximum length restriction."
                },
                "contentMediaType": {
                  "type": "string",
                  "title": "Content media type restriction",
                  "description": "Content media type restriction."
                },
                "x-wrtn-secret-key": {
                  "type": "string",
                  "title": "Secret key for the schema",
                  "description": "Secret key for the schema.\n\n`x-wrtn-secret-key` is a property means a secret key that is required\nfor the target API endpoint calling. If the secret key is not filled,\nthe API call would be failed."
                },
                "x-wrtn-secret-scopes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Secret scopes for the schema",
                  "description": "Secret scopes for the schema.\n\n`x-wrtn-secret-scopes` is a property means a list of secret scopes that\nare required for the target API endpoint calling. If the secret scopes\nare not satisfied, the API call would be failed."
                },
                "type": {
                  "const": "string",
                  "title": "Discriminator value of the type",
                  "description": "Discriminator value of the type."
                },
                "nullable": {
                  "type": "boolean",
                  "title": "Whether to allow `null` value or not",
                  "description": "Whether to allow `null` value or not."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the schema",
                  "description": "Title of the schema."
                },
                "description": {
                  "type": "string",
                  "title": "Detailed description of the schema",
                  "description": "Detailed description of the schema."
                },
                "deprecated": {
                  "type": "boolean",
                  "title": "Whether the type is deprecated or not",
                  "description": "Whether the type is deprecated or not."
                },
                "x-wrtn-placeholder": {
                  "type": "string",
                  "title": "Placeholder value for frontend application",
                  "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                },
                "x-wrtn-prerequisite": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "oneOf": [
                            {
                              "const": "get"
                            },
                            {
                              "const": "post"
                            },
                            {
                              "const": "patch"
                            },
                            {
                              "const": "put"
                            },
                            {
                              "const": "delete"
                            }
                          ],
                          "title": "HTTP method to call the endpoint",
                          "description": "HTTP method to call the endpoint."
                        },
                        "path": {
                          "type": "string",
                          "title": "Path of the endpoint",
                          "description": "Path of the endpoint."
                        },
                        "jmesPath": {
                          "type": "string",
                          "title": "Function returning transformed values using JMESPath expression",
                          "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                        }
                      },
                      "required": [
                        "method",
                        "path",
                        "jmesPath"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "oneOf": [
                            {
                              "const": "get"
                            },
                            {
                              "const": "post"
                            },
                            {
                              "const": "patch"
                            },
                            {
                              "const": "put"
                            },
                            {
                              "const": "delete"
                            }
                          ],
                          "title": "HTTP method to call the endpoint",
                          "description": "HTTP method to call the endpoint."
                        },
                        "path": {
                          "type": "string",
                          "title": "Path of the endpoint",
                          "description": "Path of the endpoint."
                        },
                        "label": {
                          "type": "string",
                          "title": "Transform function returning label",
                          "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                        },
                        "value": {
                          "type": "string",
                          "title": "Transform function returning target value",
                          "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                        },
                        "array": {
                          "type": "string",
                          "title": "Transform function returning array instance",
                          "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                        }
                      },
                      "required": [
                        "method",
                        "path",
                        "label",
                        "value"
                      ]
                    }
                  ],
                  "title": "Prerequisite API endpoint for the schema",
                  "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                }
              },
              "required": [
                "type"
              ]
            },
            {
              "$ref": "#/components/schemas/__type.o69"
            },
            {
              "$ref": "#/components/schemas/__type.o70"
            },
            {
              "type": "object",
              "properties": {
                "type": {
                  "const": "null",
                  "title": "Type is always `null`",
                  "description": "Type is always `null`."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the schema",
                  "description": "Title of the schema."
                },
                "description": {
                  "type": "string",
                  "title": "Detailed description of the schema",
                  "description": "Detailed description of the schema."
                },
                "deprecated": {
                  "type": "boolean",
                  "title": "Whether the type is deprecated or not",
                  "description": "Whether the type is deprecated or not."
                },
                "x-wrtn-placeholder": {
                  "type": "string",
                  "title": "Placeholder value for frontend application",
                  "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                },
                "x-wrtn-prerequisite": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "oneOf": [
                            {
                              "const": "get"
                            },
                            {
                              "const": "post"
                            },
                            {
                              "const": "patch"
                            },
                            {
                              "const": "put"
                            },
                            {
                              "const": "delete"
                            }
                          ],
                          "title": "HTTP method to call the endpoint",
                          "description": "HTTP method to call the endpoint."
                        },
                        "path": {
                          "type": "string",
                          "title": "Path of the endpoint",
                          "description": "Path of the endpoint."
                        },
                        "jmesPath": {
                          "type": "string",
                          "title": "Function returning transformed values using JMESPath expression",
                          "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                        }
                      },
                      "required": [
                        "method",
                        "path",
                        "jmesPath"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "oneOf": [
                            {
                              "const": "get"
                            },
                            {
                              "const": "post"
                            },
                            {
                              "const": "patch"
                            },
                            {
                              "const": "put"
                            },
                            {
                              "const": "delete"
                            }
                          ],
                          "title": "HTTP method to call the endpoint",
                          "description": "HTTP method to call the endpoint."
                        },
                        "path": {
                          "type": "string",
                          "title": "Path of the endpoint",
                          "description": "Path of the endpoint."
                        },
                        "label": {
                          "type": "string",
                          "title": "Transform function returning label",
                          "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                        },
                        "value": {
                          "type": "string",
                          "title": "Transform function returning target value",
                          "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                        },
                        "array": {
                          "type": "string",
                          "title": "Transform function returning array instance",
                          "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                        }
                      },
                      "required": [
                        "method",
                        "path",
                        "label",
                        "value"
                      ]
                    }
                  ],
                  "title": "Prerequisite API endpoint for the schema",
                  "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                }
              },
              "required": [
                "type"
              ]
            },
            {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Title of the schema",
                  "description": "Title of the schema."
                },
                "description": {
                  "type": "string",
                  "title": "Detailed description of the schema",
                  "description": "Detailed description of the schema."
                },
                "deprecated": {
                  "type": "boolean",
                  "title": "Whether the type is deprecated or not",
                  "description": "Whether the type is deprecated or not."
                },
                "x-wrtn-placeholder": {
                  "type": "string",
                  "title": "Placeholder value for frontend application",
                  "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                },
                "x-wrtn-prerequisite": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "oneOf": [
                            {
                              "const": "get"
                            },
                            {
                              "const": "post"
                            },
                            {
                              "const": "patch"
                            },
                            {
                              "const": "put"
                            },
                            {
                              "const": "delete"
                            }
                          ],
                          "title": "HTTP method to call the endpoint",
                          "description": "HTTP method to call the endpoint."
                        },
                        "path": {
                          "type": "string",
                          "title": "Path of the endpoint",
                          "description": "Path of the endpoint."
                        },
                        "jmesPath": {
                          "type": "string",
                          "title": "Function returning transformed values using JMESPath expression",
                          "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                        }
                      },
                      "required": [
                        "method",
                        "path",
                        "jmesPath"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "method": {
                          "oneOf": [
                            {
                              "const": "get"
                            },
                            {
                              "const": "post"
                            },
                            {
                              "const": "patch"
                            },
                            {
                              "const": "put"
                            },
                            {
                              "const": "delete"
                            }
                          ],
                          "title": "HTTP method to call the endpoint",
                          "description": "HTTP method to call the endpoint."
                        },
                        "path": {
                          "type": "string",
                          "title": "Path of the endpoint",
                          "description": "Path of the endpoint."
                        },
                        "label": {
                          "type": "string",
                          "title": "Transform function returning label",
                          "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                        },
                        "value": {
                          "type": "string",
                          "title": "Transform function returning target value",
                          "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                        },
                        "array": {
                          "type": "string",
                          "title": "Transform function returning array instance",
                          "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                        }
                      },
                      "required": [
                        "method",
                        "path",
                        "label",
                        "value"
                      ]
                    }
                  ],
                  "title": "Prerequisite API endpoint for the schema",
                  "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                }
              }
            },
            {
              "$ref": "#/components/schemas/__type.o74"
            }
          ]
        }
      },
      "__type.o74": {
        "type": "object",
        "properties": {
          "oneOf": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "default": {
                      "type": "boolean",
                      "title": "Default value",
                      "description": "Default value."
                    },
                    "enum": {
                      "type": "array",
                      "items": {
                        "type": "boolean"
                      },
                      "title": "Enumeration values",
                      "description": "Enumeration values."
                    },
                    "type": {
                      "const": "boolean",
                      "title": "Discriminator value of the type",
                      "description": "Discriminator value of the type."
                    },
                    "nullable": {
                      "type": "boolean",
                      "title": "Whether to allow `null` value or not",
                      "description": "Whether to allow `null` value or not."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the schema",
                      "description": "Title of the schema."
                    },
                    "description": {
                      "type": "string",
                      "title": "Detailed description of the schema",
                      "description": "Detailed description of the schema."
                    },
                    "deprecated": {
                      "type": "boolean",
                      "title": "Whether the type is deprecated or not",
                      "description": "Whether the type is deprecated or not."
                    },
                    "x-wrtn-placeholder": {
                      "type": "string",
                      "title": "Placeholder value for frontend application",
                      "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                    },
                    "x-wrtn-prerequisite": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "jmesPath": {
                              "type": "string",
                              "title": "Function returning transformed values using JMESPath expression",
                              "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "jmesPath"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "label": {
                              "type": "string",
                              "title": "Transform function returning label",
                              "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                            },
                            "value": {
                              "type": "string",
                              "title": "Transform function returning target value",
                              "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                            },
                            "array": {
                              "type": "string",
                              "title": "Transform function returning array instance",
                              "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "label",
                            "value"
                          ]
                        }
                      ],
                      "title": "Prerequisite API endpoint for the schema",
                      "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "default": {
                      "type": "number",
                      "title": "Default value",
                      "description": "Default value."
                    },
                    "enum": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      },
                      "title": "Enumeration values",
                      "description": "Enumeration values."
                    },
                    "minimum": {
                      "type": "number",
                      "title": "Minimum value restriction",
                      "description": "Minimum value restriction."
                    },
                    "maximum": {
                      "type": "number",
                      "title": "Maximum value restriction",
                      "description": "Maximum value restriction."
                    },
                    "exclusiveMinimum": {
                      "type": "boolean",
                      "title": "Exclusive minimum value restriction",
                      "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                    },
                    "exclusiveMaximum": {
                      "type": "boolean",
                      "title": "Exclusive maximum value restriction",
                      "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                    },
                    "multipleOf": {
                      "type": "number",
                      "exclusiveMinimum": true,
                      "minimum": 0,
                      "title": "Multiple of value restriction",
                      "description": "Multiple of value restriction."
                    },
                    "type": {
                      "const": "number",
                      "title": "Discriminator value of the type",
                      "description": "Discriminator value of the type."
                    },
                    "nullable": {
                      "type": "boolean",
                      "title": "Whether to allow `null` value or not",
                      "description": "Whether to allow `null` value or not."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the schema",
                      "description": "Title of the schema."
                    },
                    "description": {
                      "type": "string",
                      "title": "Detailed description of the schema",
                      "description": "Detailed description of the schema."
                    },
                    "deprecated": {
                      "type": "boolean",
                      "title": "Whether the type is deprecated or not",
                      "description": "Whether the type is deprecated or not."
                    },
                    "x-wrtn-placeholder": {
                      "type": "string",
                      "title": "Placeholder value for frontend application",
                      "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                    },
                    "x-wrtn-prerequisite": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "jmesPath": {
                              "type": "string",
                              "title": "Function returning transformed values using JMESPath expression",
                              "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "jmesPath"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "label": {
                              "type": "string",
                              "title": "Transform function returning label",
                              "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                            },
                            "value": {
                              "type": "string",
                              "title": "Transform function returning target value",
                              "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                            },
                            "array": {
                              "type": "string",
                              "title": "Transform function returning array instance",
                              "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "label",
                            "value"
                          ]
                        }
                      ],
                      "title": "Prerequisite API endpoint for the schema",
                      "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "default": {
                      "type": "integer",
                      "title": "Default value",
                      "description": "Default value."
                    },
                    "enum": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      },
                      "title": "Enumeration values",
                      "description": "Enumeration values."
                    },
                    "minimum": {
                      "type": "integer",
                      "title": "Minimum value restriction",
                      "description": "Minimum value restriction."
                    },
                    "maximum": {
                      "type": "integer",
                      "title": "Maximum value restriction",
                      "description": "Maximum value restriction."
                    },
                    "exclusiveMinimum": {
                      "type": "boolean",
                      "title": "Exclusive minimum value restriction",
                      "description": "Exclusive minimum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMinimum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link minimum} property."
                    },
                    "exclusiveMaximum": {
                      "type": "boolean",
                      "title": "Exclusive maximum value restriction",
                      "description": "Exclusive maximum value restriction.\n\nFor reference, even though your Swagger (or OpenAPI) document has\ndefined the `exclusiveMaximum` value as `number`, {@link OpenAiComposer}\nforcibly converts it to `boolean` type, and assign the numeric value to\nthe {@link maximum} property."
                    },
                    "multipleOf": {
                      "type": "integer",
                      "exclusiveMinimum": true,
                      "minimum": 0,
                      "title": "Multiple of value restriction",
                      "description": "Multiple of value restriction."
                    },
                    "type": {
                      "const": "integer",
                      "title": "Discriminator value of the type",
                      "description": "Discriminator value of the type."
                    },
                    "nullable": {
                      "type": "boolean",
                      "title": "Whether to allow `null` value or not",
                      "description": "Whether to allow `null` value or not."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the schema",
                      "description": "Title of the schema."
                    },
                    "description": {
                      "type": "string",
                      "title": "Detailed description of the schema",
                      "description": "Detailed description of the schema."
                    },
                    "deprecated": {
                      "type": "boolean",
                      "title": "Whether the type is deprecated or not",
                      "description": "Whether the type is deprecated or not."
                    },
                    "x-wrtn-placeholder": {
                      "type": "string",
                      "title": "Placeholder value for frontend application",
                      "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                    },
                    "x-wrtn-prerequisite": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "jmesPath": {
                              "type": "string",
                              "title": "Function returning transformed values using JMESPath expression",
                              "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "jmesPath"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "label": {
                              "type": "string",
                              "title": "Transform function returning label",
                              "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                            },
                            "value": {
                              "type": "string",
                              "title": "Transform function returning target value",
                              "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                            },
                            "array": {
                              "type": "string",
                              "title": "Transform function returning array instance",
                              "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "label",
                            "value"
                          ]
                        }
                      ],
                      "title": "Prerequisite API endpoint for the schema",
                      "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "default": {
                      "type": "string",
                      "title": "Default value",
                      "description": "Default value."
                    },
                    "enum": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "title": "Enumeration values",
                      "description": "Enumeration values."
                    },
                    "format": {
                      "type": "string",
                      "title": "Format restriction",
                      "description": "Format restriction."
                    },
                    "pattern": {
                      "type": "string",
                      "title": "Pattern restriction",
                      "description": "Pattern restriction."
                    },
                    "minLength": {
                      "type": "integer",
                      "title": "Minimum length restriction",
                      "description": "Minimum length restriction."
                    },
                    "maxLength": {
                      "type": "integer",
                      "title": "Maximum length restriction",
                      "description": "Maximum length restriction."
                    },
                    "contentMediaType": {
                      "type": "string",
                      "title": "Content media type restriction",
                      "description": "Content media type restriction."
                    },
                    "x-wrtn-secret-key": {
                      "type": "string",
                      "title": "Secret key for the schema",
                      "description": "Secret key for the schema.\n\n`x-wrtn-secret-key` is a property means a secret key that is required\nfor the target API endpoint calling. If the secret key is not filled,\nthe API call would be failed."
                    },
                    "x-wrtn-secret-scopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "title": "Secret scopes for the schema",
                      "description": "Secret scopes for the schema.\n\n`x-wrtn-secret-scopes` is a property means a list of secret scopes that\nare required for the target API endpoint calling. If the secret scopes\nare not satisfied, the API call would be failed."
                    },
                    "type": {
                      "const": "string",
                      "title": "Discriminator value of the type",
                      "description": "Discriminator value of the type."
                    },
                    "nullable": {
                      "type": "boolean",
                      "title": "Whether to allow `null` value or not",
                      "description": "Whether to allow `null` value or not."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the schema",
                      "description": "Title of the schema."
                    },
                    "description": {
                      "type": "string",
                      "title": "Detailed description of the schema",
                      "description": "Detailed description of the schema."
                    },
                    "deprecated": {
                      "type": "boolean",
                      "title": "Whether the type is deprecated or not",
                      "description": "Whether the type is deprecated or not."
                    },
                    "x-wrtn-placeholder": {
                      "type": "string",
                      "title": "Placeholder value for frontend application",
                      "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                    },
                    "x-wrtn-prerequisite": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "jmesPath": {
                              "type": "string",
                              "title": "Function returning transformed values using JMESPath expression",
                              "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "jmesPath"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "label": {
                              "type": "string",
                              "title": "Transform function returning label",
                              "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                            },
                            "value": {
                              "type": "string",
                              "title": "Transform function returning target value",
                              "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                            },
                            "array": {
                              "type": "string",
                              "title": "Transform function returning array instance",
                              "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "label",
                            "value"
                          ]
                        }
                      ],
                      "title": "Prerequisite API endpoint for the schema",
                      "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                {
                  "$ref": "#/components/schemas/__type.o69"
                },
                {
                  "$ref": "#/components/schemas/__type.o70"
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "const": "null",
                      "title": "Type is always `null`",
                      "description": "Type is always `null`."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the schema",
                      "description": "Title of the schema."
                    },
                    "description": {
                      "type": "string",
                      "title": "Detailed description of the schema",
                      "description": "Detailed description of the schema."
                    },
                    "deprecated": {
                      "type": "boolean",
                      "title": "Whether the type is deprecated or not",
                      "description": "Whether the type is deprecated or not."
                    },
                    "x-wrtn-placeholder": {
                      "type": "string",
                      "title": "Placeholder value for frontend application",
                      "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                    },
                    "x-wrtn-prerequisite": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "jmesPath": {
                              "type": "string",
                              "title": "Function returning transformed values using JMESPath expression",
                              "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "jmesPath"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "label": {
                              "type": "string",
                              "title": "Transform function returning label",
                              "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                            },
                            "value": {
                              "type": "string",
                              "title": "Transform function returning target value",
                              "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                            },
                            "array": {
                              "type": "string",
                              "title": "Transform function returning array instance",
                              "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "label",
                            "value"
                          ]
                        }
                      ],
                      "title": "Prerequisite API endpoint for the schema",
                      "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "title": "Title of the schema",
                      "description": "Title of the schema."
                    },
                    "description": {
                      "type": "string",
                      "title": "Detailed description of the schema",
                      "description": "Detailed description of the schema."
                    },
                    "deprecated": {
                      "type": "boolean",
                      "title": "Whether the type is deprecated or not",
                      "description": "Whether the type is deprecated or not."
                    },
                    "x-wrtn-placeholder": {
                      "type": "string",
                      "title": "Placeholder value for frontend application",
                      "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
                    },
                    "x-wrtn-prerequisite": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "jmesPath": {
                              "type": "string",
                              "title": "Function returning transformed values using JMESPath expression",
                              "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "jmesPath"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "method": {
                              "oneOf": [
                                {
                                  "const": "get"
                                },
                                {
                                  "const": "post"
                                },
                                {
                                  "const": "patch"
                                },
                                {
                                  "const": "put"
                                },
                                {
                                  "const": "delete"
                                }
                              ],
                              "title": "HTTP method to call the endpoint",
                              "description": "HTTP method to call the endpoint."
                            },
                            "path": {
                              "type": "string",
                              "title": "Path of the endpoint",
                              "description": "Path of the endpoint."
                            },
                            "label": {
                              "type": "string",
                              "title": "Transform function returning label",
                              "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                            },
                            "value": {
                              "type": "string",
                              "title": "Transform function returning target value",
                              "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                            },
                            "array": {
                              "type": "string",
                              "title": "Transform function returning array instance",
                              "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                            }
                          },
                          "required": [
                            "method",
                            "path",
                            "label",
                            "value"
                          ]
                        }
                      ],
                      "title": "Prerequisite API endpoint for the schema",
                      "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/__type.o74"
                }
              ]
            },
            "title": "List of the union types",
            "description": "List of the union types."
          },
          "title": {
            "type": "string",
            "title": "Title of the schema",
            "description": "Title of the schema."
          },
          "description": {
            "type": "string",
            "title": "Detailed description of the schema",
            "description": "Detailed description of the schema."
          },
          "deprecated": {
            "type": "boolean",
            "title": "Whether the type is deprecated or not",
            "description": "Whether the type is deprecated or not."
          },
          "x-wrtn-placeholder": {
            "type": "string",
            "title": "Placeholder value for frontend application",
            "description": "Placeholder value for frontend application.\n\nPlaceholder means the value to be shown in the input field as a hint.\nFor example, when an email input field exists, the placeholder value\nwould be \"Insert your email address here\"."
          },
          "x-wrtn-prerequisite": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "method": {
                    "oneOf": [
                      {
                        "const": "get"
                      },
                      {
                        "const": "post"
                      },
                      {
                        "const": "patch"
                      },
                      {
                        "const": "put"
                      },
                      {
                        "const": "delete"
                      }
                    ],
                    "title": "HTTP method to call the endpoint",
                    "description": "HTTP method to call the endpoint."
                  },
                  "path": {
                    "type": "string",
                    "title": "Path of the endpoint",
                    "description": "Path of the endpoint."
                  },
                  "jmesPath": {
                    "type": "string",
                    "title": "Function returning transformed values using JMESPath expression",
                    "description": "Function returning transformed values using JMESPath expression.\n\n`Prerequisite.Props.jmesPath` is a string typed property that extracts desired values\nfrom the prerequisite API response using a JMESPath expression. This property simplifies\nand replaces the `label`, `value`, and `array` properties.\n\nJMESPath expressions are used to extract the desired data based on the API response.\nThe expression must always be a valid JMESPath syntax.\n\n- Type: `jmesPath: string`\n- Example: `\"members[*].data.title\"`\n- Usage: `jmespath.search(response, jmesPath)`\n\nNote: The `label`, `value`, and `array` properties are no longer in use."
                  }
                },
                "required": [
                  "method",
                  "path",
                  "jmesPath"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "method": {
                    "oneOf": [
                      {
                        "const": "get"
                      },
                      {
                        "const": "post"
                      },
                      {
                        "const": "patch"
                      },
                      {
                        "const": "put"
                      },
                      {
                        "const": "delete"
                      }
                    ],
                    "title": "HTTP method to call the endpoint",
                    "description": "HTTP method to call the endpoint."
                  },
                  "path": {
                    "type": "string",
                    "title": "Path of the endpoint",
                    "description": "Path of the endpoint."
                  },
                  "label": {
                    "type": "string",
                    "title": "Transform function returning label",
                    "description": "Transform function returning label.\n\n`Prerequisite.Props.label` is a string typed property representing\na function returning the label from the element instance of the\nprerequisite API respond array.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are\nalways `elem`, `index` and `array`. Of course, the function's\nreturn type must be always `string`.\n\n- type: `label: (elem: Element, index: number, array: Element[]) => string`\n- example: `return elem.title`\n- how to use: `new Function(\"elem\", \"index\", \"array\", labelScript)(...)`"
                  },
                  "value": {
                    "type": "string",
                    "title": "Transform function returning target value",
                    "description": "Transform function returning target value.\n\n`Prerequisite.Props.value` is a string typed property representing\na function returning the target value from the element instance of\nthe prerequisite API respond array. If you've defined this `Prerequisite`\ntype to a `number` type, the returned value must be actual number type.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter names are always\n`elem`, `index` and `array`.\n\n- type: `value: (elem: Element, index: number, array: Element[]) => Value`\n- example: `return elem.no`\n- how to use: `new Function(\"elem\", \"index\", \"array\", valueScript)(...)`"
                  },
                  "array": {
                    "type": "string",
                    "title": "Transform function returning array instance",
                    "description": "Transform function returning array instance.\n\n`Prerequisite.Props.array` is a string typed property representing\na function returning an array instance from the response of the\nprerequisite API.\n\nThe function script must be a string value that can be parsed by\n`new Function(string)` statement. Also, its parameter name is\nalways `response`.\n\nIf the prerequisite API responses an array and it is the desired one,\nyou don't need to specify this property.\n\n- type: `array: (response: Response) => Elemenet[]`\n- example: `return response.members.map(m => m.data)`\n- how to use: `new Function(\"response\", arrayScript)(response)`"
                  }
                },
                "required": [
                  "method",
                  "path",
                  "label",
                  "value"
                ]
              }
            ],
            "title": "Prerequisite API endpoint for the schema",
            "description": "Prerequisite API endpoint for the schema.\n\n`x-wrtn-prerequisite` is a property representing the prerequisite API\ninteraction. It means that, the endpoint API should be called before\ncalling the target API, for composing some argument value."
          }
        },
        "required": [
          "oneOf"
        ]
      },
      "IStudioMetaChatSessionMessageData.IFillArgument": {
        "type": "object",
        "properties": {
          "function_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 LLM Function Call 의 {@link IStudioMetaChatFunctionCall.id} 값",
            "description": "대상 LLM Function Call 의 {@link IStudioMetaChatFunctionCall.id} 값."
          },
          "index": {
            "type": "number",
            "title": "구성해야 할 파라미터의 인덱스 번호",
            "description": "구성해야 할 파라미터의 인덱스 번호."
          },
          "schema": {
            "$ref": "#/components/schemas/IOpenAiSchema",
            "title": "클라이언트가 직접 구성해야 할 스키마 정보",
            "description": "클라이언트가 직접 구성해야 할 스키마 정보."
          },
          "llm": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "object",
                "properties": {
                  "schema": {
                    "$ref": "#/components/schemas/IOpenAiSchema",
                    "title": "LLM 이 구성해야 할 스키마 정보",
                    "description": "LLM 이 구성해야 할 스키마 정보."
                  },
                  "value": {
                    "title": "LLM 이 실제로 구성한 값",
                    "description": "LLM 이 실제로 구성한 값."
                  }
                },
                "required": [
                  "schema",
                  "value"
                ]
              }
            ],
            "title": "LLM 이 스스로 구성한 스키마 및 값 정보",
            "description": "LLM 이 스스로 구성한 스키마 및 값 정보.\n\n이 값이 `null` 이면, 순도 100 % 사람이 구성해야 하는 경우."
          },
          "kind": {
            "const": "fillArgument",
            "title": "데이터의 종류",
            "description": "데이터의 종류."
          },
          "reaction": {
            "$ref": "#/components/schemas/IExecutionResultany",
            "title": "대상 RPC 함수의 리턴값",
            "description": "대상 RPC 함수의 리턴값.\n\n서버에서 클라이언트로의 RPC 함수 호출 시에는 클라이언트 함수의 리턴값,\n그리고 클라이언트에서 서버로의 RPC 함수 호출 시에는 서버 함수의 리턴값이다.\n\n단, 함수 호출이 언제나 성공하는 것은 아니기에, 리턴값이 아닌 에러가 발생하였을\n수 있기에, returned value 및 thrown exception 의 유니언 타입에 해당하는\n{@link IExecutionResult} 가 쓰였다.\n\n> 본래 속성명이 `return` 인게 의미상 맞으나, 예약어라 일부러 피했다."
          }
        },
        "required": [
          "function_id",
          "index",
          "schema",
          "llm",
          "kind",
          "reaction"
        ],
        "description": "함수 인자 채우기 메시지 데이터.\n\n서버에서 클라이언트로의 {@link IStudioMetaChatListener.fillArgument}\nRPC (Remote Procedure Call) 함수 호출 및 응답 데이터 정보.\n\n클라이언트가 구성한 인자 정보는 {@link reaction} 을 참고하면 된다."
      },
      "IStudioMetaChatSessionMessageData.ICompleteFunction": {
        "type": "object",
        "properties": {
          "complete": {
            "$ref": "#/components/schemas/IStudioMetaChatFunctionCall.IComplete",
            "title": "함수 호출 완료 정보",
            "description": "함수 호출 완료 정보."
          },
          "kind": {
            "const": "completeFunction",
            "title": "데이터의 종류",
            "description": "데이터의 종류."
          },
          "reaction": {
            "$ref": "#/components/schemas/IExecutionResultany",
            "title": "대상 RPC 함수의 리턴값",
            "description": "대상 RPC 함수의 리턴값.\n\n서버에서 클라이언트로의 RPC 함수 호출 시에는 클라이언트 함수의 리턴값,\n그리고 클라이언트에서 서버로의 RPC 함수 호출 시에는 서버 함수의 리턴값이다.\n\n단, 함수 호출이 언제나 성공하는 것은 아니기에, 리턴값이 아닌 에러가 발생하였을\n수 있기에, returned value 및 thrown exception 의 유니언 타입에 해당하는\n{@link IExecutionResult} 가 쓰였다.\n\n> 본래 속성명이 `return` 인게 의미상 맞으나, 예약어라 일부러 피했다."
          }
        },
        "required": [
          "complete",
          "kind",
          "reaction"
        ],
        "description": "함수 호출 완료 메시지 데이터.\n\n서버에서 클라이언트로의 {@link IStudioMetaChatListener.completeFunction}\nRPC (Remote Procedure Call) 함수 호출 및 응답 데이터 정보."
      },
      "IStudioMetaChatFunctionCall.IComplete": {
        "type": "object",
        "properties": {
          "status": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ],
            "title": "리턴 상태값",
            "description": "리턴 상태값.\n\n본 속성값이 `null` 이거든, 대상 함수 (API operation) 에 대한 접속 자체에\n실패하였음을 뜻한다. 반대로 접속 그 자체를 성공하였다면, 함수 호출의 성공 여부\n{@link success} 에 관계없이, HTTP protocol 의 response status 가 기록된다."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "함수 호출 시각",
            "description": "함수 호출 시각."
          },
          "value": {
            "title": "함수 호출 결과로써 리턴받은 값",
            "description": "함수 호출 결과로써 리턴받은 값."
          },
          "arguments": {
            "type": "array",
            "items": {},
            "title": "함수 호출에 사용한 인자값 리스트",
            "description": "함수 호출에 사용한 인자값 리스트."
          },
          "success": {
            "type": "boolean",
            "title": "함수 호출 성공 여부",
            "description": "함수 호출 성공 여부."
          },
          "completed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "함수 호출 완료 시각",
            "description": "함수 호출 완료 시각.\n\n본 속성값이 `null` 이거든, 대상 함수 (API operation) 에 대한 접속 자체에\n실패하였음을 뜻한다."
          }
        },
        "required": [
          "status",
          "id",
          "created_at",
          "value",
          "arguments",
          "success",
          "completed_at"
        ],
        "description": "함수 호출 완료 정보.\n\nMeta LLM 채팅 세션에서, {@link ISelect 지정된 함수}에 대한 호출이 완료되었을 때,\n이를 클라이언트에게 알리기 위한 정보.\n\nMeta LLM 채팅 서버는 클라이언트의 {@link IStudioMetaChatListener.complete} 함수를\n호출함으로써, 해당 함수의 호출 성공 여부 및 리턴 값 등을 알려준다."
      },
      "IStudioMetaChatSessionMessageData.IPrepareWorkflow": {
        "type": "object",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/IStudioWorkflowData.ICreate",
            "title": "워크플로우 데이터 입력부",
            "description": "워크플로우 데이터 입력부."
          },
          "plan": {
            "$ref": "#/components/schemas/IStudioMetaChatWorkflowPlan",
            "title": "워크플로우 구성 계획",
            "description": "워크플로우 구성 계획.\n\n구 버전 데이터의 경우에는 이 데이터가 없다."
          },
          "kind": {
            "const": "prepareWorkflow",
            "title": "데이터의 종류",
            "description": "데이터의 종류."
          },
          "reaction": {
            "$ref": "#/components/schemas/IExecutionResultIStudioMetaChatWorkflowConfirmnull",
            "title": "대상 RPC 함수의 리턴값",
            "description": "대상 RPC 함수의 리턴값.\n\n서버에서 클라이언트로의 RPC 함수 호출 시에는 클라이언트 함수의 리턴값,\n그리고 클라이언트에서 서버로의 RPC 함수 호출 시에는 서버 함수의 리턴값이다.\n\n단, 함수 호출이 언제나 성공하는 것은 아니기에, 리턴값이 아닌 에러가 발생하였을\n수 있기에, returned value 및 thrown exception 의 유니언 타입에 해당하는\n{@link IExecutionResult} 가 쓰였다.\n\n> 본래 속성명이 `return` 인게 의미상 맞으나, 예약어라 일부러 피했다."
          }
        },
        "required": [
          "input",
          "kind",
          "reaction"
        ],
        "description": "워크플로우 준비 메시지 데이터.\n\n서버에서 클라이언트로의 {@link IStudioMetaChatListener.prepareWorkflow}\nRPC (Remote Procedure Call) 함수 호출 및 응답 데이터 정보."
      },
      "IStudioWorkflowData.ICreate": {
        "type": "object",
        "properties": {
          "components": {
            "$ref": "#/components/schemas/ISwaggerComponents",
            "title": "네임드 타입 콜렉션 (내부용)",
            "description": "네임드 타입 콜렉션 (내부용).\n\n오직 파라미터와 리턴 타입들의 전용 컬렉션."
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowParameter"
            },
            "title": "파라미터 타입 리스트",
            "description": "파라미터 타입 리스트."
          },
          "arguments": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IAstExpression"
                }
              }
            ],
            "title": "파라미터에 기본 입력할 원소값 리스트",
            "description": "파라미터에 기본 입력할 원소값 리스트."
          },
          "output": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IConstant"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IBoolean"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INumber"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IInteger"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IString"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IArray"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.ITuple"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IObject"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IReferencestring"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IOneOf"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.INull"
              },
              {
                "$ref": "#/components/schemas/ISwaggerSchema.IUnknown"
              }
            ],
            "title": "리턴 타입 별도 명시 가능",
            "description": "리턴 타입 별도 명시 가능.\n\n단, 컴파일시 그 값이 변경될 여지가 있음."
          },
          "variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowVariable"
            },
            "title": "워크플로우가 사용할 변수 리스트",
            "description": "워크플로우가 사용할 변수 리스트.\n\n각 변수는 {@link IAstIdentifier} 로 지칭할 수 있다."
          },
          "release_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "title": "사용할 릴리즈의 {@link IStudioRepositoryRelease.id} 리스트",
            "description": "사용할 릴리즈의 {@link IStudioRepositoryRelease.id} 리스트.\n\n릴리즈 커넥터 함수를 사용하기 위하여, 귀속 릴리즈들을 등록해야 함."
          },
          "swaggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowSwagger.ICreate"
            },
            "title": "사용할 스웨거 문서 리스트",
            "description": "사용할 스웨거 문서 리스트.\n\n스웨거 커넥터 함수를 사용하기 위하여, 귀속 스웨거 문서들을 등록해야 함."
          },
          "statements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowStatement"
            },
            "title": "현행 워크플로우 내 배치된 Statement 노드 리스트",
            "description": "현행 워크플로우 내 배치된 Statement 노드 리스트."
          },
          "chatbot_config": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IChatbotConfigV1"
              }
            ],
            "discriminator": {
              "propertyName": "chatbot_session_parameter_version",
              "mapping": {
                "v1": "#/components/schemas/IChatbotConfigV1"
              }
            },
            "title": "chatbot(agent)으로 사용할 때 세팅",
            "description": "chatbot(agent)으로 사용할 때 세팅."
          }
        },
        "required": [
          "components",
          "parameters",
          "arguments",
          "release_ids",
          "swaggers",
          "statements"
        ],
        "description": "워크플로우의 본 데이터에 대한 입력 정보."
      },
      "IStudioWorkflowSwagger.ICreate": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IStudioWorkflowSwagger.IGoodCreate"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflowSwagger.IManualCreate"
          },
          {
            "$ref": "#/components/schemas/IStudioWorkflowSwagger.ILinkCreate"
          }
        ],
        "discriminator": {
          "propertyName": "source",
          "mapping": {
            "good": "#/components/schemas/IStudioWorkflowSwagger.IGoodCreate",
            "manual": "#/components/schemas/IStudioWorkflowSwagger.IManualCreate",
            "link": "#/components/schemas/IStudioWorkflowSwagger.ILinkCreate"
          }
        },
        "title": "워크플로우에의 스웨거 입력 정보",
        "description": "워크플로우에의 스웨거 입력 정보."
      },
      "IStudioWorkflowSwagger.IGoodCreate": {
        "type": "object",
        "properties": {
          "source": {
            "const": "good",
            "title": "스웨거의 출처가 주문 상품인 경우",
            "description": "스웨거의 출처가 주문 상품인 경우."
          },
          "reference": {
            "$ref": "#/components/schemas/IStudioWorkflowSwagger.IReference",
            "title": "주문 상품 참조 정보",
            "description": "주문 상품 참조 정보."
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key.\n\n생략시 대상 유닛의 {@link IHubSaleUnit.id} 가 사용됨."
          }
        },
        "required": [
          "source",
          "reference"
        ],
        "description": "API 중개 거래소에서 구매한 주문 상품인 경우."
      },
      "IStudioWorkflowSwagger.IManualCreate": {
        "type": "object",
        "properties": {
          "source": {
            "const": "manual",
            "title": "스웨거의 출처가 직접 입력인 경우",
            "description": "스웨거의 출처가 직접 입력인 경우."
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SwaggerV2.IDocument"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3.IDocument"
              },
              {
                "$ref": "#/components/schemas/OpenApiV3_1.IDocument"
              },
              {
                "$ref": "#/components/schemas/ISwagger"
              }
            ],
            "title": "스웨거 문서 본 데이터",
            "description": "스웨거 문서 본 데이터.\n\n보정을 거쳐 {@link ISwagger} 형태로 변환될 수 있다."
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key.\n\n생략시 대상 서버의 url 과 버전을 조합하여 구성함.\n\n형태는 `${url}@${version}`"
          }
        },
        "required": [
          "source",
          "data"
        ],
        "description": "스웨거 파일을 직접 입력하는 경우."
      },
      "IStudioWorkflowSwagger.ILinkCreate": {
        "type": "object",
        "properties": {
          "source": {
            "const": "link",
            "title": "스웨거의 출처가 링크인 경우",
            "description": "스웨거의 출처가 링크인 경우."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "title": "Swagger JSON/Yaml 파일의 URL",
            "description": "Swagger JSON/Yaml 파일의 URL."
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key.\n\n생략시 대상 서버의 url 과 버전을 조합하여 구성함.\n\n형태는 `${url}@${version}`"
          }
        },
        "required": [
          "source",
          "url"
        ],
        "description": "스웨거 파일을 URL 링크로 제공하는 경우."
      },
      "IStudioMetaChatWorkflowPlan": {
        "type": "object",
        "properties": {
          "general": {
            "type": "string",
            "title": "계획 전체에 대한 설명",
            "description": "계획 전체에 대한 설명."
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "개별 단계에 대한 설명 리스트",
            "description": "개별 단계에 대한 설명 리스트."
          }
        },
        "required": [
          "general",
          "steps"
        ],
        "description": "Meta Chat Agent 의 워크플로우 계획 설명.\n\n`IStudioMetaChatWorkflowPlan` 은 Meta LLM 채팅 세션에서, 서버가\n클라이언트에게 준비된 {@link IStudioWorkflow 워크플로우} 계획을 설명할 때\n사용하는 인터페이스이다. Meta LLM 이 어떠한 워크플로우를 구성할 것이고, 그\n구성 계획에 대한 전체/개발 수준의 설명을 담고 있다.\n\nRPC (Remote Procedure Call) 상,\n{@link IStudioMetaChatListener.prepareWorkflow} 함수에서 사용된다."
      },
      "IExecutionResultIStudioMetaChatWorkflowConfirmnull": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IExecutionResult.IFailure"
          },
          {
            "$ref": "#/components/schemas/IExecutionResult.ISuccessIStudioMetaChatWorkflowConfirmnull"
          }
        ]
      },
      "IExecutionResult.ISuccessIStudioMetaChatWorkflowConfirmnull": {
        "type": "object",
        "properties": {
          "success": {
            "const": true
          },
          "value": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioMetaChatWorkflowConfirm"
              }
            ]
          }
        },
        "required": [
          "success",
          "value"
        ]
      },
      "IStudioMetaChatWorkflowConfirm": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "title": "귀속 계정의 {@link IStudioAccount.code}",
            "description": "귀속 계정의 {@link IStudioAccount.code}."
          },
          "repository": {
            "type": "string",
            "title": "귀속 저장소의 {@link IStudioRepository.code}",
            "description": "귀속 저장소의 {@link IStudioRepository.code}."
          },
          "commit": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IStudioMetaChatWorkflowConfirm.ICommitCreate"
              },
              {
                "$ref": "#/components/schemas/IStudioMetaChatWorkflowConfirm.ICommitUpdate"
              }
            ],
            "discriminator": {
              "propertyName": "kind",
              "mapping": {
                "create": "#/components/schemas/IStudioMetaChatWorkflowConfirm.ICommitCreate",
                "update": "#/components/schemas/IStudioMetaChatWorkflowConfirm.ICommitUpdate"
              }
            },
            "title": "커밋 정보",
            "description": "커밋 정보.\n\n커밋을 새로 만들거나, 혹은 기존의 커밋에 덮어씌우며 수정하거나."
          },
          "workflow": {
            "$ref": "#/components/schemas/OmitIStudioWorkflow.ICreatedata",
            "title": "워크플로우의 data 부를 제외한 나머지 입력 정보",
            "description": "워크플로우의 data 부를 제외한 나머지 입력 정보."
          }
        },
        "required": [
          "account",
          "repository",
          "commit",
          "workflow"
        ],
        "description": "Meta LLM 채팅에서의 워크플로우 수락 정보.\n\n`IStudioMetaChatWorkflowConfirm` 는 Meta LLM 채팅 세션에서, 서버가\n클라이언트에게 {@link IStudioWorkflow 워크플로우} 제작이 준비되었음을 알릴 때,\n클라이언트가 이에 응하여 해당 워크플로우가 기록될\n{@link IStudioAccount 계정}과 {@link IStudioRepository 저장소}와\n{@link IStudioRepositoryCommit 커밋} 및 부가 서술 정보들을 제공하는 인터페이스이다.\n\nRPC (Remote Procedure Call) 상, {@link IStudioMetaChatListener.workflow}\n함수에서 사용된다."
      },
      "IStudioMetaChatWorkflowConfirm.ICommitCreate": {
        "type": "object",
        "properties": {
          "kind": {
            "const": "create",
            "title": "Discriminator of union type",
            "description": "Discriminator of union type."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋의 제목",
            "description": "커밋의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋에 대한 서술문",
            "description": "커밋에 대한 서술문."
          },
          "source_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "원천 커밋의 ID",
            "description": "원천 커밋의 ID.\n\n생략 (`undefined`) 시 가장 마지막 커밋의 {@link IStudioRepositoryCommit.id}\n가 부여된다.\n\n`null` 값 입력시 아무런 기반 없이 행하는 최초 커밋에 해당."
          }
        },
        "required": [
          "kind",
          "title",
          "description"
        ],
        "description": "커밋을 새로이 생성."
      },
      "IStudioMetaChatWorkflowConfirm.ICommitUpdate": {
        "type": "object",
        "properties": {
          "kind": {
            "const": "update",
            "title": "Discriminator of union type",
            "description": "Discriminator of union type."
          },
          "commit_id": {
            "oneOf": [
              {
                "const": "latest"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "수정할 커밋의 {@lilnk IStudioRepositoryCommit.id}",
            "description": "수정할 커밋의 {@lilnk IStudioRepositoryCommit.id}."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋의 제목",
            "description": "커밋의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋에 대한 서술문",
            "description": "커밋에 대한 서술문."
          }
        },
        "required": [
          "kind",
          "commit_id"
        ],
        "description": "기존 커밋을 수정."
      },
      "OmitIStudioWorkflow.ICreatedata": {
        "type": "object",
        "properties": {
          "type": {
            "const": "workflow",
            "title": "버킷의 유형",
            "description": "버킷의 유형."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "워크플로우 제목",
            "description": "워크플로우 제목."
          },
          "name": {
            "type": "string",
            "title": "버킷의 파일 이름",
            "description": "버킷의 파일 이름."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "워크플로우 함수에 대한 상세 설명",
            "description": "워크플로우 함수에 대한 상세 설명."
          },
          "summary": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "워크플로우 함수에 대한 요약 설명",
            "description": "워크플로우 함수에 대한 요약 설명."
          },
          "thumbnail": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "워크플로우 썸네일 이미지",
            "description": "워크플로우 썸네일 이미지.\n\n워크플로우 에디터 상 미니맵 혹은 축소 버전 이미지에 해당한다."
          },
          "icon": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "대표 아이콘의 URL",
            "description": "대표 아이콘의 URL."
          },
          "namespace": {
            "type": "string",
            "title": "워크플로우 네임스페이스 식별자",
            "description": "워크플로우 네임스페이스 식별자."
          },
          "location": {
            "type": "string",
            "title": "버킷의 귀속 폴더 경로",
            "description": "버킷의 귀속 폴더 경로."
          }
        },
        "required": [
          "type",
          "name",
          "description",
          "summary",
          "thumbnail",
          "icon",
          "location"
        ],
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "IStudioMetaChatSessionMessageData.ICompleteWorkflow": {
        "type": "object",
        "properties": {
          "account_code": {
            "type": "string",
            "title": "귀속 계정의 {@link IStudioAccount.code}",
            "description": "귀속 계정의 {@link IStudioAccount.code}."
          },
          "repository_code": {
            "type": "string",
            "title": "귀속 저장소의 {@link IStudioRepository.code}",
            "description": "귀속 저장소의 {@link IStudioRepository.code}."
          },
          "commit_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 커밋의 {@link IStudioCommit.id}",
            "description": "대상 커밋의 {@link IStudioCommit.id}."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 워크플로우의 {@link IStudioWorkflow.id}",
            "description": "대상 워크플로우의 {@link IStudioWorkflow.id}."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "대상 워크플로우 스냅샷의 {@link IStudioWorkflow.snapshot_id}",
            "description": "대상 워크플로우 스냅샷의 {@link IStudioWorkflow.snapshot_id}."
          },
          "kind": {
            "const": "completeWorkflow",
            "title": "데이터의 종류",
            "description": "데이터의 종류."
          },
          "reaction": {
            "$ref": "#/components/schemas/IExecutionResultany",
            "title": "대상 RPC 함수의 리턴값",
            "description": "대상 RPC 함수의 리턴값.\n\n서버에서 클라이언트로의 RPC 함수 호출 시에는 클라이언트 함수의 리턴값,\n그리고 클라이언트에서 서버로의 RPC 함수 호출 시에는 서버 함수의 리턴값이다.\n\n단, 함수 호출이 언제나 성공하는 것은 아니기에, 리턴값이 아닌 에러가 발생하였을\n수 있기에, returned value 및 thrown exception 의 유니언 타입에 해당하는\n{@link IExecutionResult} 가 쓰였다.\n\n> 본래 속성명이 `return` 인게 의미상 맞으나, 예약어라 일부러 피했다."
          }
        },
        "required": [
          "account_code",
          "repository_code",
          "commit_id",
          "id",
          "snapshot_id",
          "kind",
          "reaction"
        ],
        "description": "워크플로우 완료 메시지 데이터.\n\n서버에서 클라이언트로의 {@link IStudioMetaChatListener.completeWorkflow}\nRPC (Remote Procedure Call) 함수 호출 및 응답 데이터 정보."
      },
      "IStudioMetaChatSession.IRequest": {
        "type": "object",
        "properties": {
          "pinned": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "search": {
            "$ref": "#/components/schemas/IStudioMetaChatSession.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-session.created_at"
                },
                {
                  "const": "+session.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 및 검색 요청 정보."
      },
      "IStudioMetaChatSession.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IPageIStudioMetaChatSession": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioMetaChatSession"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioMetaChatSession": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "채팅 세션을 생성한 고객 정보",
            "description": "채팅 세션을 생성한 고객 정보."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "채팅방 제목",
            "description": "채팅방 제목."
          },
          "connection": {
            "$ref": "#/components/schemas/IStudioMetaChatSessionConnection",
            "title": "가장 마지막 접속 정보",
            "description": "가장 마지막 접속 정보."
          },
          "last_message": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioMetaChatSessionMessageIStudioMetaChatSessionMessageData.ITalk"
              }
            ],
            "title": "가장 마지막 대화 메시지 내역",
            "description": "가장 마지막 대화 메시지 내역.\n\n아직 본 세션으로부터 단 하나의 대화 메시지도 없다면, `null`."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 수정 일시",
            "description": "레코드 수정 일시."
          },
          "pinned_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "리스트 상단 고정 일시",
            "description": "리스트 상단 고정 일시."
          }
        },
        "required": [
          "id",
          "customer",
          "title",
          "connection",
          "last_message",
          "created_at",
          "updated_at",
          "pinned_at"
        ],
        "description": "메타 LLM 채팅 세션 정보.\n\n`IStudioMetaChatSession` 은 Meta LLM 채팅 세션과 그 이력을 형상화한 엔티티이다.\n\n따라서 `IStudioMetaChatSession` 에는 해당 채팅 세션의\n{@link customer 개설자 고객} 나 {@link created_at 개설 시각} 등 가장 기초가\n되는 정보들이 담기고, 하위 엔티티 {@link IStudioMetaChatSessionConnection} 및\n{@link IStudioMetaChatSessionMessage} 에 각각 세션에의 접속 정보 및 상호 송수신\n메시지 이력들이 담기게 된다.\n\n참고로 우리의 메타 LLM 채팅 세션은 웹소켓 프로토콜을 사용하며,\n[TGrid](https://tgrid.com/docs/remote-procedure-call/) 의\nRPC (Remote Procedure Call) 개념을 사용한다. 따라서 하위 엔티티\n{@link IStudioMetaChatSessionConnection} 은 웹소켓 서버로의 클라이언트\n접속/해제 정보를 기록하며, {@link IStudioMetaChatSessionMessage} 는\n서버/클라이언트 상호간 RPC 함수 호출 및 리턴 내역을 기록한다."
      },
      "IStudioMetaChatSessionMessageIStudioMetaChatSessionMessageData.ITalk": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "connection_id": {
            "type": "string",
            "format": "uuid",
            "title": "귀속 세션 접속의 {@link IStudioMetaChatSessionConnection.id}",
            "description": "귀속 세션 접속의 {@link IStudioMetaChatSessionConnection.id}.\n\n만일 세션 접속에 대한 상세 정보가 필요하거든,\n{@link  {@link IStudioMetaChatSessionConnection} 를 제공되는 SDK API\n를 통하여 직접 조회할 것."
          },
          "speaker": {
            "oneOf": [
              {
                "const": "agent"
              },
              {
                "const": "customer"
              }
            ],
            "title": "발화자는 누구인가",
            "description": "발화자는 누구인가.\n\n현 메시지의 발생자가 누구인지를 뜻하며, 반대로 말하면 RPC 함수 호출자의\n유형을 말하기도 함.\n\n즉 본 속성값이 \"customer\" 이면 클라이언트가 서버의\n{@link IStudioMetaChatService} RPC 함수를 호출한 것이고, 반대로 본\n속성값이 \"agent\" 이면 서버가 클라이언트의\n{@link IStudioMetaChatListener} RPC 함수를 호출한 경우이다.\n\n- customer: 고객 (닝겐)\n- agent: LLM Agent (로봇)"
          },
          "data": {
            "$ref": "#/components/schemas/IStudioMetaChatSessionMessageData",
            "title": "메시지 데이터",
            "description": "메시지 데이터.\n\nRPC 함수의 호출 및 응답 데이터 정보."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "메시지 생성일시",
            "description": "메시지 생성일시."
          },
          "completed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "메시지 (함수 호출) 완료일시",
            "description": "메시지 (함수 호출) 완료일시."
          }
        },
        "required": [
          "id",
          "connection_id",
          "speaker",
          "data",
          "created_at",
          "completed_at"
        ],
        "description": "Meta LLM 채팅 세션 메시지 정보.\n\n`IStudioMetaChatSessionMessage` 는\n{@link IStudioMetaChatSession Meta LLM 채팅 세션}에서 발생한 메시지를 기록한\n엔티티이다. 정확하게는 채팅 세션 내에서도 어느\n{@link IStudioMetaChatSessionConnection WebSocket connection} 에서 발생한\n것인지를 기록하고 있다.\n\n그리고 우리의 Meta LLM 채팅 세션은 웹소켓 프로토콜에 TGrid 의\n[RPC (Remote Procedure Call)](https://tgrid.com/docs/remote-procedure-call/)\n개념을 사용하고 있기에, 본 `IStudioMetaChatSessionMessage` 는 곧 RPC 함수\n호출에 대한 이력 정보 {@link IStudioMetaChatSessionMessageData} 를 포괄하는\n엔티티이기도 하다."
      },
      "IStudioRepository.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioRepository.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-account.code"
                },
                {
                  "const": "-account.created_at"
                },
                {
                  "const": "+account.code"
                },
                {
                  "const": "+account.created_at"
                },
                {
                  "const": "-repository.code"
                },
                {
                  "const": "-repository.title"
                },
                {
                  "const": "-repository.created_at"
                },
                {
                  "const": "+repository.code"
                },
                {
                  "const": "+repository.title"
                },
                {
                  "const": "+repository.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 요청 및 검색 정보."
      },
      "IPageIStudioRepository.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepository.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioRepository": {
        "type": "object",
        "properties": {
          "commit": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioRepositoryCommit.ISummary"
              }
            ],
            "title": "가장 마지막 커밋의 요약 정보",
            "description": "가장 마지막 커밋의 요약 정보.\n\n아직 아무런 커밋도 안 한 경우, `null` 값이 할당된다."
          },
          "release": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioRepositoryRelease.ISummary"
              }
            ],
            "title": "가장 최근 릴리즈의 요약 정보",
            "description": "가장 최근 릴리즈의 요약 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "account": {
            "$ref": "#/components/schemas/IStudioAccount.ISummary",
            "title": "귀속 계정 정보",
            "description": "귀속 계정 정보."
          },
          "code": {
            "type": "string",
            "title": "저장소의 식별자 코드",
            "description": "저장소의 식별자 코드."
          },
          "disclosure": {
            "$ref": "#/components/schemas/IStudioRepository.Disclosure",
            "title": "저장소의 공개 수준",
            "description": "저장소의 공개 수준.\n\n- `public`: 모든 회원이 열람 가능한 공개 저장소.\n- `protected`: 직원들만 열람 가능한 보호 저장소.\n- `private`: 권한을 부여받은 이들만 열람 가능한 비공개 저장소."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "저장소 제목",
            "description": "저장소 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "저장소에 대한 상세 설명",
            "description": "저장소에 대한 상세 설명."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그값 리스트",
            "description": "검색 태그값 리스트."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "저장소 생성 일시",
            "description": "저장소 생성 일시."
          }
        },
        "required": [
          "commit",
          "release",
          "id",
          "account",
          "code",
          "disclosure",
          "title",
          "description",
          "tags",
          "created_at"
        ],
        "description": "스튜디오 저장소.\n\n`IStudioRepository` 는 스튜디오 시스템 내 개별 저장소를 형상화한 엔티티로써, 온라인\n서비스 상 깃허브의 저장소 같은 개념이다. 그리고 물리적으로는 디스크 드라이브에 비유될\n수 있는 개념이다.\n\n그리고 저장소는 특정 {@link IStudioAccount 계정}에 귀속되며, 각각의 저장소를 소유한\n계정주는 {@link IHubMember 회원}일 수도 있고, {@link IStudioEnterprise 기업}일\n수도 있다. 더하여, 저장소를 생성한 계정주는 그 자신 외에도, 저장소의\n{@link IStudioRepositoryAccess 접근 권한 제어}를 통하여, 동료 회원이나\n{@link IStudioEnterpriseTeamCompanion 팀원}들과 해당 저장소를 함께 사용할 수 있다."
      },
      "IStudioRepositoryAccess.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioRepositoryAccess.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-access.created_at"
                },
                {
                  "const": "-access.approved_at"
                },
                {
                  "const": "-access.role"
                },
                {
                  "const": "+access.created_at"
                },
                {
                  "const": "+access.approved_at"
                },
                {
                  "const": "+access.role"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 및 검색 요청 정보."
      },
      "IStudioRepositoryAccess.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "role": {
            "oneOf": [
              {
                "const": "member"
              },
              {
                "const": "owner"
              },
              {
                "const": "manager"
              },
              {
                "const": "observer"
              }
            ]
          },
          "approved": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IPageIStudioRepositoryAccess.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryAccess.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioRepositoryAccess.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "actor": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IHubMember"
              },
              {
                "$ref": "#/components/schemas/IStudioEnterpriseTeam.ISummary"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "member": "#/components/schemas/IHubMember",
                "team": "#/components/schemas/IStudioEnterpriseTeam.ISummary"
              }
            },
            "title": "타깃 정보",
            "description": "타깃 정보."
          },
          "role": {
            "$ref": "#/components/schemas/IStudioRepositoryAccess.Role",
            "title": "타깃에게 부여한 역할",
            "description": "타깃에게 부여한 역할."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "approved_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "초대 승인 일시",
            "description": "초대 승인 일시."
          }
        },
        "required": [
          "id",
          "actor",
          "role",
          "created_at",
          "approved_at"
        ],
        "description": "저장소 권한의 요약 정보."
      },
      "IStudioRepositoryAccess.Role": {
        "oneOf": [
          {
            "const": "member"
          },
          {
            "const": "owner"
          },
          {
            "const": "manager"
          },
          {
            "const": "observer"
          }
        ],
        "title": "역할의 타입",
        "description": "역할의 타입.\n\n- `owner`: 저장소의 소유자. 모든 권한을 가진다\n- `manager`: 저장소의 매니저, 일반 구성원에 대한 권한을 가진다\n- `member`: 일반 구성원\n- `observer`: 저장소의 관람자, 오직 읽기만 가능"
      },
      "IStudioRepositoryAccess": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "actor": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IHubMember"
              },
              {
                "$ref": "#/components/schemas/IStudioEnterpriseTeam.IInvert"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "member": "#/components/schemas/IHubMember",
                "team": "#/components/schemas/IStudioEnterpriseTeam.IInvert"
              }
            },
            "title": "타깃 정보",
            "description": "타깃 정보."
          },
          "role": {
            "$ref": "#/components/schemas/IStudioRepositoryAccess.Role",
            "title": "타깃에게 부여한 역할",
            "description": "타깃에게 부여한 역할."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          },
          "approved_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "초대 승인 일시",
            "description": "초대 승인 일시."
          }
        },
        "required": [
          "id",
          "actor",
          "role",
          "created_at",
          "approved_at"
        ],
        "description": "저장소 접근 권한 제어.\n\n`IStudioRepositoryAccess` 는 {@link IStudioRepository 저장소}의 접근 권한 제어를\n형상화한 엔티티로써, {@link IStudioAccount 계정주}가 저장소의 권한을 타\n{@link IHubMember 회원}이나 기업의 {@link IStudioEnterpriseTeam 팀}에게 나눠줄 때\n기록되는 엔티티이다.\n\n참고로 저장소를 생성한 계정주 또한, 접근 권한 제어에 기록되는 대상이다. 즉, 계정주가\n저장소를 생성한 그 즉시로, 본 테이블 레코드가 하나 생성되고 시작하는 것."
      },
      "IStudioEnterpriseTeam.IInvert": {
        "type": "object",
        "properties": {
          "enterprise": {
            "$ref": "#/components/schemas/IStudioEnterprise.ISummary",
            "title": "귀속 기업 정보",
            "description": "귀속 기업 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "type": {
            "const": "team",
            "title": "Discriminated Union 타입의 식별자",
            "description": "Discriminated Union 타입의 식별자."
          },
          "code": {
            "type": "string",
            "title": "팀의 식별자 코드",
            "description": "팀의 식별자 코드.\n\n팀 페이지의 URL 주소상 경로의 일부분에 해당."
          },
          "name": {
            "type": "string",
            "title": "팀 명",
            "description": "팀 명."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "enterprise",
          "id",
          "type",
          "code",
          "name",
          "created_at"
        ],
        "description": "팀의 역 참조 정보."
      },
      "IStudioRepositoryBucket.IRequest": {
        "type": "object",
        "properties": {
          "location": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "폴더 경로",
            "description": "폴더 경로.\n\n만일 이 값을 `null` 로 하면, 폴더 경로에 구애받지 않고 조회함.\n그 대신, {@link IStudioRepositoryDirectory 폴더 정보}는 불러오지 아니한다.\n\n참고로 {@link ISearch.location} 과 다른 점은, 본 속성은 equals 검색인데 반해,\n{@link ISearch.location} 은 like 검색이라는 것."
          },
          "search": {
            "$ref": "#/components/schemas/IStudioRepositoryBucket.IRequest.ISearch",
            "title": "검색 정보",
            "description": "검색 정보."
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-bucket.name"
                },
                {
                  "const": "-bucket.created_at"
                },
                {
                  "const": "-bucket.updated_at"
                },
                {
                  "const": "+bucket.name"
                },
                {
                  "const": "+bucket.created_at"
                },
                {
                  "const": "+bucket.updated_at"
                },
                {
                  "const": "-bucket.type"
                },
                {
                  "const": "-bucket.extension"
                },
                {
                  "const": "+bucket.type"
                },
                {
                  "const": "+bucket.extension"
                }
              ]
            },
            "title": "정렬 정보",
            "description": "정렬 정보."
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 및 검색 요청 정보."
      },
      "IStudioRepositoryBucket.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "const": "directory"
              },
              {
                "const": "file"
              },
              {
                "const": "workflow"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "extension": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "location": {
            "type": "string"
          }
        }
      },
      "IPageIStudioRepositoryBucket.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryBucket.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioRepositoryBucket": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IStudioWorkflow"
          },
          {
            "$ref": "#/components/schemas/IStudioRepositoryDirectory"
          },
          {
            "$ref": "#/components/schemas/IStudioRepositoryFile"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "workflow": "#/components/schemas/IStudioWorkflow",
            "directory": "#/components/schemas/IStudioRepositoryDirectory",
            "file": "#/components/schemas/IStudioRepositoryFile"
          }
        },
        "title": "저장소 내 버킷 정보",
        "description": "저장소 내 버킷 정보.\n\n`IStudioRepositoryBucket` 는 {@link IStudioRepository 저장소} 내 존재하는 버킷을\n형상화한 것으로써, 여기서 말하는 버킷이란 곧, 저장소 내에 배치되는 다양한 종류의\n파일 내지 폴더들을 뜻한다.\n\n그리고 버킷은 최초 생성시, 그리고 그것을 수정하거나 경로를 변경할 때마다, 그 내역을\nDB에 모두 스냅샷이라는 단위로 저장하여 이를 추적한다. 또한, 이러한 버킷의 수정은 모두\n{@link IStudioRepositoryCommit 커밋}이라는 단위에 묶여, 한 번에 이루어진다. 따라서\n과거의 커밋을 열람함으로써, 각각 버킷의 이전 내역을 열람하는 것 또한 가능하다.\n\n참고로 말하는 파일이란, 일반적인 {@link IStudioRepositoryFile 파일} 뿐 아니라,\n{@link IStudioWorkflow 워크플로우 문서} 등 특수목적용 파일도 함께 포함된다."
      },
      "IStudioRepositoryDirectory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "Snapshot ID",
            "description": "Snapshot ID."
          },
          "type": {
            "const": "directory",
            "title": "버킷의 유형",
            "description": "버킷의 유형."
          },
          "commit_id": {
            "type": "string",
            "format": "uuid",
            "title": "최종 수정된 스냅샷의 귀속 커밋 ID",
            "description": "최종 수정된 스냅샷의 귀속 커밋 ID."
          },
          "migration": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioRepositoryBucketMigration"
              }
            ],
            "title": "Studio1.0 에서 마이그레이션 된 정보",
            "description": "Studio1.0 에서 마이그레이션 된 정보."
          },
          "path": {
            "type": "string",
            "title": "버킷의 전체 경로",
            "description": "버킷의 전체 경로."
          },
          "location": {
            "type": "string",
            "title": "버킷의 귀속 폴더 경로",
            "description": "버킷의 귀속 폴더 경로."
          },
          "name": {
            "type": "string",
            "title": "버킷의 파일 이름",
            "description": "버킷의 파일 이름."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "버킷의 최초 생성 일시",
            "description": "버킷의 최초 생성 일시.\n\n즉, 해당 버킷을 최초 생성한 커밋의 일시와 동일."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "버킷의 최종 수정 일시",
            "description": "버킷의 최종 수정 일시.\n\n즉, 해당 버킷을 최종 수정한 커밋의 일시와 동일."
          }
        },
        "required": [
          "id",
          "snapshot_id",
          "type",
          "commit_id",
          "migration",
          "path",
          "location",
          "name",
          "created_at",
          "updated_at"
        ],
        "description": "저장소 내 폴더 정보.\n\n`IStudioRepositoryDirectory` 은 {@link IStudioRepository 저장소} 내 존재하는\n폴더들을 형상화한 엔티티로써, {@link IStudioRepositoryBucket 버킷}의 일종이다.\n\n그리고 폴더은 최초 생성시, 그리고 그것을 수정하거나 경로를 변경할 때마다, 그 내역을\nDB에 모두 스냅샷이라는 단위로 저장하여 이를 추적한다. 또한, 이러한 폴더의 수정은 모두\n{@link IStudioRepositoryCommit 커밋}이라는 단위에 묶여, 한 번에 이루어진다. 따라서\n과거의 폴더을 열람함으로써, 각각 폴더의 이전 내역을 열람하는 것 또한 가능하다."
      },
      "IStudioRepositoryFile": {
        "type": "object",
        "properties": {
          "extension": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 8
              }
            ],
            "title": "파일의 확장자",
            "description": "파일의 확장자."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "title": "파일이 실제 위치하는 URL 주소",
            "description": "파일이 실제 위치하는 URL 주소."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshot_id": {
            "type": "string",
            "format": "uuid",
            "title": "Snapshot ID",
            "description": "Snapshot ID."
          },
          "type": {
            "const": "file",
            "title": "버킷의 유형",
            "description": "버킷의 유형."
          },
          "commit_id": {
            "type": "string",
            "format": "uuid",
            "title": "최종 수정된 스냅샷의 귀속 커밋 ID",
            "description": "최종 수정된 스냅샷의 귀속 커밋 ID."
          },
          "migration": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioRepositoryBucketMigration"
              }
            ],
            "title": "Studio1.0 에서 마이그레이션 된 정보",
            "description": "Studio1.0 에서 마이그레이션 된 정보."
          },
          "path": {
            "type": "string",
            "title": "버킷의 전체 경로",
            "description": "버킷의 전체 경로."
          },
          "location": {
            "type": "string",
            "title": "버킷의 귀속 폴더 경로",
            "description": "버킷의 귀속 폴더 경로."
          },
          "name": {
            "type": "string",
            "title": "버킷의 파일 이름",
            "description": "버킷의 파일 이름."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "버킷의 최초 생성 일시",
            "description": "버킷의 최초 생성 일시.\n\n즉, 해당 버킷을 최초 생성한 커밋의 일시와 동일."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "버킷의 최종 수정 일시",
            "description": "버킷의 최종 수정 일시.\n\n즉, 해당 버킷을 최종 수정한 커밋의 일시와 동일."
          }
        },
        "required": [
          "extension",
          "url",
          "id",
          "snapshot_id",
          "type",
          "commit_id",
          "migration",
          "path",
          "location",
          "name",
          "created_at",
          "updated_at"
        ],
        "description": "저장소의 파일 정보.\n\n`IStudioRepositoryFile` 은 {@link IStudioRepository 저장소} 내 존재하는\n파일들을 형상화한 엔티티로써, {@link IStudioRepositoryBucket 버킷}의 일종이다.\n\n그리고 파일은 최초 생성시, 그리고 그것을 수정하거나 경로를 변경할 때마다, 그 내역을\nDB에 모두 스냅샷이라는 단위로 저장하여 이를 추적한다. 또한, 이러한 파일의 수정은 모두\n{@link IStudioRepositoryCommit 커밋}이라는 단위에 묶여, 한 번에 이루어진다. 따라서\n과거의 파일을 열람함으로써, 각각 파일의 이전 내역을 열람하는 것 또한 가능하다."
      },
      "IStudioRepositoryBucket.IPath": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      "IStudioRepositoryCommit.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioRepositoryCommit.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-commit.updated_at"
                },
                {
                  "const": "-commit.title"
                },
                {
                  "const": "-commit.created_at"
                },
                {
                  "const": "+commit.updated_at"
                },
                {
                  "const": "+commit.title"
                },
                {
                  "const": "+commit.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IStudioRepositoryCommit.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IPageIStudioRepositoryCommit.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryCommit.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioWorkflowHistory.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioWorkflowHistory.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-history.created_at"
                },
                {
                  "const": "+history.created_at"
                },
                {
                  "const": "-history.started_at"
                },
                {
                  "const": "-history.completed_at"
                },
                {
                  "const": "+history.started_at"
                },
                {
                  "const": "+history.completed_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IStudioWorkflowHistory.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "IPageIStudioWorkflowHistory.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowHistory.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioWorkflowHistory.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "commit_id": {
            "type": "string",
            "format": "uuid"
          },
          "success": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "started_at": {
            "type": "string",
            "format": "date-time"
          },
          "completed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "terminated_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        },
        "required": [
          "id",
          "commit_id",
          "success",
          "created_at",
          "started_at",
          "completed_at",
          "terminated_at"
        ]
      },
      "IPageIStudioWorkflowHistory": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowHistory"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioWorkflowStandalone": {
        "type": "object",
        "properties": {
          "commit": {
            "$ref": "#/components/schemas/IStudioRepositoryCommit",
            "title": "커밋 정보",
            "description": "커밋 정보."
          },
          "workflow": {
            "$ref": "#/components/schemas/IStudioWorkflow",
            "title": "워크플로우 정보",
            "description": "워크플로우 정보."
          }
        },
        "required": [
          "commit",
          "workflow"
        ],
        "description": "워크플로우 단독 기록 정보.\n\n{@link IStudioRepositoryCommit 커밋}을 기록하고 수정함에 있어, 오직 단 하나의\n{@link IStudioWorkflow 워크플로우} 파일만를 단독 기록/수정할 때 사용할 수 있는\nDTO 구조.\n\n`IStudioWorkflowStandalone` 는 현재 프론트 어플리케이션에서 각 저장소마다\n단 하나의 워크플로우만을 저장하고 있기에, 이러한 프론트 개발자들을 위하여 별도로\n설계한 일종의 편의 기능용 DTO 구조체이다.\n\n프론트가 향후 고도화되어 하나의 저장소에 여러 워크플로우 문서를 저장할 수 있게\n되거든, 이 구조체는 더 이상 사용되지 않을 예정이니, 이 점 유의하기 바란다."
      },
      "IStudioWorkflowStandalone.IPath": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      "IStudioWorkflow.IExecute": {
        "type": "object",
        "properties": {
          "history_id": {
            "type": "string",
            "format": "uuid",
            "title": "워크플로우 함수의 실행 결과를 저장할 {@link IStudioWorkflowHistory.id}",
            "description": "워크플로우 함수의 실행 결과를 저장할 {@link IStudioWorkflowHistory.id}.\n\n만일 이 값을 명시적으로 지정할 경우, 현행 워크플로우를 실행한 이후,\n그 내역을 저장하는 {@link IStudioWorkflowHistory} 레코드의 ID 가,\n이 값으로 지정된다.\n\n가급 `uuid.v4()` 를 사용하여, 중복되는 일이 없게 할 것."
          },
          "parameters": {
            "oneOf": [
              {
                "type": "array",
                "items": {}
              },
              {
                "$ref": "#/components/schemas/Recordpnumberany"
              }
            ],
            "title": "워크플로우 함수에 입력할 파라미터 리스트",
            "description": "워크플로우 함수에 입력할 파라미터 리스트."
          },
          "metadata": {
            "type": "object",
            "properties": {
              "chatbot_session_v1": {
                "$ref": "#/components/schemas/IChatbotSessionParametersV1"
              }
            },
            "title": "workflow snapshot을 실행하기 위해 시스템에서 주입하는 값들",
            "description": "workflow snapshot을 실행하기 위해 시스템에서 주입하는 값들.\nTODO: 유저에게 받는 DTO와 분리해서 클라이언트에서 해당 값들을 주입하지 못하도록 해야함."
          }
        },
        "required": [
          "parameters"
        ],
        "description": "워크플로우의 실행을 위한 입력 정보."
      },
      "Recordpnumberany": {
        "type": "object",
        "properties": {},
        "description": "Construct a type with a set of properties K of type T",
        "additionalProperties": {}
      },
      "IChatbotSessionParametersV1": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                }
              },
              "required": [
                "role",
                "content"
              ]
            },
            "title": "채팅 세션의 메세지들",
            "description": "채팅 세션의 메세지들."
          },
          "previous_invocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IChatbotSessionInvocationV1"
            },
            "title": "같은 채팅 세션 내부에서 이전에 사용되었던 input과 output들 리스트",
            "description": "같은 채팅 세션 내부에서 이전에 사용되었던 input과 output들 리스트."
          },
          "previous_invocation": {
            "$ref": "#/components/schemas/IChatbotSessionInvocationV1",
            "title": "`previousInvocations` 중 가장 마지막 값",
            "description": "`previousInvocations` 중 가장 마지막 값.\n중복적이기는 하나 canvas에서 편의성을 위해서 사용할 수 있음\n(아마 `previousInvocations` 전체 목록보다는 가장 최근꺼를 기반으로 할 일이 많을 것으로 생각됨)"
          },
          "user_message": {
            "type": "string",
            "title": "user message that the chatbot agent should respond to using the workflow result",
            "description": "user message that the chatbot agent should respond to using the workflow result.\n\nstring."
          },
          "version": {
            "const": "v1"
          }
        },
        "required": [
          "messages",
          "previous_invocations",
          "user_message",
          "version"
        ],
        "description": "Version 1."
      },
      "IChatbotSessionInvocationV1": {
        "type": "object",
        "properties": {
          "input": {
            "type": "array",
            "items": {},
            "title": "workflow의 parameters schema구조에 맞는 arguments",
            "description": "workflow의 parameters schema구조에 맞는 arguments."
          },
          "output": {
            "title": "workflow의 output schema에 맞는 output",
            "description": "workflow의 output schema에 맞는 output."
          }
        },
        "required": [
          "input",
          "output"
        ]
      },
      "IStudioWorkflow.ISimulate": {
        "type": "object",
        "properties": {
          "debug": {
            "type": "boolean"
          }
        },
        "required": [
          "debug"
        ],
        "description": "컴파일 시뮬레이션 요청 정보."
      },
      "IStudioRepositoryRelease.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioRepositoryRelease.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-release.document.title"
                },
                {
                  "const": "-release.version"
                },
                {
                  "const": "-release.created_at"
                },
                {
                  "const": "-release.opened_at"
                },
                {
                  "const": "+release.document.title"
                },
                {
                  "const": "+release.version"
                },
                {
                  "const": "+release.created_at"
                },
                {
                  "const": "+release.opened_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IPageIStudioRepositoryRelease.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryRelease.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioRepositoryReleaseNode.IExecute": {
        "type": "object",
        "properties": {
          "history_id": {
            "type": "string",
            "format": "uuid",
            "title": "함수의 실행 결과를 저장할 {@link IStudioRepositoryReleaseNodeHistory.id}",
            "description": "함수의 실행 결과를 저장할 {@link IStudioRepositoryReleaseNodeHistory.id}.\n\n만일 이 값을 명시적으로 지정할 경우, 현행 릴리즈 노드를 실행한 이후,\n그 내역을 저장하는 {@link IStudioRepositoryReleaseNodeHistory}\n레코드의 ID 가, 이 값으로 지정된다.\n\n가급 `uuid.v4()` 를 사용하여, 중복되는 일이 없게 할 것."
          },
          "schedule_id": {
            "type": "string",
            "format": "uuid",
            "title": "수동 실행할 스케쥴러의 {@link IStudioRepositorySchedule.id}",
            "description": "수동 실행할 스케쥴러의 {@link IStudioRepositorySchedule.id}.\n\n만일 릴리즈 노드의 실행 주체를 사람이 아닌 스케쥴러로 지칭하고 싶다면,\n본 속성값을 스케쥴러의 ID 로 채우면 된다.\n\n그리하면 실행 내역 {@link IStudioRepositoryReleaseNodeHistory.actor} 에\n기록되기를, 사람이 릴리즈 노드를 실행한게 아니라 스케쥴러를 지정된 시간 외에\n임의 구동하여, 스케쥴러를 통해 실행한 것으로 간주된다."
          },
          "parameters": {
            "oneOf": [
              {
                "type": "array",
                "items": {}
              },
              {
                "$ref": "#/components/schemas/Recordpnumberany"
              }
            ],
            "title": "함수에 입력할 파라미터 리스트",
            "description": "함수에 입력할 파라미터 리스트."
          },
          "metadata": {
            "type": "object",
            "properties": {
              "chatbot_session_v1": {
                "$ref": "#/components/schemas/IChatbotSessionParametersV1"
              }
            },
            "title": "released node를 실행하기 위해 시스템에서 주입하는 값들",
            "description": "released node를 실행하기 위해 시스템에서 주입하는 값들.\nTODO: 유저에게 받는 DTO와 분리해서 클라이언트에서 해당 값들을 주입하지 못하도록 해야함."
          }
        },
        "required": [
          "parameters"
        ],
        "description": "릴리즈 노드의 실행을 위한 입력 정보."
      },
      "IStudioRepositoryReleaseNodeHistory.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "success": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "schedule": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "started_at": {
            "type": "string",
            "format": "date-time"
          },
          "completed_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "terminated_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        },
        "required": [
          "id",
          "success",
          "schedule",
          "created_at",
          "started_at",
          "completed_at",
          "terminated_at"
        ]
      },
      "IStudioRepositoryReleaseNodeHistory.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-history.created_at"
                },
                {
                  "const": "+history.created_at"
                },
                {
                  "const": "-history.started_at"
                },
                {
                  "const": "-history.completed_at"
                },
                {
                  "const": "+history.started_at"
                },
                {
                  "const": "+history.completed_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        }
      },
      "IStudioRepositoryReleaseNodeHistory.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "executor": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "customer"
              },
              {
                "const": "scheduler"
              }
            ]
          }
        }
      },
      "IPageIStudioRepositoryReleaseNodeHistory.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IPageIStudioRepositoryReleaseNodeHistory": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryReleaseNodeHistory"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioAccount.ICreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "식별자 코드",
            "description": "식별자 코드."
          }
        },
        "required": [
          "code"
        ],
        "description": "계정 생성 정보."
      },
      "IStudioAccount.IUpdate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "새 식별자 코드",
            "description": "새 식별자 코드."
          }
        },
        "required": [
          "code"
        ],
        "description": "계정의 수정 정보."
      },
      "IStudioAccountSchedule.ICreateForRelease": {
        "type": "object",
        "properties": {
          "from": {
            "const": "release",
            "title": "Discriminated union 타입의 구분자",
            "description": "Discriminated union 타입의 구분자."
          },
          "release_node_id": {
            "type": "string",
            "title": "실행 대상 릴리즈 노드의 {@link IStudioRepositoryReleaseNode.id}",
            "description": "실행 대상 릴리즈 노드의 {@link IStudioRepositoryReleaseNode.id}."
          },
          "arguments": {
            "type": "array",
            "items": {},
            "title": "파라미터에 입력할 인자값 리스트",
            "description": "파라미터에 입력할 인자값 리스트."
          },
          "intervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountScheduleInterval.ICreate"
            },
            "minItems": 1,
            "title": "실행 간격",
            "description": "실행 간격."
          }
        },
        "required": [
          "release_node_id",
          "arguments",
          "intervals"
        ],
        "description": "계정 스케쥴 생성 정보."
      },
      "IStudioAccountScheduleInterval.ICreate": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "string",
            "format": "duration",
            "description": "duration value"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "스케쥴의 최초 실행 시작 일시",
            "description": "스케쥴의 최초 실행 시작 일시."
          },
          "paused_at": {
            "type": "string",
            "format": "date-time",
            "title": "스케쥴의 일시 중단 일시",
            "description": "스케쥴의 일시 중단 일시."
          },
          "closed_at": {
            "type": "string",
            "format": "date-time",
            "title": "스케쥴 중단 일시",
            "description": "스케쥴 중단 일시."
          }
        },
        "required": [
          "duration",
          "started_at"
        ]
      },
      "IStudioAccountSchedule.ICreateForGood": {
        "type": "object",
        "properties": {
          "from": {
            "const": "good",
            "title": "Discriminated union 타입의 구분자",
            "description": "Discriminated union 타입의 구분자."
          },
          "order_id": {
            "type": "string",
            "format": "uuid",
            "description": "특정 주문에 대한 {@link IHubOrder.id}"
          },
          "good_id": {
            "type": "string",
            "format": "uuid",
            "description": "특정 상품에 대한 {@link IHubOrderGood.id}"
          },
          "unit_id": {
            "type": "string",
            "format": "uuid",
            "description": "특정 단위에 대한 {@link IHubSaleUnit.id}"
          },
          "release_node_id": {
            "type": "string",
            "title": "실행 대상 릴리즈 노드의 {@link IStudioRepositoryReleaseNode.id}",
            "description": "실행 대상 릴리즈 노드의 {@link IStudioRepositoryReleaseNode.id}."
          },
          "arguments": {
            "type": "array",
            "items": {},
            "title": "파라미터에 입력할 인자값 리스트",
            "description": "파라미터에 입력할 인자값 리스트."
          },
          "intervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountScheduleInterval.ICreate"
            },
            "minItems": 1,
            "title": "실행 간격",
            "description": "실행 간격."
          }
        },
        "required": [
          "from",
          "order_id",
          "good_id",
          "unit_id",
          "release_node_id",
          "arguments",
          "intervals"
        ],
        "description": "계정 스케쥴을 내가 산 SALE의 ORDER로 부터 생성되는 기본 정보.."
      },
      "IStudioAccountSchedule.IPause": {
        "type": "object",
        "properties": {
          "interval_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "대상 인터벌 id",
            "description": "대상 인터벌 id."
          }
        },
        "required": [
          "interval_ids"
        ],
        "description": "일시 중지할 인터벌 정보."
      },
      "IStudioAccountSchedule.IResume": {
        "type": "object",
        "properties": {
          "interval_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "대상 인터벌 id",
            "description": "대상 인터벌 id."
          }
        },
        "required": [
          "interval_ids"
        ],
        "description": "다시 시작할 인터벌 정보."
      },
      "IStudioAccountSchedule.IUpdate": {
        "type": "object",
        "properties": {
          "arguments": {
            "type": "array",
            "items": {},
            "title": "파라미터에 입력할 인자값 리스트",
            "description": "파라미터에 입력할 인자값 리스트."
          },
          "intervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountScheduleInterval.ICreate"
            },
            "title": "실행 간격",
            "description": "실행 간격."
          }
        },
        "description": "계정 스케쥴 수정 정보."
      },
      "IStudioAccountSecret.ICreate": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "키값, 즉 변수명",
            "description": "키값, 즉 변수명."
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountSecretValue.ICreate"
            },
            "title": "변수 값 리스트",
            "description": "변수 값 리스트.\n\nDB 에는 암호화되어 저장된다."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "변수에 대한 간략한 제목",
            "description": "변수에 대한 간략한 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "변수에 대한 상세 설명문",
            "description": "변수에 대한 상세 설명문."
          }
        },
        "required": [
          "key",
          "values",
          "title",
          "description"
        ],
        "description": "시크릿 생성 요청."
      },
      "IStudioAccountSecretValue.ICreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "식별자 코드",
            "description": "식별자 코드.\n\n주로 연동 대상 서비스의 계정 이메일이나 아이디 등이 사용된다."
          },
          "value": {
            "type": "string",
            "title": "변수 값. 암호화되어 저장됨",
            "description": "변수 값. 암호화되어 저장됨."
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "권한 범위",
            "description": "권한 범위."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "변수값의 만료 일시",
            "description": "변수값의 만료 일시."
          }
        },
        "required": [
          "code",
          "value",
          "scopes",
          "expired_at"
        ],
        "description": "시크릿 변수 생성 요청."
      },
      "IStudioAccountSecret.IUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "변수에 대한 간략한 제목",
            "description": "변수에 대한 간략한 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "변수에 대한 상세 설명문",
            "description": "변수에 대한 상세 설명문."
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountSecretValue.ICreate"
            },
            "title": "새로이 구성할 변수값 리스트",
            "description": "새로이 구성할 변수값 리스트.\n\n이전 변수들은 모두 삭제되고, 변수값들이 새로이 구성된다."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "변수값의 만료 일시",
            "description": "변수값의 만료 일시."
          }
        },
        "description": "시크릿 업데이트 요청."
      },
      "IStudioAccountSecretValue.IUpdate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "식별자 코드",
            "description": "식별자 코드.\n\n주로 연동 대상 서비스의 계정 이메일이나 아이디 등이 사용된다."
          },
          "value": {
            "type": "string",
            "title": "변수 값. 암호화되어 저장됨",
            "description": "변수 값. 암호화되어 저장됨."
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "권한 범위",
            "description": "권한 범위."
          },
          "expired_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "변수값의 만료 일시",
            "description": "변수값의 만료 일시."
          }
        },
        "description": "시크릿 변수 수정 요청."
      },
      "IStudioAccountWidgetTile.ICreate": {
        "type": "object",
        "properties": {
          "component": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IStudioAccountWidgetTileComponentOfReleaseNode.ICreate"
              },
              {
                "$ref": "#/components/schemas/IStudioAccountWidgetTileComponentOfSchedule.ICreate"
              },
              {
                "$ref": "#/components/schemas/IStudioAccountWidgetTileComponentOfWorkflow.ICreate"
              }
            ],
            "title": "위젯에 배치할 컴포넌트",
            "description": "위젯에 배치할 컴포넌트."
          },
          "geometries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountWidgetTileGeometry.ICreate"
            },
            "title": "타일의 크기별 좌표/크기 정보 리스트",
            "description": "타일의 크기별 좌표/크기 정보 리스트.\n\n각각의 {@link IStudioAccountWidgetTileGeometry.breakpoint} 대하여,\n좌표 및 크기 정보를 모두 설정해주어야 한다."
          },
          "updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountWidgetTile.IUpdate"
            },
            "title": "새 타일을 배치하면서, 그것에 의해 밀려나 좌표가 변하는 것들의 새 geometry 정보 리스트",
            "description": "새 타일을 배치하면서, 그것에 의해 밀려나 좌표가 변하는 것들의 새 geometry 정보 리스트."
          }
        },
        "required": [
          "component",
          "geometries"
        ],
        "description": "타일 생성 정보."
      },
      "IStudioAccountWidgetTileComponentOfReleaseNode.ICreate": {
        "type": "object",
        "properties": {
          "kind": {
            "oneOf": [
              {
                "const": "release-node"
              },
              {
                "const": "release-node-agent"
              }
            ],
            "title": "타일 component 의 종류",
            "description": "타일 component 의 종류."
          },
          "account_code": {
            "type": "string",
            "description": "귀속 계정의 {@link IStudioAccount.code}"
          },
          "repository_code": {
            "type": "string",
            "description": "귀속 저장소의 {@link IStudioRepository.code}"
          },
          "release_id": {
            "type": "string",
            "format": "uuid",
            "description": "대상 릴리즈의 {@link IStudioRepositoryRelease.id}"
          },
          "release_node_id": {
            "type": "string",
            "format": "uuid",
            "description": "대상 릴리즈 노드의 {@link IStudioRepositoryReleaseNode.id}"
          },
          "arguments": {
            "type": "array",
            "items": {},
            "title": "함수 실행에 사용할 인자값 리스트",
            "description": "함수 실행에 사용할 인자값 리스트."
          }
        },
        "required": [
          "kind",
          "account_code",
          "repository_code",
          "release_id",
          "release_node_id",
          "arguments"
        ],
        "description": "생성 정보."
      },
      "IStudioAccountWidgetTileComponentOfSchedule.ICreate": {
        "type": "object",
        "properties": {
          "kind": {
            "const": "schedule",
            "title": "타일 component 의 종류",
            "description": "타일 component 의 종류."
          },
          "schedule_id": {
            "type": "string",
            "format": "uuid",
            "description": "대상 루틴 스케줄의 {@link IStudioAccountSchedule.id}"
          }
        },
        "required": [
          "kind",
          "schedule_id"
        ],
        "description": "생성 정보."
      },
      "IStudioAccountWidgetTileComponentOfWorkflow.ICreate": {
        "type": "object",
        "properties": {
          "kind": {
            "const": "workflow",
            "title": "타일 component 의 종류",
            "description": "타일 component 의 종류."
          },
          "account_code": {
            "type": "string",
            "description": "귀속 계정의 {@link IStudioAccount.code}"
          },
          "repository_code": {
            "type": "string",
            "description": "귀속 저장소의 {@link IStudioRepository.code}"
          },
          "workflow_id": {
            "type": "string",
            "format": "uuid",
            "description": "대상 워크플로우의 {@link IStudioWorkflow.id}"
          },
          "arguments": {
            "type": "array",
            "items": {},
            "title": "함수 실행에 사용할 인자값 리스트",
            "description": "함수 실행에 사용할 인자값 리스트."
          }
        },
        "required": [
          "kind",
          "account_code",
          "repository_code",
          "workflow_id",
          "arguments"
        ],
        "description": "생성 정보."
      },
      "IStudioAccountWidgetTileGeometry.ICreate": {
        "type": "object",
        "properties": {
          "breakpoint": {
            "oneOf": [
              {
                "const": "md"
              },
              {
                "const": "xs"
              },
              {
                "const": "sm"
              },
              {
                "const": "lg"
              }
            ],
            "title": "반응형 UI 기준 중단점",
            "description": "반응형 UI 기준 중단점.\n\n- xs: 1 칸\n- sm: 2 칸\n- md: 4 칸\n- lg: 4 칸"
          },
          "position": {
            "$ref": "#/components/schemas/IStudioAccountWidgetTileGeometry.IPosition",
            "title": "위치 정보",
            "description": "위치 정보."
          },
          "scale": {
            "$ref": "#/components/schemas/IStudioAccountWidgetTileGeometry.IScale",
            "title": "크기 정보",
            "description": "크기 정보."
          },
          "pinned": {
            "type": "boolean",
            "title": "좌표 고정 여부",
            "description": "좌표 고정 여부.\n\n본 값을 `true` 로 하여, 대상 타일의 좌표를 고정할 경우,\n향후 다른 타일의 밀어내기 이동에 영향을 받지 아니함.\n\n그야말로 좌표를 완전 고정하겠다는 것."
          }
        },
        "required": [
          "breakpoint",
          "position",
          "scale",
          "pinned"
        ],
        "description": "Geometry 생성 정보."
      },
      "IStudioAccountWidgetTile.IUpdate": {
        "type": "object",
        "properties": {
          "tile_id": {
            "type": "string",
            "format": "uuid",
            "description": "대상 타일의 {@link IStudioAccountWidgetTile.id}"
          },
          "geometries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountWidgetTileGeometry.IUpdate"
            },
            "title": "변경할 geometry 정보 리스트",
            "description": "변경할 geometry 정보 리스트."
          }
        },
        "required": [
          "tile_id",
          "geometries"
        ],
        "description": "타일의 geometry 상 변경 정보."
      },
      "IStudioAccountWidgetTileGeometry.IUpdate": {
        "type": "object",
        "properties": {
          "breakpoint": {
            "oneOf": [
              {
                "const": "md"
              },
              {
                "const": "xs"
              },
              {
                "const": "sm"
              },
              {
                "const": "lg"
              }
            ],
            "title": "반응형 UI 기준 중단점",
            "description": "반응형 UI 기준 중단점.\n\n- xs: 1 칸\n- sm: 2 칸\n- md: 4 칸\n- lg: 4 칸"
          },
          "position": {
            "$ref": "#/components/schemas/IStudioAccountWidgetTileGeometry.IPosition",
            "title": "위치 정보",
            "description": "위치 정보."
          },
          "scale": {
            "$ref": "#/components/schemas/IStudioAccountWidgetTileGeometry.IScale",
            "title": "크기 정보",
            "description": "크기 정보."
          },
          "pinned": {
            "type": "boolean",
            "title": "좌표 고정 여부",
            "description": "좌표 고정 여부.\n\n본 값을 `true` 로 하여, 대상 타일의 좌표를 고정할 경우,\n향후 다른 타일의 밀어내기 이동에 영향을 받지 아니함.\n\n그야말로 좌표를 완전 고정하겠다는 것."
          }
        },
        "required": [
          "breakpoint",
          "position",
          "scale"
        ],
        "description": "Geometry 수정 정보."
      },
      "IStudioAccountWidgetTile.IRestore": {
        "type": "object",
        "properties": {
          "tile_id": {
            "type": "string",
            "format": "uuid",
            "description": "대상 타일의 {@link IStudioAccountWidgetTile.id}"
          },
          "geometries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountWidgetTileGeometry.ICreate"
            },
            "title": "타일의 크기별 좌표/크기 정보 리스트",
            "description": "타일의 크기별 좌표/크기 정보 리스트.\n\n각각의 {@link IStudioAccountWidgetTileGeometry.breakpoint} 대하여,\n좌표 및 크기 정보를 모두 설정해주어야 한다."
          },
          "updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountWidgetTile.IUpdate"
            },
            "title": "새 타일을 배치하면서, 그것에 의해 밀려나 좌표가 변하는 것들의 새 geometry 정보 리스트",
            "description": "새 타일을 배치하면서, 그것에 의해 밀려나 좌표가 변하는 것들의 새 geometry 정보 리스트."
          }
        },
        "required": [
          "tile_id",
          "geometries"
        ]
      },
      "IPageIStudioAccountWidgetTile": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioAccountWidgetTile"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioEnterpriseEmployee.ICreate": {
        "type": "object",
        "properties": {
          "member_id": {
            "type": "string",
            "format": "uuid",
            "description": "대상 회원의 {@link IHubMember.id}"
          },
          "title": {
            "oneOf": [
              {
                "const": "member"
              },
              {
                "const": "owner"
              },
              {
                "const": "manager"
              },
              {
                "const": "observer"
              }
            ],
            "title": "부여할 직책",
            "description": "부여할 직책."
          }
        },
        "required": [
          "member_id",
          "title"
        ],
        "description": "직원 임명 정보."
      },
      "IStudioEnterpriseEmployee.IUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "oneOf": [
              {
                "const": "member"
              },
              {
                "const": "owner"
              },
              {
                "const": "manager"
              },
              {
                "const": "observer"
              }
            ],
            "title": "변경할 직책",
            "description": "변경할 직책."
          }
        },
        "required": [
          "title"
        ],
        "description": "직원 편집 정보."
      },
      "IStudioEnterprise.ICreate.INew": {
        "type": "object",
        "properties": {
          "migrate": {
            "const": false,
            "title": "계정 이전 여부",
            "description": "계정 이전 여부.\n\n고객의 계정을 기업에게 이전하는 것이 아닌, 기업에게 새로운 계정을 발급하는 방식."
          },
          "account": {
            "type": "string",
            "title": "기업에게 새로이 발급할 계정 코드",
            "description": "기업에게 새로이 발급할 계정 코드."
          },
          "name": {
            "type": "string",
            "title": "기업명",
            "description": "기업명."
          }
        },
        "required": [
          "migrate",
          "account",
          "name"
        ]
      },
      "IStudioEnterprise.ICreate.IMigrate": {
        "type": "object",
        "properties": {
          "migrate": {
            "const": true,
            "title": "계정 이전 여부",
            "description": "계정 이전 여부.\n\n만일 이 값을 `true` 로 설정하거든, 기업은 새 계정을 발행하지 않고, 현 회원의\n계정을 그대로 인수해간다. 그리고 {@link new_account_for_customer} 에 적힌\n코드로 발급한 새 계정은, 현 회원에게 부여된다."
          },
          "new_account_for_customer": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "계정을 기업에게 이전 후, 고객에게 새로이 발급할 계정 코드",
            "description": "계정을 기업에게 이전 후, 고객에게 새로이 발급할 계정 코드.\n\n기업은 현 고객의 계정을 그대로 인수해간다. 그리고 본 속성\n`new_account_for_customer` 에 적힌 코드로 새 계정을 발급한다. 물론 이 값이\n`null` 이거든, 고객은 기업에게의 계정 이전 후, \"계정 없음\" 상태가 된다."
          },
          "name": {
            "type": "string",
            "title": "기업명",
            "description": "기업명."
          }
        },
        "required": [
          "migrate",
          "new_account_for_customer",
          "name"
        ]
      },
      "IStudioEnterprise.IUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "기업명",
            "description": "기업명."
          }
        },
        "required": [
          "name"
        ],
        "description": "기업의 편집 정보."
      },
      "IStudioEnterpriseTeamCompanion.ICreate": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "string",
            "format": "uuid",
            "description": "대상 직원의 {@link IStudioEnterpriseEmployee.id}"
          },
          "role": {
            "oneOf": [
              {
                "const": "member"
              },
              {
                "const": "manager"
              },
              {
                "const": "observer"
              },
              {
                "const": "chief"
              }
            ],
            "title": "부여할 역할",
            "description": "부여할 역할."
          }
        },
        "required": [
          "employee_id",
          "role"
        ],
        "description": "팀 동료 입력 (임명) 정보."
      },
      "IStudioEnterpriseTeamCompanion.IUpdate": {
        "type": "object",
        "properties": {
          "role": {
            "oneOf": [
              {
                "const": "member"
              },
              {
                "const": "manager"
              },
              {
                "const": "observer"
              },
              {
                "const": "chief"
              }
            ],
            "title": "변경할 역할",
            "description": "변경할 역할."
          }
        },
        "required": [
          "role"
        ],
        "description": "팀 동료의 역할 변경 정보."
      },
      "IStudioEnterpriseTeam.ICreate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "팀의 식별자 코드",
            "description": "팀의 식별자 코드.\n\n팀 페이지의 URL 주소상 경로의 일부분에 해당."
          },
          "name": {
            "type": "string",
            "title": "팀 명",
            "description": "팀 명."
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "IStudioEnterpriseTeam.IUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "팀 명",
            "description": "팀 명."
          }
        },
        "required": [
          "name"
        ]
      },
      "IStudioEnterpriseTeam.IMerge": {
        "type": "object",
        "properties": {
          "keep": {
            "type": "string",
            "format": "uuid",
            "title": "Target record to keep after merging",
            "description": "Target record to keep after merging.\n\nAfter merge process, {@link absorbed} records would be merged into\nthis {@link keep} record."
          },
          "absorbed": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "title": "To be absorbed to {@link keep} after merging",
            "description": "To be absorbed to {@link keep} after merging."
          }
        },
        "required": [
          "keep",
          "absorbed"
        ],
        "description": "팀 병합 정보.\n\n어떤 직원이 병합 대상 팀에 모두 속한다면, 그 중 병합하여 유지하는 쪽의 역할을\n유지하고, 병합되는 팀의 역할은 폐기된다."
      },
      "IStudioMetaChatSession.IUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "채팅 세션의 제목",
            "description": "채팅 세션의 제목."
          }
        },
        "description": "수정 요청 정보."
      },
      "IStudioRepository.ICreate": {
        "type": "object",
        "properties": {
          "account": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "귀속 계정의 {@link IStudioAccount.code}",
            "description": "귀속 계정의 {@link IStudioAccount.code}.\n\n`null` 값 부여시 {@link IHubCustomer 고객} 본인의 계정이 사용된다.\n그리고 고객이 {@link IStudioEnterpriseEmployee 직원}으로써 소속된\n{@link IStudioEnterprise 기업}의 계정 코드를 입력하거나 하는 것이 가능하다."
          },
          "code": {
            "type": "string",
            "title": "저장소의 식별자 코드",
            "description": "저장소의 식별자 코드."
          },
          "disclosure": {
            "oneOf": [
              {
                "const": "public"
              },
              {
                "const": "private"
              },
              {
                "const": "protected"
              }
            ],
            "title": "저장소의 공개 수준",
            "description": "저장소의 공개 수준.\n\n- `public`: 모든 회원이 열람 가능한 공개 저장소.\n- `protected`: 직원들만 열람 가능한 보호 저장소.\n- `private`: 권한을 부여받은 이들만 열람 가능한 비공개 저장소."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "저장소 제목",
            "description": "저장소 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "저장소에 대한 상세 설명",
            "description": "저장소에 대한 상세 설명."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그값 리스트",
            "description": "검색 태그값 리스트."
          }
        },
        "required": [
          "account",
          "code",
          "disclosure",
          "title",
          "description",
          "tags"
        ],
        "description": "저장소 생성 정보."
      },
      "PartialIStudioRepository.ICreate": {
        "type": "object",
        "properties": {
          "account": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "귀속 계정의 {@link IStudioAccount.code}",
            "description": "귀속 계정의 {@link IStudioAccount.code}.\n\n`null` 값 부여시 {@link IHubCustomer 고객} 본인의 계정이 사용된다.\n그리고 고객이 {@link IStudioEnterpriseEmployee 직원}으로써 소속된\n{@link IStudioEnterprise 기업}의 계정 코드를 입력하거나 하는 것이 가능하다."
          },
          "code": {
            "type": "string",
            "title": "저장소의 식별자 코드",
            "description": "저장소의 식별자 코드."
          },
          "disclosure": {
            "oneOf": [
              {
                "const": "public"
              },
              {
                "const": "private"
              },
              {
                "const": "protected"
              }
            ],
            "title": "저장소의 공개 수준",
            "description": "저장소의 공개 수준.\n\n- `public`: 모든 회원이 열람 가능한 공개 저장소.\n- `protected`: 직원들만 열람 가능한 보호 저장소.\n- `private`: 권한을 부여받은 이들만 열람 가능한 비공개 저장소."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "저장소 제목",
            "description": "저장소 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "저장소에 대한 상세 설명",
            "description": "저장소에 대한 상세 설명."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그값 리스트",
            "description": "검색 태그값 리스트."
          }
        },
        "description": "Make all properties in T optional"
      },
      "IStudioRepository.IShift": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "title": "이양 대상 계정 코드",
            "description": "이양 대상 계정 코드."
          }
        },
        "required": [
          "account"
        ],
        "description": "저장소 소유권 이양 정보.\n\n현 저장소를 타 계정에 양도할 때 사용하는 DTO."
      },
      "IStudioRepositoryAccess.ICreate": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "const": "member"
              },
              {
                "const": "team"
              }
            ],
            "title": "타깃의 유형",
            "description": "타깃의 유형."
          },
          "actor_id": {
            "type": "string",
            "format": "uuid",
            "title": "타킷 액터의 레코드 ID",
            "description": "타킷 액터의 레코드 ID."
          },
          "role": {
            "oneOf": [
              {
                "const": "member"
              },
              {
                "const": "owner"
              },
              {
                "const": "manager"
              },
              {
                "const": "observer"
              }
            ],
            "title": "부여한 역할",
            "description": "부여한 역할."
          }
        },
        "required": [
          "type",
          "actor_id",
          "role"
        ],
        "description": "저장소 권한 입력 정보."
      },
      "IStudioRepositoryAccess.IUpdate": {
        "type": "object",
        "properties": {
          "role": {
            "oneOf": [
              {
                "const": "member"
              },
              {
                "const": "owner"
              },
              {
                "const": "manager"
              },
              {
                "const": "observer"
              }
            ],
            "title": "변경할 역할",
            "description": "변경할 역할."
          }
        },
        "required": [
          "role"
        ],
        "description": "저장소 권한 수정 정보."
      },
      "IStudioRepositoryCommit.ICreate": {
        "type": "object",
        "properties": {
          "source_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "원천 커밋의 ID",
            "description": "원천 커밋의 ID.\n\n생략 (`undefined`) 시 가장 마지막 커밋의 {@link IStudioRepositoryCommit.id}\n가 부여된다.\n\n`null` 값 입력시 아무런 기반 없이 행하는 최초 커밋에 해당."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋의 제목",
            "description": "커밋의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋에 대한 서술문",
            "description": "커밋에 대한 서술문."
          },
          "creates": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IStudioWorkflow.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IStudioRepositoryDirectory.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IStudioRepositoryFile.ICreate"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "workflow": "#/components/schemas/IStudioWorkflow.ICreate",
                  "directory": "#/components/schemas/IStudioRepositoryDirectory.ICreate",
                  "file": "#/components/schemas/IStudioRepositoryFile.ICreate"
                }
              }
            },
            "title": "새로이 생성할 버킷 리스트",
            "description": "새로이 생성할 버킷 리스트."
          },
          "updates": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IStudioRepositoryDirectory.IUpdate"
                },
                {
                  "$ref": "#/components/schemas/IStudioRepositoryFile.IUpdate"
                },
                {
                  "$ref": "#/components/schemas/IStudioWorkflow.IUpdate"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "directory": "#/components/schemas/IStudioRepositoryDirectory.IUpdate",
                  "file": "#/components/schemas/IStudioRepositoryFile.IUpdate",
                  "workflow": "#/components/schemas/IStudioWorkflow.IUpdate"
                }
              }
            },
            "title": "편집할 버킷 리스트",
            "description": "편집할 버킷 리스트."
          },
          "erases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryBucket.IErase"
            },
            "title": "삭제할 버킷 리스트",
            "description": "삭제할 버킷 리스트."
          }
        },
        "required": [
          "title",
          "description",
          "creates",
          "updates",
          "erases"
        ],
        "description": "새 버킷의 생성을 위한 입력 정보."
      },
      "IStudioWorkflow.ICreate": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/IStudioWorkflowData.ICreate",
            "title": "본 데이터 입력 정보",
            "description": "본 데이터 입력 정보."
          },
          "icon": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "대표 아이콘의 URL",
            "description": "대표 아이콘의 URL."
          },
          "thumbnail": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "워크플로우 썸네일 이미지",
            "description": "워크플로우 썸네일 이미지.\n\n워크플로우 에디터 상 미니맵 혹은 축소 버전 이미지에 해당한다."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "워크플로우 제목",
            "description": "워크플로우 제목."
          },
          "summary": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "워크플로우 함수에 대한 요약 설명",
            "description": "워크플로우 함수에 대한 요약 설명."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "워크플로우 함수에 대한 상세 설명",
            "description": "워크플로우 함수에 대한 상세 설명."
          },
          "namespace": {
            "type": "string",
            "title": "워크플로우 네임스페이스 식별자",
            "description": "워크플로우 네임스페이스 식별자."
          },
          "type": {
            "const": "workflow",
            "title": "버킷의 유형",
            "description": "버킷의 유형."
          },
          "location": {
            "type": "string",
            "title": "버킷의 귀속 폴더 경로",
            "description": "버킷의 귀속 폴더 경로."
          },
          "name": {
            "type": "string",
            "title": "버킷의 파일 이름",
            "description": "버킷의 파일 이름."
          }
        },
        "required": [
          "data",
          "icon",
          "thumbnail",
          "summary",
          "description",
          "type",
          "location",
          "name"
        ],
        "description": "워크플로우 생성 정보."
      },
      "IStudioRepositoryDirectory.ICreate": {
        "type": "object",
        "properties": {
          "type": {
            "const": "directory",
            "title": "버킷의 유형",
            "description": "버킷의 유형."
          },
          "location": {
            "type": "string",
            "title": "버킷의 귀속 폴더 경로",
            "description": "버킷의 귀속 폴더 경로."
          },
          "name": {
            "type": "string",
            "title": "버킷의 파일 이름",
            "description": "버킷의 파일 이름."
          }
        },
        "required": [
          "type",
          "location",
          "name"
        ],
        "description": "저장소 내 폴더의 생성 정보."
      },
      "IStudioRepositoryFile.ICreate": {
        "type": "object",
        "properties": {
          "extension": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 8
              }
            ],
            "title": "파일의 확장자",
            "description": "파일의 확장자."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "title": "파일이 실제 위치하는 URL 주소",
            "description": "파일이 실제 위치하는 URL 주소."
          },
          "type": {
            "const": "file",
            "title": "버킷의 유형",
            "description": "버킷의 유형."
          },
          "location": {
            "type": "string",
            "title": "버킷의 귀속 폴더 경로",
            "description": "버킷의 귀속 폴더 경로."
          },
          "name": {
            "type": "string",
            "title": "버킷의 파일 이름",
            "description": "버킷의 파일 이름."
          }
        },
        "required": [
          "extension",
          "url",
          "type",
          "location",
          "name"
        ],
        "description": "저장소 파일의 생성 정보."
      },
      "IStudioRepositoryDirectory.IUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key.\n\n편집할 대상 버킷의 {@link IStudioRepositoryBucket.id}"
          },
          "type": {
            "const": "directory",
            "title": "대상 버킷의 타입",
            "description": "대상 버킷의 타입.\n\n설령 ID 를 맞추더라도, 해당 버킷의 타입이 다르면 에러다."
          },
          "name": {
            "type": "string",
            "title": "수정할 버킷 명",
            "description": "수정할 버킷 명.\n\n파일 또는 폴더명을 바꿀 때 사용."
          },
          "location": {
            "type": "string",
            "title": "귀속 폴더 경로를 수정하고자 할 때",
            "description": "귀속 폴더 경로를 수정하고자 할 때."
          }
        },
        "required": [
          "id",
          "type"
        ],
        "description": "저장소 내 폴더의 수정 정보."
      },
      "IStudioRepositoryFile.IUpdate": {
        "type": "object",
        "properties": {
          "extension": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 8
              }
            ],
            "title": "파일의 확장자",
            "description": "파일의 확장자.\n\n생략시 기존 값이 그대로 쓰임."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "title": "파일이 실제 위치하는 URL 주소",
            "description": "파일이 실제 위치하는 URL 주소.\n\n생략시 기존 값이 그대로 쓰임."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key.\n\n편집할 대상 버킷의 {@link IStudioRepositoryBucket.id}"
          },
          "type": {
            "const": "file",
            "title": "대상 버킷의 타입",
            "description": "대상 버킷의 타입.\n\n설령 ID 를 맞추더라도, 해당 버킷의 타입이 다르면 에러다."
          },
          "name": {
            "type": "string",
            "title": "수정할 버킷 명",
            "description": "수정할 버킷 명.\n\n파일 또는 폴더명을 바꿀 때 사용."
          },
          "location": {
            "type": "string",
            "title": "귀속 폴더 경로를 수정하고자 할 때",
            "description": "귀속 폴더 경로를 수정하고자 할 때."
          }
        },
        "required": [
          "id",
          "type"
        ],
        "description": "저장소의 파일 수정 정보."
      },
      "IStudioWorkflow.IUpdate": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/IStudioWorkflowData.ICreate",
            "title": "본 데이터 입력 정보",
            "description": "본 데이터 입력 정보."
          },
          "icon": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "대표 아이콘의 URL",
            "description": "대표 아이콘의 URL."
          },
          "thumbnail": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uri"
              }
            ],
            "title": "워크플로우 썸네일 이미지",
            "description": "워크플로우 썸네일 이미지.\n\n워크플로우 에디터 상 미니맵 혹은 축소 버전 이미지에 해당한다."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "워크플로우 제목",
            "description": "워크플로우 제목."
          },
          "summary": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "워크플로우 함수에 대한 요약 설명",
            "description": "워크플로우 함수에 대한 요약 설명."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "리턴 타입에 대한 상세 설명",
            "description": "리턴 타입에 대한 상세 설명."
          },
          "namespace": {
            "type": "string",
            "title": "워크플로우 네임스페이스 식별자",
            "description": "워크플로우 네임스페이스 식별자."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key.\n\n편집할 대상 버킷의 {@link IStudioRepositoryBucket.id}"
          },
          "type": {
            "const": "workflow",
            "title": "대상 버킷의 타입",
            "description": "대상 버킷의 타입.\n\n설령 ID 를 맞추더라도, 해당 버킷의 타입이 다르면 에러다."
          },
          "name": {
            "type": "string",
            "title": "수정할 버킷 명",
            "description": "수정할 버킷 명.\n\n파일 또는 폴더명을 바꿀 때 사용."
          },
          "location": {
            "type": "string",
            "title": "귀속 폴더 경로를 수정하고자 할 때",
            "description": "귀속 폴더 경로를 수정하고자 할 때."
          }
        },
        "required": [
          "id",
          "type"
        ],
        "description": "워크플로우 수정 정보."
      },
      "IStudioRepositoryBucket.IErase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "oneOf": [
              {
                "const": "directory"
              },
              {
                "const": "file"
              },
              {
                "const": "workflow"
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "description": "버킷 삭제 정보."
      },
      "IStudioRepositoryCommit.IUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋의 제목",
            "description": "커밋의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋에 대한 서술문",
            "description": "커밋에 대한 서술문."
          },
          "creates": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IStudioWorkflow.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IStudioRepositoryDirectory.ICreate"
                },
                {
                  "$ref": "#/components/schemas/IStudioRepositoryFile.ICreate"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "workflow": "#/components/schemas/IStudioWorkflow.ICreate",
                  "directory": "#/components/schemas/IStudioRepositoryDirectory.ICreate",
                  "file": "#/components/schemas/IStudioRepositoryFile.ICreate"
                }
              }
            },
            "title": "새로이 생성할 버킷 리스트",
            "description": "새로이 생성할 버킷 리스트."
          },
          "updates": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IStudioRepositoryDirectory.IUpdate"
                },
                {
                  "$ref": "#/components/schemas/IStudioRepositoryFile.IUpdate"
                },
                {
                  "$ref": "#/components/schemas/IStudioWorkflow.IUpdate"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "directory": "#/components/schemas/IStudioRepositoryDirectory.IUpdate",
                  "file": "#/components/schemas/IStudioRepositoryFile.IUpdate",
                  "workflow": "#/components/schemas/IStudioWorkflow.IUpdate"
                }
              }
            },
            "title": "편집할 버킷 리스트",
            "description": "편집할 버킷 리스트."
          },
          "erases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioRepositoryBucket.IErase"
            },
            "title": "삭제할 버킷 리스트",
            "description": "삭제할 버킷 리스트."
          }
        },
        "required": [
          "creates",
          "updates",
          "erases"
        ],
        "description": "커밋 수정 정보."
      },
      "IStudioRepositoryCommit.IArchivedCommit": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "archived_at"
        ]
      },
      "IStudioRepository.ICreateFork": {
        "type": "object",
        "properties": {
          "good_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "다운받은 상품의 고유 id",
            "description": "다운받은 상품의 고유 id.\n\n자신 것을 fork 한다면 null"
          },
          "account": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "귀속 계정의 {@link IStudioAccount.code}",
            "description": "귀속 계정의 {@link IStudioAccount.code}.\n\n`null` 값 부여시 {@link IHubCustomer 고객} 본인의 계정이 사용된다.\n그리고 고객이 {@link IStudioEnterpriseEmployee 직원}으로써 소속된\n{@link IStudioEnterprise 기업}의 계정 코드를 입력하거나 하는 것이 가능하다."
          },
          "code": {
            "type": "string",
            "title": "저장소의 식별자 코드",
            "description": "저장소의 식별자 코드."
          },
          "disclosure": {
            "oneOf": [
              {
                "const": "public"
              },
              {
                "const": "private"
              },
              {
                "const": "protected"
              }
            ],
            "title": "저장소의 공개 수준",
            "description": "저장소의 공개 수준.\n\n- `public`: 모든 회원이 열람 가능한 공개 저장소.\n- `protected`: 직원들만 열람 가능한 보호 저장소.\n- `private`: 권한을 부여받은 이들만 열람 가능한 비공개 저장소."
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "저장소 제목",
            "description": "저장소 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "저장소에 대한 상세 설명",
            "description": "저장소에 대한 상세 설명."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그값 리스트",
            "description": "검색 태그값 리스트."
          }
        },
        "required": [
          "good_id",
          "account",
          "code",
          "disclosure",
          "title",
          "description",
          "tags"
        ]
      },
      "IStudioRepositoryRelease.ICreate": {
        "type": "object",
        "properties": {
          "commit_id": {
            "type": "string",
            "format": "uuid",
            "description": "릴리즈 대상 커밋의 {@link IStudioRepositoryCommit.id}"
          },
          "version": {
            "type": "string",
            "title": "버전명",
            "description": "버전명."
          },
          "nodes": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.IFileCreate"
                },
                {
                  "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.IWorkflowCreate"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "file": "#/components/schemas/IStudioRepositoryReleaseNode.IFileCreate",
                  "workflow": "#/components/schemas/IStudioRepositoryReleaseNode.IWorkflowCreate"
                }
              }
            },
            "minItems": 1,
            "title": "배포할 노드 (함수) 리스트",
            "description": "배포할 노드 (함수) 리스트.\n\n배포시, 최소 하나의 노드가 필요하다."
          },
          "document": {
            "$ref": "#/components/schemas/IStudioRepositoryReleaseDocument.ICreate",
            "title": "문서 작성 정보",
            "description": "문서 작성 정보."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그 리스트",
            "description": "검색 태그 리스트."
          },
          "category_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "uniqueItems": true,
            "title": "분류 카테고리들의 {@link IHubChannelCategory.id} 리스트",
            "description": "분류 카테고리들의 {@link IHubChannelCategory.id} 리스트."
          },
          "opened_at": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "배포 개시 일시",
            "description": "배포 개시 일시."
          }
        },
        "required": [
          "commit_id",
          "version",
          "nodes",
          "document",
          "tags",
          "category_ids",
          "opened_at"
        ],
        "description": "저장소의 배포본 생성 정보."
      },
      "IStudioRepositoryReleaseNode.IFileCreate": {
        "type": "object",
        "properties": {
          "type": {
            "const": "file",
            "title": "Discriminator type",
            "description": "Discriminator type."
          },
          "path": {
            "type": "string",
            "title": "대상 소스 파일의 경로",
            "description": "대상 소스 파일의 경로."
          },
          "accessor": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "릴리즈 대상의 버킷상 노드의 접근자",
            "description": "릴리즈 대상의 버킷상 노드의 접근자."
          }
        },
        "required": [
          "type",
          "path",
          "accessor"
        ]
      },
      "IStudioRepositoryReleaseNode.IWorkflowCreate": {
        "type": "object",
        "properties": {
          "type": {
            "const": "workflow",
            "title": "Discriminator type",
            "description": "Discriminator type."
          },
          "path": {
            "type": "string",
            "title": "대상 워크플로우의 파일 경로",
            "description": "대상 워크플로우의 파일 경로."
          },
          "purpose": {
            "oneOf": [
              {
                "const": "app"
              },
              {
                "const": "agent"
              }
            ],
            "title": "워크 플로우 추출 목적",
            "description": "워크 플로우 추출 목적."
          }
        },
        "required": [
          "type",
          "path",
          "purpose"
        ]
      },
      "IStudioRepositoryReleaseDocument.ICreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "제목",
            "description": "제목."
          },
          "format": {
            "oneOf": [
              {
                "const": "txt"
              },
              {
                "const": "md"
              },
              {
                "const": "html"
              }
            ],
            "title": "본문 컨텐츠의 포맷",
            "description": "본문 컨텐츠의 포맷."
          },
          "body": {
            "type": "string",
            "title": "본문 서술부",
            "description": "본문 서술부."
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAttachmentFile.ICreate"
            },
            "title": "첨부파일 리스트",
            "description": "첨부파일 리스트."
          }
        },
        "required": [
          "title",
          "format",
          "body",
          "files"
        ],
        "description": "저장소 배포본의 입력 정보."
      },
      "IStudioRepositoryRelease.IUpdate": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/IStudioRepositoryReleaseDocument.ICreate",
            "title": "문서 편집 정보",
            "description": "문서 편집 정보."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "title": "검색 태그 리스트",
            "description": "검색 태그 리스트."
          },
          "category_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "uniqueItems": true,
            "title": "분류 카테고리들의 {@link IHubChannelCategory.id} 리스트",
            "description": "분류 카테고리들의 {@link IHubChannelCategory.id} 리스트."
          }
        },
        "required": [
          "document",
          "tags",
          "category_ids"
        ],
        "description": "저장소의 배포본 편집 정보.\n\n오직 문서와 검색 태그만 편집 가능하다. 커밋 내역이나 버전명 등을 바꾸려거든\n불가능하니, 지우고 새로 만들 것."
      },
      "IStudioWorkflowStandalone.ICreate": {
        "type": "object",
        "properties": {
          "commit": {
            "$ref": "#/components/schemas/OmitIStudioRepositoryCommit.ICreatecreatesupdateserases"
          },
          "workflow": {
            "$ref": "#/components/schemas/IStudioWorkflow.ICreate"
          }
        },
        "required": [
          "commit",
          "workflow"
        ],
        "description": "워크플로우 단독 생성 정보."
      },
      "OmitIStudioRepositoryCommit.ICreatecreatesupdateserases": {
        "type": "object",
        "properties": {
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋의 제목",
            "description": "커밋의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋에 대한 서술문",
            "description": "커밋에 대한 서술문."
          },
          "source_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "원천 커밋의 ID",
            "description": "원천 커밋의 ID.\n\n생략 (`undefined`) 시 가장 마지막 커밋의 {@link IStudioRepositoryCommit.id}\n가 부여된다.\n\n`null` 값 입력시 아무런 기반 없이 행하는 최초 커밋에 해당."
          }
        },
        "required": [
          "title",
          "description"
        ],
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "IStudioWorkflowStandalone.IAccumulate": {
        "type": "object",
        "properties": {
          "commit": {
            "$ref": "#/components/schemas/OmitIStudioRepositoryCommit.ICreatecreatesupdateserases"
          },
          "workflow": {
            "$ref": "#/components/schemas/IStudioWorkflow.IUpdate"
          }
        },
        "required": [
          "commit",
          "workflow"
        ],
        "description": "워크플로우 단독 누적 정보.\n\n이미 존재하는 워크플로우 파일을 수정하며, 새로운 커밋을 발행할 때 사용."
      },
      "IStudioWorkflowStandalone.IUpdate": {
        "type": "object",
        "properties": {
          "commit": {
            "$ref": "#/components/schemas/OmitIStudioRepositoryCommit.IUpdatecreatesupdateserases"
          },
          "workflow": {
            "$ref": "#/components/schemas/IStudioWorkflow.IUpdate"
          }
        },
        "required": [
          "commit",
          "workflow"
        ],
        "description": "워크플로우 단독 수정 정보.\n\n아직 기록되지 않은 커밋에, 워크플로우를 단독 수정할 때 사용."
      },
      "OmitIStudioRepositoryCommit.IUpdatecreatesupdateserases": {
        "type": "object",
        "properties": {
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋의 제목",
            "description": "커밋의 제목."
          },
          "description": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ],
            "title": "커밋에 대한 서술문",
            "description": "커밋에 대한 서술문."
          }
        },
        "description": "Construct a type with the properties of T except for those in type K."
      },
      "IStudioWorkflowTemporary.IRequest": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-created_at"
                },
                {
                  "const": "+created_at"
                }
              ]
            },
            "title": "정렬 옵션",
            "description": "정렬 옵션."
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 요청 정보."
      },
      "IPageIStudioWorkflowTemporary.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowTemporary.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioWorkflowTemporary.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "임시 저장시의 고객 정보",
            "description": "임시 저장시의 고객 정보."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "id",
          "customer",
          "created_at"
        ],
        "description": "임시 저장의 요약 정보."
      },
      "IStudioWorkflowTemporary.IQuery": {
        "type": "object",
        "properties": {
          "erase": {
            "type": "boolean",
            "title": "삭제 여부",
            "description": "삭제 여부.\n\n임시 저장 레코드를 열람하며, 해당 레코드를 삭제할 지 여부."
          }
        },
        "description": "임시 저장 레코드 조회시의 부가 쿼리 정보."
      },
      "IStudioWorkflowTemporary": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/IStudioWorkflow.ICreate",
            "title": "임시 저장한 워크플로우 문서의 입력 정보",
            "description": "임시 저장한 워크플로우 문서의 입력 정보."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "customer": {
            "$ref": "#/components/schemas/IHubCustomer",
            "title": "임시 저장시의 고객 정보",
            "description": "임시 저장시의 고객 정보."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "레코드 생성 일시",
            "description": "레코드 생성 일시."
          }
        },
        "required": [
          "document",
          "id",
          "customer",
          "created_at"
        ],
        "description": "워크플로우 임시 저장 정보.\n\n`IStudioWorkflowTemporary` 는 {@link IStudioWorkflow 워크플로우 문서}를\n{@link IStudioRepositoryCommit.archived_at 커밋 확정 전} 임시 저장하는\n경우를 형상화한 엔티티다.\n\n참고로 워크플로우 문서를 임시 저장하는 주체는 프론트 어플리케이션이며,\n각각의 임시 저장 레코드는 귀속 {@link IStudioRepositoryCommit 커밋}이 확정되는\n순간에 일괄 삭제된다. 그리고 귀속 커밋 및 워크플로우 문서에 대하여도 임시 저장\n레코드가 N 개를 넘어가는 경우에도, 자동 삭제된다."
      },
      "IStudioWorkflowTemporary.ICreate": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/IStudioWorkflow.ICreate",
            "title": "임시 저장할 워크플로우 문서의 입력 정보",
            "description": "임시 저장할 워크플로우 문서의 입력 정보."
          }
        },
        "required": [
          "document"
        ],
        "description": "임시 저장 입력 정보."
      },
      "IStudioWorkflowScriptConnector.IRequest": {
        "type": "object",
        "properties": {
          "workflow_id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "title": "현재 워크플로우 문서의 {@link IStudioWorkflow.id}",
            "description": "현재 워크플로우 문서의 {@link IStudioWorkflow.id}.\n\n스크립트 커넥터들을 조회하면서, 현 워크플로우 문서가 중복 노출되는 일을\n막기 위함이다. 워크플로우 문서 또한 하나의 함수로써 취급되기에, 또다른\n워크플로우 문서로부터 스크립트 커넥터로 사용될 수 있기 때문이다.\n\n물론 이 값을 `null` 로 둘 시, 중복 체크는 없다. 위 상황을 스스로 회피할 것."
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "required": [
          "workflow_id"
        ],
        "description": "페이지 검색 및 요청 정보."
      },
      "IPageIStudioWorkflowScriptConnector": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowScriptConnector"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioWorkflowScriptConnector.ICreate": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "title": "대상 버킷의 경로",
            "description": "대상 버킷의 경로.\n\n참조 대상 버킷을 현행 워크플로우 기준의 상대 경로로 표현함."
          },
          "accessor": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IAstElementAccessExpression"
              },
              {
                "$ref": "#/components/schemas/IAstPropertyAccessExpression"
              },
              {
                "$ref": "#/components/schemas/IAstIdentifier"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "ElementAccessExpression": "#/components/schemas/IAstElementAccessExpression",
                "PropertyAccessExpression": "#/components/schemas/IAstPropertyAccessExpression",
                "Identifier": "#/components/schemas/IAstIdentifier"
              }
            },
            "title": "대상 함수에 대한 접근자",
            "description": "대상 함수에 대한 접근자."
          }
        },
        "required": [
          "path",
          "accessor"
        ],
        "description": "워크플로우 상 스크립트 커넥터의 입력 정보."
      },
      "IPageIStudioWorkflowSwagger": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioWorkflowSwagger"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioShelfCommitWorkflow.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioShelfCommitWorkflow.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-account.code"
                },
                {
                  "const": "-account.created_at"
                },
                {
                  "const": "+account.code"
                },
                {
                  "const": "+account.created_at"
                },
                {
                  "const": "-repository.code"
                },
                {
                  "const": "-repository.title"
                },
                {
                  "const": "-repository.created_at"
                },
                {
                  "const": "-bucket.name"
                },
                {
                  "const": "-bucket.created_at"
                },
                {
                  "const": "-bucket.updated_at"
                },
                {
                  "const": "-workflow.summary"
                },
                {
                  "const": "-workflow.title"
                },
                {
                  "const": "+repository.code"
                },
                {
                  "const": "+repository.title"
                },
                {
                  "const": "+repository.created_at"
                },
                {
                  "const": "+bucket.name"
                },
                {
                  "const": "+bucket.created_at"
                },
                {
                  "const": "+bucket.updated_at"
                },
                {
                  "const": "+workflow.summary"
                },
                {
                  "const": "+workflow.title"
                },
                {
                  "const": "-commit.updated_at"
                },
                {
                  "const": "-commit.title"
                },
                {
                  "const": "-commit.created_at"
                },
                {
                  "const": "+commit.updated_at"
                },
                {
                  "const": "+commit.title"
                },
                {
                  "const": "+commit.created_at"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 및 검색 요청 정보."
      },
      "IStudioShelfCommitWorkflow.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "repository": {
            "$ref": "#/components/schemas/IStudioRepository.IRequest.ISearch"
          },
          "commit": {
            "$ref": "#/components/schemas/IStudioRepositoryCommit.IRequest.ISearch"
          },
          "workflow": {
            "$ref": "#/components/schemas/IStudioWorkflow.IRequest.ISearch"
          },
          "schedules": {
            "type": "boolean"
          }
        }
      },
      "IPageIStudioShelfCommitWorkflow.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioShelfCommitWorkflow.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioShelfCommitWorkflow.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key.\n\n현재는 실존하지 않는 속성으로써, {@link IStudioWorkflow.id} 와 동일.\n\n향후 선반에 워크플로우를 넣고 빼는 기능이 추가될 예정이며, 그 때 의미가 부여될 것."
          },
          "repository": {
            "$ref": "#/components/schemas/IStudioRepository.ISummary",
            "title": "귀속 저장소",
            "description": "귀속 저장소."
          },
          "commit": {
            "$ref": "#/components/schemas/IStudioRepositoryCommit.ISummary",
            "title": "귀속 커밋. 가장 최신본이다",
            "description": "귀속 커밋. 가장 최신본이다."
          },
          "workflow": {
            "$ref": "#/components/schemas/IStudioWorkflow.ISummary",
            "title": "워크플로우 문서",
            "description": "워크플로우 문서."
          },
          "last_messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioShelfCommitWorkflow.ILastMessage"
            },
            "title": "유저 첫 발화 메시지",
            "description": "유저 첫 발화 메시지."
          },
          "schedules": {
            "type": "boolean",
            "title": "스케쥴 설정 여부",
            "description": "스케쥴 설정 여부."
          }
        },
        "required": [
          "id",
          "repository",
          "commit",
          "workflow",
          "last_messages",
          "schedules"
        ],
        "description": "작업 중인 워크플로우 책장의 요약 정보."
      },
      "IStudioShelfCommitWorkflow.ILastMessage": {
        "type": "object",
        "properties": {
          "role": {
            "oneOf": [
              {
                "const": "assistant"
              },
              {
                "const": "user"
              }
            ]
          },
          "message": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "role"
        ]
      },
      "IStudioShelfCommitWorkflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "repository": {
            "$ref": "#/components/schemas/IStudioRepository.IStandalone",
            "title": "귀속 저장소",
            "description": "귀속 저장소."
          },
          "commit": {
            "$ref": "#/components/schemas/IStudioRepositoryCommit",
            "title": "귀속 커밋. 가장 최신본이다",
            "description": "귀속 커밋. 가장 최신본이다."
          },
          "workflow": {
            "$ref": "#/components/schemas/IStudioWorkflow",
            "title": "워크플로우 문서",
            "description": "워크플로우 문서."
          }
        },
        "required": [
          "id",
          "repository",
          "commit",
          "workflow"
        ],
        "description": "작업 중인 워크플로우 책장에 꽂힘.\n\n`IStudioShelfCommitWorkflow` 는 고객이 \"작업장의 책장에 꽂은 워크플로우 문서\" 를\n형상화한 엔티티이다.\n\n참고로 \"작업장의 책장에 꽂혀있다\" 라는 개념은, 아직 해당\n{@link IStudioWorkflow 워크플로우 문서}가, 단 한 번도\n{@link IStudioRepositoryRelease 배포}되지 않았음을 의미한다. 만약 특정\n워크플로우 문서가 단 한 번이라도 배포된 바 있다면, 이 때는 배포장의 책장을 뜻하는\n{@link IStudioShelfReleaseWorkflow} 로 분류된다.\n\n그리고 본 엔티티 상 워크플로우의 접근 경로는 ({@link IStudioAccount 계정} ->\n{@link IStudioRepository 저장소} -> {@link IStudioRepositoryCommit 커밋} ->\n{@link IStudioWorkflow 워크플로우}) 가 아닌, 책장에서 모두 한 번에 모아보는 개념이다.\n따라서 본 엔티티에는 귀속 저장소와 커밋 정보가 함께 들어있다. 그리고 오직 가장 최신\n커밋의 워크플로우만이, 책장에 꽂힌다."
      },
      "IStudioShelfReleaseWorkflow.IRequest": {
        "type": "object",
        "properties": {
          "search": {
            "$ref": "#/components/schemas/IStudioShelfReleaseWorkflow.IRequest.ISearch"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "const": "-account.code"
                },
                {
                  "const": "-account.created_at"
                },
                {
                  "const": "+account.code"
                },
                {
                  "const": "+account.created_at"
                },
                {
                  "const": "-repository.code"
                },
                {
                  "const": "-repository.title"
                },
                {
                  "const": "-repository.created_at"
                },
                {
                  "const": "-release.document.title"
                },
                {
                  "const": "-release.version"
                },
                {
                  "const": "-release.created_at"
                },
                {
                  "const": "-release.opened_at"
                },
                {
                  "const": "-bucket.name"
                },
                {
                  "const": "-bucket.created_at"
                },
                {
                  "const": "-bucket.updated_at"
                },
                {
                  "const": "-workflow.summary"
                },
                {
                  "const": "-workflow.title"
                },
                {
                  "const": "+repository.code"
                },
                {
                  "const": "+repository.title"
                },
                {
                  "const": "+repository.created_at"
                },
                {
                  "const": "+release.document.title"
                },
                {
                  "const": "+release.version"
                },
                {
                  "const": "+release.created_at"
                },
                {
                  "const": "+release.opened_at"
                },
                {
                  "const": "+bucket.name"
                },
                {
                  "const": "+bucket.created_at"
                },
                {
                  "const": "+bucket.updated_at"
                },
                {
                  "const": "+workflow.summary"
                },
                {
                  "const": "+workflow.title"
                }
              ]
            }
          },
          "page": {
            "type": "integer",
            "title": "Page number",
            "description": "Page number."
          },
          "limit": {
            "type": "integer",
            "title": "Limitation of records per a page",
            "description": "Limitation of records per a page."
          }
        },
        "description": "페이지 및 검색 요청 정보."
      },
      "IStudioShelfReleaseWorkflow.IRequest.ISearch": {
        "type": "object",
        "properties": {
          "repository": {
            "$ref": "#/components/schemas/IStudioRepository.IRequest.ISearch"
          },
          "release": {
            "$ref": "#/components/schemas/IStudioRepositoryRelease.IRequest.ISearch"
          },
          "workflow": {
            "$ref": "#/components/schemas/IStudioWorkflow.IRequest.ISearch"
          }
        }
      },
      "IPageIStudioShelfReleaseWorkflow.ISummary": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IPage.IPagination",
            "title": "Page information",
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioShelfReleaseWorkflow.ISummary"
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "IStudioShelfReleaseWorkflow.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key.\n\n현재는 실존하지 않는 속성.  {@link IStudioWorkflow.id} 와 동일.\n\n향후 선반에 워크플로우를 넣고 빼는 기능이 추가될 예정이며, 그 때 의미가 부여될 것."
          },
          "repository": {
            "$ref": "#/components/schemas/IStudioRepository.ISummary",
            "title": "귀속 저장소",
            "description": "귀속 저장소."
          },
          "release": {
            "$ref": "#/components/schemas/IStudioRepositoryRelease.ISummary",
            "title": "귀속 커밋. 가장 최신본이다",
            "description": "귀속 커밋. 가장 최신본이다."
          },
          "node": {
            "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.ISummary",
            "title": "귀속 릴리즈 노드",
            "description": "귀속 릴리즈 노드."
          },
          "workflow": {
            "$ref": "#/components/schemas/IStudioWorkflow.ISummary",
            "title": "워크플로우 문서",
            "description": "워크플로우 문서."
          },
          "purpose": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "app"
              },
              {
                "const": "agent"
              }
            ],
            "title": "앱 구분 목적",
            "description": "앱 구분 목적."
          },
          "schedule_state": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "active"
              },
              {
                "const": "paused"
              }
            ],
            "title": "본 함수를 실행하는 스케쥴 리스트",
            "description": "본 함수를 실행하는 스케쥴 리스트."
          }
        },
        "required": [
          "id",
          "repository",
          "release",
          "node",
          "workflow",
          "purpose",
          "schedule_state"
        ],
        "description": "배포된 워크플로우 책장의 요약 정보."
      },
      "IStudioRepositoryReleaseNode.ISummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "purpose": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "app"
              },
              {
                "const": "agent"
              }
            ],
            "title": "릴리즈 추출 목적",
            "description": "릴리즈 추출 목적."
          }
        },
        "required": [
          "id",
          "purpose"
        ]
      },
      "IStudioShelfReleaseWorkflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "repository": {
            "$ref": "#/components/schemas/IStudioRepository.IStandalone",
            "title": "귀속 저장소",
            "description": "귀속 저장소."
          },
          "node": {
            "$ref": "#/components/schemas/IStudioRepositoryReleaseNode.IInvert",
            "title": "귀속 릴리즈 노드",
            "description": "귀속 릴리즈 노드."
          },
          "workflow": {
            "$ref": "#/components/schemas/IStudioWorkflow",
            "title": "워크플로우 문서",
            "description": "워크플로우 문서."
          },
          "schedule_state": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "const": "active"
              },
              {
                "const": "paused"
              }
            ],
            "title": "본 함수를 실행하는 스케쥴 리스트",
            "description": "본 함수를 실행하는 스케쥴 리스트."
          }
        },
        "required": [
          "id",
          "repository",
          "node",
          "workflow",
          "schedule_state"
        ],
        "description": "릴리즈된 워크플로우 프로그램 책장에 꽂힘.\n\n`IStudioShelfReleaseWorkflow` 는 고객이 \"배포장의 책장에 꽂은 워크플로우 문서\" 를\n형상화한 엔티티이다.\n\n참고로 \"배포장의 책장에 꽂혀있다\" 라는 개념은, 해당\n{@link IStudioWorkflow 워크플로우 문서}가, 최소 한 번 이상\n{@link IStudioRepositoryRelease 릴리즈}되었음을 뜻한다. 만약 해당 워크플로우 문서가\n아직 배포되지 않았다면, 이 때는 작업장의 책장을 뜻하는\n{@link IStudioShelfCommitWorkflow} 로 분류된다.\n\n그리고 본 엔티티 상 워크플로우의 접근 경로는 ({@link IStudioAccount 계정} ->\n{@link IStudioRepository 저장소} -> {@link IStudioRepositoryRelease 릴리즈} ->\n{@link IStudioWorkflow 워크플로우}) 가 아닌, 책장에서 모두 한 번에 모아보는 개념이다.\n따라서 본 엔티티에는 귀속 저장소와 릴리즈 정보가 함께 들어있다. 그리고 오직 가장 최신\n릴리즈의 워크플로우만이, 책장에 꽂힌다."
      },
      "IStudioShelfReleaseWorkflow.Category": {
        "type": "object",
        "properties": {
          "total_count": {
            "type": "number",
            "title": "전체 워크플로우의 갯수",
            "description": "전체 워크플로우의 갯수.\n\npurpose가 app이면 app으로 추출된 워크플로우의 갯수,\n\npurpose가 agent이면 agent로 추출된 워크플로우의 갯수."
          },
          "each_category_count": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IStudioShelfReleaseWorkflow.ReleasedWorkflowCountByCategory"
            },
            "title": "카테고리별 워크플로우의 갯수",
            "description": "카테고리별 워크플로우의 갯수."
          }
        },
        "required": [
          "total_count",
          "each_category_count"
        ]
      },
      "IStudioShelfReleaseWorkflow.ReleasedWorkflowCountByCategory": {
        "type": "object",
        "properties": {
          "category_id": {
            "type": "string",
            "format": "uuid",
            "title": "카테고리 id",
            "description": "카테고리 id."
          },
          "category_name": {
            "type": "string",
            "title": "카테고리 명",
            "description": "카테고리 명."
          },
          "count": {
            "type": "number",
            "title": "카테고리별 워크플로우의 갯수",
            "description": "카테고리별 워크플로우의 갯수."
          }
        },
        "required": [
          "category_id",
          "category_name",
          "count"
        ]
      },
      "IChatCreateSessionResponse": {
        "type": "object",
        "properties": {
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "description": "새로 생성된 채팅 세션의 uuid"
          }
        },
        "required": [
          "chatSessionId"
        ],
        "description": "새로운 채팅 세션을 생성하는 요청"
      },
      "IChatGetSessionsResponse": {
        "type": "object",
        "properties": {
          "chatSessionIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IChatSessionMetadata"
            },
            "description": "채팅 세션들의 목록"
          }
        },
        "required": [
          "chatSessionIds"
        ],
        "description": "채팅 세션의 목록 요청에 대한 응답"
      },
      "IChatSessionMetadata": {
        "type": "object",
        "properties": {
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "채팅 세션의 uuid",
            "description": "채팅 세션의 uuid."
          },
          "chatSubSessionId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "title": "채팅 세션의 제목 (없을 수도 있음)",
            "description": "채팅 세션의 제목 (없을 수도 있음)."
          },
          "repositoryCode": {
            "type": "string",
            "title": "채팅 세션이 속한 repository code",
            "description": "채팅 세션이 속한 repository code."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "채팅 세션이 생성된 시간 (UTC)",
            "description": "채팅 세션이 생성된 시간 (UTC)."
          }
        },
        "required": [
          "chatSessionId",
          "repositoryCode",
          "createdAt"
        ]
      },
      "IChatGetSessionRequest": {
        "type": "object",
        "properties": {
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "description": "가져올 채팅 세션의 uuid"
          },
          "chatSubSessionId": {
            "type": "string",
            "format": "uuid",
            "description": "가져올 채팅 세션의 서브 세션 id (없을 수도 있음)"
          }
        },
        "required": [
          "chatSessionId"
        ],
        "description": "존재하는 채팅 세션의 정보를 가져오는 요청"
      },
      "IChatGetSessionResponse": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IChatMessage.ISummary"
            },
            "description": "해당 채팅 세션의 메세지들"
          },
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "채팅 세션의 uuid",
            "description": "채팅 세션의 uuid."
          },
          "chatSubSessionId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "title": "채팅 세션의 제목 (없을 수도 있음)",
            "description": "채팅 세션의 제목 (없을 수도 있음)."
          },
          "repositoryCode": {
            "type": "string",
            "title": "채팅 세션이 속한 repository code",
            "description": "채팅 세션이 속한 repository code."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "채팅 세션이 생성된 시간 (UTC)",
            "description": "채팅 세션이 생성된 시간 (UTC)."
          }
        },
        "required": [
          "messages",
          "chatSessionId",
          "repositoryCode",
          "createdAt"
        ],
        "description": "채팅 세션의 정보"
      },
      "IChatMessage.ISummary": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IChatMessageRequest.ISummary"
          },
          {
            "$ref": "#/components/schemas/IChatActionRequest.ISummary"
          },
          {
            "$ref": "#/components/schemas/IChatAssistantMessageResponse.ISummary"
          },
          {
            "$ref": "#/components/schemas/IChatAssistantActionResponse.ISummary"
          },
          {
            "$ref": "#/components/schemas/IChatAssistantMessageActionResponse.ISummary"
          },
          {
            "$ref": "#/components/schemas/IChatAssistantErrorResponse.ISummary"
          },
          {
            "$ref": "#/components/schemas/IChatAssistantRerunResponse.ISummary"
          },
          {
            "$ref": "#/components/schemas/IChatAssistantInProgressResponse.ISummary"
          },
          {
            "$ref": "#/components/schemas/IChatSystemMessage.ISummary"
          },
          {
            "$ref": "#/components/schemas/IChatToolResult.ISummary"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "user_message": "#/components/schemas/IChatMessageRequest.ISummary",
            "user_actions": "#/components/schemas/IChatActionRequest.ISummary",
            "assistant_message": "#/components/schemas/IChatAssistantMessageResponse.ISummary",
            "assistant_action": "#/components/schemas/IChatAssistantActionResponse.ISummary",
            "assistant_message_and_actions": "#/components/schemas/IChatAssistantMessageActionResponse.ISummary",
            "assistant_error": "#/components/schemas/IChatAssistantErrorResponse.ISummary",
            "assistant_rerun": "#/components/schemas/IChatAssistantRerunResponse.ISummary",
            "assistant_in_progress": "#/components/schemas/IChatAssistantInProgressResponse.ISummary",
            "system": "#/components/schemas/IChatSystemMessage.ISummary",
            "tool": "#/components/schemas/IChatToolResult.ISummary"
          }
        }
      },
      "IChatMessageRequest.ISummary": {
        "type": "object",
        "properties": {
          "chatMessageId": {
            "type": "string",
            "format": "uuid",
            "description": "응답 메세지의 uuid"
          },
          "parentMessageId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "description": "이전 메세지의 uuid (첫 메세지일 경우 undefined)"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "생성 시점"
          },
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "메세지를 보낼 채팅 세션의 uuid",
            "description": "메세지를 보낼 채팅 세션의 uuid."
          },
          "type": {
            "const": "user_message",
            "title": "type of chat request",
            "description": "type of chat request."
          },
          "role": {
            "const": "user",
            "title": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분",
            "description": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분.\n현재는 항상 \"user\"로 보내야로 보내야함."
          },
          "message": {
            "type": "string",
            "description": "유저가 보낸 메세지"
          }
        },
        "required": [
          "chatMessageId",
          "createdAt",
          "chatSessionId",
          "type",
          "role",
          "message"
        ]
      },
      "IChatActionRequest.ISummary": {
        "type": "object",
        "properties": {
          "chatMessageId": {
            "type": "string",
            "format": "uuid",
            "description": "응답 메세지의 uuid"
          },
          "parentMessageId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "description": "이전 메세지의 uuid (첫 메세지일 경우 undefined)"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "생성 시점"
          },
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "메세지를 보낼 채팅 세션의 uuid",
            "description": "메세지를 보낼 채팅 세션의 uuid."
          },
          "type": {
            "const": "user_actions",
            "title": "type of chat request",
            "description": "type of chat request."
          },
          "role": {
            "const": "user",
            "title": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분",
            "description": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분.\n현재는 항상 \"user\"로 보내야로 보내야함."
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IChatOptionResult"
            },
            "description": "선택한 칩들의 list"
          }
        },
        "required": [
          "chatMessageId",
          "createdAt",
          "chatSessionId",
          "type",
          "role",
          "actions"
        ]
      },
      "IChatOptionResult": {
        "type": "object",
        "properties": {
          "clientAction": {
            "$ref": "#/components/schemas/IClientActionResult",
            "title": "clientAction이 있었을 경우 응답 결과를 같이 담아서 보내야함",
            "description": "clientAction이 있었을 경우 응답 결과를 같이 담아서 보내야함.\nclientAction이 없었을 경우 유저가 클릭한 칩들만 골라서 그대로 보내면 됨."
          },
          "identifier": {
            "type": "string",
            "title": "`IClientAction`안에 있는 정보만으로 api 호출이 되는 경우도 있지만 그렇지 않은 경우도 있음",
            "description": "`IClientAction`안에 있는 정보만으로 api 호출이 되는 경우도 있지만 그렇지 않은 경우도 있음.\n예를 들어서 파일 업로드를 받아야할 경우 client 쪽에서 명시적으로 핸들링을 해줘야하기 때문에 그런 경우를 identify하기 위한 필드."
          },
          "displayName": {
            "type": "string",
            "description": "유저에게 보여줄 이름"
          },
          "displayIcon": {
            "type": "string",
            "format": "uri",
            "description": "유저에게 보여줄 아이콘"
          },
          "description": {
            "type": "string",
            "title": "당장에 UI에 보여지는 건 없어서 필요없을 수도 있음",
            "description": "당장에 UI에 보여지는 건 없어서 필요없을 수도 있음."
          }
        },
        "required": [
          "displayName"
        ],
        "description": "유저가 선택한 칩"
      },
      "IClientActionResult": {
        "type": "object",
        "properties": {
          "result": {
            "description": "api를 호출한 결과"
          },
          "method": {
            "oneOf": [
              {
                "const": "GET"
              },
              {
                "const": "POST"
              },
              {
                "const": "PUT"
              },
              {
                "const": "DELETE"
              }
            ],
            "description": "api를 호출하기 위한 http method"
          },
          "apiPath": {
            "type": "string",
            "description": "api 호출을 위한 path"
          },
          "apiParameters": {
            "description": "api 호출을 위한 파라미터들 (client action 종류에 따라 headers, query, body 등으로 분리될 수도 있음)"
          }
        },
        "required": [
          "result"
        ],
        "description": "clientAction이 있었을 경우 응답 결과를 같이 담아서 보내야함."
      },
      "IChatAssistantMessageResponse.ISummary": {
        "type": "object",
        "properties": {
          "chatMessageId": {
            "type": "string",
            "format": "uuid",
            "description": "응답 메세지의 uuid"
          },
          "parentMessageId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "description": "이전 메세지의 uuid (첫 메세지일 경우 undefined)"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "생성 시점"
          },
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "메세지를 보낼 채팅 세션의 uuid",
            "description": "메세지를 보낼 채팅 세션의 uuid."
          },
          "type": {
            "const": "assistant_message",
            "title": "type of chat request",
            "description": "type of chat request."
          },
          "role": {
            "const": "assistant",
            "title": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분",
            "description": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분.\n현재는 항상 \"user\"로 보내야로 보내야함."
          },
          "workflowState": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioWorkflow"
              }
            ],
            "discriminator": {
              "propertyName": "extension",
              "mapping": {
                "workflow": "#/components/schemas/IStudioWorkflow"
              }
            },
            "description": "응답 메세지와 함께 workflow의 변경사항이 있다면 변경된 이후 workflow의 상태를 통째로 보내준다\n변경된 내역이 없다면 해당 필드는 없음.\n\nTODO: 사실 여기보다"
          },
          "message": {
            "type": "string",
            "description": "유저가 보낸 메세지"
          }
        },
        "required": [
          "chatMessageId",
          "createdAt",
          "chatSessionId",
          "type",
          "role",
          "message"
        ]
      },
      "IChatAssistantActionResponse.ISummary": {
        "type": "object",
        "properties": {
          "chatMessageId": {
            "type": "string",
            "format": "uuid",
            "description": "응답 메세지의 uuid"
          },
          "parentMessageId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "description": "이전 메세지의 uuid (첫 메세지일 경우 undefined)"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "생성 시점"
          },
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "메세지를 보낼 채팅 세션의 uuid",
            "description": "메세지를 보낼 채팅 세션의 uuid."
          },
          "type": {
            "const": "assistant_action",
            "title": "type of chat request",
            "description": "type of chat request."
          },
          "role": {
            "const": "assistant",
            "title": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분",
            "description": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분.\n현재는 항상 \"user\"로 보내야로 보내야함."
          },
          "workflowState": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioWorkflow"
              }
            ],
            "discriminator": {
              "propertyName": "extension",
              "mapping": {
                "workflow": "#/components/schemas/IStudioWorkflow"
              }
            },
            "description": "응답 메세지와 함께 workflow의 변경사항이 있다면 변경된 이후 workflow의 상태를 통째로 보내준다\n변경된 내역이 없다면 해당 필드는 없음.\n\nTODO: 사실 여기보다"
          },
          "nextActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IChatOption"
            },
            "description": "client에서 실행해야할 action들\n({@link IChatAssistantMessageActionResponse.nextActions} 때와 behavior가 달라서 다른 field로 분리하는 것이 나을 수도 있지만 일단 type은 같아서 한 필드로 통일해둠."
          }
        },
        "required": [
          "chatMessageId",
          "createdAt",
          "chatSessionId",
          "type",
          "role",
          "nextActions"
        ]
      },
      "IChatOption": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "title": "`IClientAction`안에 있는 정보만으로 api 호출이 되는 경우도 있지만 그렇지 않은 경우도 있음",
            "description": "`IClientAction`안에 있는 정보만으로 api 호출이 되는 경우도 있지만 그렇지 않은 경우도 있음.\n예를 들어서 파일 업로드를 받아야할 경우 client 쪽에서 명시적으로 핸들링을 해줘야하기 때문에 그런 경우를 identify하기 위한 필드."
          },
          "displayName": {
            "type": "string",
            "description": "유저에게 보여줄 이름"
          },
          "displayIcon": {
            "type": "string",
            "format": "uri",
            "description": "유저에게 보여줄 아이콘"
          },
          "description": {
            "type": "string",
            "title": "당장에 UI에 보여지는 건 없어서 필요없을 수도 있음",
            "description": "당장에 UI에 보여지는 건 없어서 필요없을 수도 있음."
          },
          "clientAction": {
            "$ref": "#/components/schemas/IClientAction",
            "description": "칩을 클릭했을 때 client에서 실행해야할 액션이 있을 경우 사용"
          }
        },
        "required": [
          "displayName"
        ],
        "description": "채팅 중 칩 액션을 나타내는 구조"
      },
      "IClientAction": {
        "type": "object",
        "properties": {
          "method": {
            "oneOf": [
              {
                "const": "GET"
              },
              {
                "const": "POST"
              },
              {
                "const": "PUT"
              },
              {
                "const": "DELETE"
              }
            ],
            "description": "api를 호출하기 위한 http method"
          },
          "apiPath": {
            "type": "string",
            "description": "api 호출을 위한 path"
          },
          "apiParameters": {
            "description": "api 호출을 위한 파라미터들 (client action 종류에 따라 headers, query, body 등으로 분리될 수도 있음)"
          }
        },
        "description": "클라이언트에서 실행해야할 액션을 나타내는 구조.\n현재 액션은 서버의 api를 호출하는 방식이 될거고 호출을 위해 필요한 정보들을 담고 있음.\n\nIChatOption의 identifier가 있을 경우 비어있는 객체일 수도 있음."
      },
      "IChatAssistantMessageActionResponse.ISummary": {
        "type": "object",
        "properties": {
          "chatMessageId": {
            "type": "string",
            "format": "uuid",
            "description": "응답 메세지의 uuid"
          },
          "parentMessageId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "description": "이전 메세지의 uuid (첫 메세지일 경우 undefined)"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "생성 시점"
          },
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "메세지를 보낼 채팅 세션의 uuid",
            "description": "메세지를 보낼 채팅 세션의 uuid."
          },
          "type": {
            "const": "assistant_message_and_actions",
            "title": "type of chat request",
            "description": "type of chat request."
          },
          "role": {
            "const": "assistant",
            "title": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분",
            "description": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분.\n현재는 항상 \"user\"로 보내야로 보내야함."
          },
          "workflowState": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioWorkflow"
              }
            ],
            "discriminator": {
              "propertyName": "extension",
              "mapping": {
                "workflow": "#/components/schemas/IStudioWorkflow"
              }
            },
            "description": "응답 메세지와 함께 workflow의 변경사항이 있다면 변경된 이후 workflow의 상태를 통째로 보내준다\n변경된 내역이 없다면 해당 필드는 없음.\n\nTODO: 사실 여기보다"
          },
          "message": {
            "type": "string",
            "title": "agent의 메세지",
            "description": "agent의 메세지."
          },
          "nextActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IChatOption"
            },
            "title": "유저가 선택할 수 있는 action들",
            "description": "유저가 선택할 수 있는 action들."
          }
        },
        "required": [
          "chatMessageId",
          "createdAt",
          "chatSessionId",
          "type",
          "role",
          "message",
          "nextActions"
        ]
      },
      "IChatAssistantErrorResponse.ISummary": {
        "type": "object",
        "properties": {
          "chatMessageId": {
            "type": "string",
            "format": "uuid",
            "description": "응답 메세지의 uuid"
          },
          "parentMessageId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "description": "이전 메세지의 uuid (첫 메세지일 경우 undefined)"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "생성 시점"
          },
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "메세지를 보낼 채팅 세션의 uuid",
            "description": "메세지를 보낼 채팅 세션의 uuid."
          },
          "type": {
            "const": "assistant_error",
            "title": "type of chat request",
            "description": "type of chat request."
          },
          "role": {
            "const": "assistant",
            "title": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분",
            "description": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분.\n현재는 항상 \"user\"로 보내야로 보내야함."
          },
          "workflowState": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioWorkflow"
              }
            ],
            "discriminator": {
              "propertyName": "extension",
              "mapping": {
                "workflow": "#/components/schemas/IStudioWorkflow"
              }
            },
            "description": "응답 메세지와 함께 workflow의 변경사항이 있다면 변경된 이후 workflow의 상태를 통째로 보내준다\n변경된 내역이 없다면 해당 필드는 없음.\n\nTODO: 사실 여기보다"
          },
          "errorMessage": {
            "type": "string",
            "description": "에러 메세지"
          }
        },
        "required": [
          "chatMessageId",
          "createdAt",
          "chatSessionId",
          "type",
          "role",
          "errorMessage"
        ]
      },
      "IChatAssistantRerunResponse.ISummary": {
        "type": "object",
        "properties": {
          "chatMessageId": {
            "type": "string",
            "format": "uuid",
            "description": "응답 메세지의 uuid"
          },
          "parentMessageId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "description": "이전 메세지의 uuid (첫 메세지일 경우 undefined)"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "생성 시점"
          },
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "메세지를 보낼 채팅 세션의 uuid",
            "description": "메세지를 보낼 채팅 세션의 uuid."
          },
          "type": {
            "const": "assistant_rerun",
            "title": "type of chat request",
            "description": "type of chat request."
          },
          "role": {
            "const": "assistant",
            "title": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분",
            "description": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분.\n현재는 항상 \"user\"로 보내야로 보내야함."
          },
          "workflowState": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioWorkflow"
              }
            ],
            "discriminator": {
              "propertyName": "extension",
              "mapping": {
                "workflow": "#/components/schemas/IStudioWorkflow"
              }
            },
            "description": "응답 메세지와 함께 workflow의 변경사항이 있다면 변경된 이후 workflow의 상태를 통째로 보내준다\n변경된 내역이 없다면 해당 필드는 없음.\n\nTODO: 사실 여기보다"
          }
        },
        "required": [
          "chatMessageId",
          "createdAt",
          "chatSessionId",
          "type",
          "role"
        ]
      },
      "IChatAssistantInProgressResponse.ISummary": {
        "type": "object",
        "properties": {
          "chatMessageId": {
            "type": "string",
            "format": "uuid",
            "description": "응답 메세지의 uuid"
          },
          "parentMessageId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "description": "이전 메세지의 uuid (첫 메세지일 경우 undefined)"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "생성 시점"
          },
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "메세지를 보낼 채팅 세션의 uuid",
            "description": "메세지를 보낼 채팅 세션의 uuid."
          },
          "type": {
            "const": "assistant_in_progress",
            "title": "type of chat request",
            "description": "type of chat request."
          },
          "role": {
            "const": "assistant",
            "title": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분",
            "description": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분.\n현재는 항상 \"user\"로 보내야로 보내야함."
          },
          "workflowState": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/IStudioWorkflow"
              }
            ],
            "discriminator": {
              "propertyName": "extension",
              "mapping": {
                "workflow": "#/components/schemas/IStudioWorkflow"
              }
            },
            "description": "응답 메세지와 함께 workflow의 변경사항이 있다면 변경된 이후 workflow의 상태를 통째로 보내준다\n변경된 내역이 없다면 해당 필드는 없음.\n\nTODO: 사실 여기보다"
          }
        },
        "required": [
          "chatMessageId",
          "createdAt",
          "chatSessionId",
          "type",
          "role"
        ]
      },
      "IChatSystemMessage.ISummary": {
        "type": "object",
        "properties": {
          "chatMessageId": {
            "type": "string",
            "format": "uuid",
            "description": "응답 메세지의 uuid"
          },
          "parentMessageId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "description": "이전 메세지의 uuid (첫 메세지일 경우 undefined)"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "생성 시점"
          },
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "메세지를 보낼 채팅 세션의 uuid",
            "description": "메세지를 보낼 채팅 세션의 uuid."
          },
          "type": {
            "const": "system",
            "title": "type of chat request",
            "description": "type of chat request."
          },
          "role": {
            "const": "system",
            "title": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분",
            "description": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분.\n현재는 항상 \"user\"로 보내야로 보내야함."
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "chatMessageId",
          "createdAt",
          "chatSessionId",
          "type",
          "role",
          "message"
        ]
      },
      "IChatToolResult.ISummary": {
        "type": "object",
        "properties": {
          "chatMessageId": {
            "type": "string",
            "format": "uuid",
            "description": "응답 메세지의 uuid"
          },
          "parentMessageId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "uuid"
              }
            ],
            "description": "이전 메세지의 uuid (첫 메세지일 경우 undefined)"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "생성 시점"
          },
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "메세지를 보낼 채팅 세션의 uuid",
            "description": "메세지를 보낼 채팅 세션의 uuid."
          },
          "type": {
            "const": "tool",
            "title": "type of chat request",
            "description": "type of chat request."
          },
          "role": {
            "const": "tool",
            "title": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분",
            "description": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분.\n현재는 항상 \"user\"로 보내야로 보내야함."
          },
          "result": {
            "description": "result of tool"
          },
          "executionHistoryId": {
            "type": "string",
            "description": "workflow execution history id"
          },
          "executionInput": {
            "title": "Input parameters used to invoke tool",
            "description": "Input parameters used to invoke tool.\nUsed for saving workflow invocation history when interacting with workflow as a chatbot."
          },
          "executionOutput": {
            "title": "Output of tool",
            "description": "Output of tool.\nUsed for saving workflow invocation history when interacting with workflow as a chatbot."
          }
        },
        "required": [
          "chatMessageId",
          "createdAt",
          "chatSessionId",
          "type",
          "role",
          "result"
        ],
        "description": "다른 message type과 달리 ICreate을 extend하지 않음.\nTool은 온전히 서버에서만 생성되기 때문에 ICreate에서 사용되는 정보들 중 굳이 유저에게 필요없는 정보들 존재."
      },
      "IChatMessageRequest.ICreate": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "유저가 보낸 메세지"
          },
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "메세지를 보낼 채팅 세션의 uuid",
            "description": "메세지를 보낼 채팅 세션의 uuid."
          },
          "type": {
            "const": "user_message",
            "title": "type of chat request",
            "description": "type of chat request."
          },
          "role": {
            "const": "user",
            "title": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분",
            "description": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분.\n현재는 항상 \"user\"로 보내야로 보내야함."
          }
        },
        "required": [
          "message",
          "chatSessionId",
          "type",
          "role"
        ]
      },
      "IChatActionRequest.ICreate": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IChatOptionResult"
            },
            "description": "선택한 칩들의 list"
          },
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "메세지를 보낼 채팅 세션의 uuid",
            "description": "메세지를 보낼 채팅 세션의 uuid."
          },
          "type": {
            "const": "user_actions",
            "title": "type of chat request",
            "description": "type of chat request."
          },
          "role": {
            "const": "user",
            "title": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분",
            "description": "user 가 생성한 메세지인지 assistant가 생성한 메세지인지 구분.\n현재는 항상 \"user\"로 보내야로 보내야함."
          }
        },
        "required": [
          "actions",
          "chatSessionId",
          "type",
          "role"
        ]
      },
      "IChatResponseId": {
        "type": "object",
        "properties": {
          "chatMessageId": {
            "type": "string",
            "format": "uuid",
            "description": "생성된 응답 메세지의 uuid"
          }
        },
        "required": [
          "chatMessageId"
        ],
        "description": "채팅 요청이 왔을 때 응답으로 생성된 메세지의 uuid를 보내줌\n응답 메세지 생성 상태를 확인하기 위해 사용됨"
      },
      "IChatResponseStatusRequest": {
        "type": "object",
        "properties": {
          "chatMessageId": {
            "type": "string",
            "format": "uuid",
            "description": "생성된 응답 메세지의 uuid"
          }
        },
        "required": [
          "chatMessageId"
        ],
        "description": "응답 메세지 생성 상태를 확인하는 요청"
      },
      "IChatResponseStatusResponse": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IChatResponseStatusCompletedResponse"
          },
          {
            "$ref": "#/components/schemas/IChatResponseStatusInProgressResponse"
          },
          {
            "$ref": "#/components/schemas/IChatResponseStatusFailedResponse"
          }
        ],
        "discriminator": {
          "propertyName": "status",
          "mapping": {
            "completed": "#/components/schemas/IChatResponseStatusCompletedResponse",
            "in-progress": "#/components/schemas/IChatResponseStatusInProgressResponse",
            "failed": "#/components/schemas/IChatResponseStatusFailedResponse"
          }
        }
      },
      "IChatResponseStatusCompletedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "const": "completed",
            "description": "응답 메세지 생성 상태"
          },
          "response": {
            "$ref": "#/components/schemas/IChatAssistantResponse.ISummary",
            "description": "생성이 완료되었을 경우 (\"completed\") 응답 메세지"
          }
        },
        "required": [
          "status",
          "response"
        ],
        "description": "생성 완료된 응답 메세지의 상태"
      },
      "IChatAssistantResponse.ISummary": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IChatAssistantMessageResponse.ISummary"
          },
          {
            "$ref": "#/components/schemas/IChatAssistantActionResponse.ISummary"
          },
          {
            "$ref": "#/components/schemas/IChatAssistantMessageActionResponse.ISummary"
          },
          {
            "$ref": "#/components/schemas/IChatAssistantErrorResponse.ISummary"
          },
          {
            "$ref": "#/components/schemas/IChatAssistantRerunResponse.ISummary"
          },
          {
            "$ref": "#/components/schemas/IChatAssistantInProgressResponse.ISummary"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "assistant_message": "#/components/schemas/IChatAssistantMessageResponse.ISummary",
            "assistant_action": "#/components/schemas/IChatAssistantActionResponse.ISummary",
            "assistant_message_and_actions": "#/components/schemas/IChatAssistantMessageActionResponse.ISummary",
            "assistant_error": "#/components/schemas/IChatAssistantErrorResponse.ISummary",
            "assistant_rerun": "#/components/schemas/IChatAssistantRerunResponse.ISummary",
            "assistant_in_progress": "#/components/schemas/IChatAssistantInProgressResponse.ISummary"
          }
        }
      },
      "IChatResponseStatusInProgressResponse": {
        "type": "object",
        "properties": {
          "status": {
            "const": "in-progress",
            "description": "응답 메세지 생성 상태"
          }
        },
        "required": [
          "status"
        ],
        "description": "생성 진행 중인 응답 메세지의 상태"
      },
      "IChatResponseStatusFailedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "const": "failed",
            "description": "응답 메세지 생성 상태"
          },
          "error": {
            "description": "답변 생성이 실패했을 경우 실패 원인\n아직 상세한 스펙은 TBD"
          },
          "httpStatusError": {
            "title": "다른 api와 동일하게 http exception 형태로 변환할 수 있다면 변환",
            "description": "다른 api와 동일하게 http exception 형태로 변환할 수 있다면 변환."
          }
        },
        "required": [
          "status",
          "error"
        ],
        "description": "생성 실패한 응답 메세지의 상태\n실패한 경우 재요청을 해야 이후 채팅이 재개됨"
      },
      "IChatGetPresignedUrlRequest": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "title": "유저가 업로드하려는 파일의 이름",
            "description": "유저가 업로드하려는 파일의 이름."
          }
        },
        "required": [
          "fileName"
        ]
      },
      "IChatGetPresignedUrlResponse": {
        "type": "object",
        "properties": {
          "fileUploadUrl": {
            "type": "string",
            "title": "파일 업로드를 위한 presigned url",
            "description": "파일 업로드를 위한 presigned url."
          },
          "s3Url": {
            "type": "string",
            "format": "uri",
            "title": "업로드된 파일의 s3 url",
            "description": "업로드된 파일의 s3 url."
          }
        },
        "required": [
          "fileUploadUrl",
          "s3Url"
        ]
      },
      "IChatAutoFillRequest": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/IAstElementAccessExpression",
            "title": "statement 에서 채우려고 하는 field",
            "description": "statement 에서 채우려고 하는 field.\n기본적으로 모든 parameter는 배열의 한 원소이니 ElementAccessExpression으로 표현됨."
          },
          "consideration": {
            "type": "string",
            "title": "채울 때 유저의 요청사항",
            "description": "채울 때 유저의 요청사항.\n필수는 아니지만 있으면 유저가 원하는 값을 보여줄 수 있음."
          }
        },
        "required": [
          "field"
        ]
      },
      "IChatAutofillResponse": {
        "type": "object",
        "properties": {
          "chatMessageId": {
            "type": "string",
            "format": "uuid",
            "title": "assistant 메세지의 uuid",
            "description": "assistant 메세지의 uuid."
          },
          "chatSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "autofill 요청이 들어있는 채팅 session uuid",
            "description": "autofill 요청이 들어있는 채팅 session uuid."
          },
          "chatSubSessionId": {
            "type": "string",
            "format": "uuid",
            "title": "autofill 요청이 들어있는 채팅 subSessionId",
            "description": "autofill 요청이 들어있는 채팅 subSessionId.\nautofill 요청은 기존 채팅 세션과 다른 subSession에서 진행되어서 기존 채팅세션의 과거내역은 가지고 있지만 메인 채팅 세션에 추가되지는 않음."
          }
        },
        "required": [
          "chatMessageId",
          "chatSessionId",
          "chatSubSessionId"
        ]
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Monitor"
    },
    {
      "name": "Admin"
    },
    {
      "name": "Authenticate"
    },
    {
      "name": "Coupon"
    },
    {
      "name": "Deposit"
    },
    {
      "name": "Issue"
    },
    {
      "name": "Order"
    },
    {
      "name": "PushMessage"
    },
    {
      "name": "Sale"
    },
    {
      "name": "Inquiry"
    },
    {
      "name": "Systematic"
    },
    {
      "name": "Statistics"
    },
    {
      "name": "SSO"
    },
    {
      "name": "commons"
    },
    {
      "name": "Cart"
    },
    {
      "name": "Like"
    },
    {
      "name": "Account"
    },
    {
      "name": "Enterprise"
    },
    {
      "name": "Meta"
    },
    {
      "name": "Repository"
    },
    {
      "name": "Workflow"
    },
    {
      "name": "Shelves"
    },
    {
      "name": "Chat"
    }
  ],
  "x-samchon-emended": true
}